#Code converted on 2023-07-24 08:13:48
import os
import argparse
from pyspark.sql import *
from pyspark.sql.functions import *
from pyspark.sql.window import Window
from pyspark.sql.types import *
from datetime import datetime
from Datalake.utils.genericUtilities import *
from Datalake.utils.configs import *
from Datalake.utils.mergeUtils import *
from Datalake.utils.logger import *
# COMMAND ----------

parser = argparse.ArgumentParser()
spark = SparkSession.getActiveSession()
parser.add_argument('env', type=str, help='Env Variable')
args = parser.parse_args()
env = args.env

if env is None or env == '':
    raise ValueError('env is not set')

refine = getEnvPrefix(env) + 'refine'
raw = getEnvPrefix(env) + 'raw'
legacy = getEnvPrefix(env) + 'legacy'


# COMMAND ----------
# Processing node SQ_Shortcut_to_SDS_ASSET_PRE, type SOURCE 
# COLUMN COUNT: 76

SQ_Shortcut_to_SDS_ASSET_PRE = spark.sql(f"""SELECT
ID,
CONTACT_ID,
ACCOUNT_ID,
PARENT_ID,
ROOT_ASSET_ID,
PRODUCT2_ID,
PRODUCT_CODE,
IS_COMPETITOR_PRODUCT,
CREATED_DATE,
CREATED_BY_ID,
LAST_MODIFIED_DATE,
LAST_MODIFIED_BY_ID,
SYSTEM_MOD_STAMP,
IS_DELETED,
CURRENCY_ISO_CODE,
NAME,
SERIAL_NUMBER,
INSTALL_DATE,
PURCHASE_DATE,
USAGE_END_DATE,
STATUS,
PRICE,
QUANTITY,
DESCRIPTION,
OWNER_ID,
LOCATION_ID,
ASSET_PROVIDED_BY_ID,
ASSET_SERVICED_BY_ID,
IS_INTERNAL,
ASSET_LEVEL,
STOCK_KEEPING_UNIT,
LAST_VIEWED_DATE,
LAST_REFERENCED_DATE,
PSVC_ACTIVE_C,
PSVC_ALLERGIES_C,
PSVC_ARTHRITIS_C,
PSVC_BIRTHDATE_C,
PSVC_BLIND_C,
PSVC_BLOAT_C,
PSVC_BREED_C,
PSVC_CANCER_C,
PSVC_COLOR_C,
PSVC_FLEA_TICK_TREATMENT_C,
PSVC_GROOMING_BOOKING_ALERT_TEXT_C,
PSVC_GROOMING_CHECK_IN_ALERT_TEXT_C,
PSVC_GROOMING_CHECK_OUT_ALERT_TEXT_C,
PSVC_GROOMING_PET_RATING_C,
PSVC_GROOMING_RATING_REASON_C,
PSVC_GROOMING_SERVICE_CARD_ALERT_TEXT_C,
PSVC_HEART_CONDITION_C,
PSVC_IN_HEAT_C,
PSVC_INJURIES_C,
PSVC_MARKING_C,
PSVC_MIX_C,
PSVC_VET_NAME_C,
PSVC_OTHER_ISSUES_C,
PSVC_PODS_PET_ID_C,
PSVC_PHYSICAL_LIMITATIONS_C,
PSVC_PREGNANT_NURSING_C,
PSVC_RESPIRATORY_DISEASE_C,
PSVC_SMS_PET_ID_C,
PSVC_SEDATION_WHEN_GROOMED_C,
PSVC_SEIZURES_C,
PSVC_SERVICE_NOTES_C,
PSVC_SEX_C,
PSVC_SPAYED_NEUTERED_C,
PSVC_SPECIES_C,
PSVC_THYROID_DISEASE_C,
PSVC_WEIGHT_LBS_C,
PSVC_BREED_TEXT_C,
PSVC_BORDETELLA_EXPIRATION_DATE_C,
PSVC_DISTEMPER_EXPIRATION_DATE_C,
PSVC_FVRCCP_EXPIRATION_DATE_C,
PSVC_PARAINFLUENZA_EXPIRATION_DATE_C,
PSVC_PARVOVIRUS_EXPIRATION_DATE_C,
PSVC_RABIES_EXPIRATION_DATE_C
FROM {raw}.SDS_ASSET_PRE""").withColumn("sys_row_id", monotonically_increasing_id())

# COMMAND ----------
# Processing node SQ_Shortcut_to_SDS_ASSET, type SOURCE 
# COLUMN COUNT: 5

SQ_Shortcut_to_SDS_ASSET = spark.sql(f"""SELECT
SDS_ASSET_ID,
SDS_SYSTEM_MODIFIED_TSTMP,
SDS_LAST_MODIFIED_TSTMP,
SDS_CREATED_TSTMP,
LOAD_TSTMP
FROM {legacy}.SDS_ASSET""").withColumn("sys_row_id", monotonically_increasing_id())

# COMMAND ----------
# Processing node JNR_SDS_ASSET, type JOINER . Note: using additional SELECT to rename incoming columns
# COLUMN COUNT: 81

# for each involved DataFrame, append the dataframe name to each column
SQ_Shortcut_to_SDS_ASSET_temp = SQ_Shortcut_to_SDS_ASSET.toDF(*["SQ_Shortcut_to_SDS_ASSET___" + col for col in SQ_Shortcut_to_SDS_ASSET.columns])
SQ_Shortcut_to_SDS_ASSET_PRE_temp = SQ_Shortcut_to_SDS_ASSET_PRE.toDF(*["SQ_Shortcut_to_SDS_ASSET_PRE___" + col for col in SQ_Shortcut_to_SDS_ASSET_PRE.columns])

JNR_SDS_ASSET = SQ_Shortcut_to_SDS_ASSET_temp_PRE.join(SQ_Shortcut_to_SDS_ASSET_temp,[SQ_Shortcut_to_SDS_ASSET_PRE_temp.SQ_Shortcut_to_SDS_ASSET_PRE___ID == SQ_Shortcut_to_SDS_ASSET_temp.SQ_Shortcut_to_SDS_ASSET___SDS_ASSET_ID],'left_outer').selectExpr(
	"SQ_Shortcut_to_SDS_ASSET___SDS_ASSET_ID as i_SDS_ASSET_ID",
	"SQ_Shortcut_to_SDS_ASSET___SDS_SYSTEM_MODIFIED_TSTMP as i_SDS_SYSTEM_MODIFIED_TSTMP",
	"SQ_Shortcut_to_SDS_ASSET___SDS_LAST_MODIFIED_TSTMP as i_SDS_LAST_MODIFIED_TSTMP",
	"SQ_Shortcut_to_SDS_ASSET___SDS_CREATED_TSTMP as i_SDS_CREATED_TSTMP",
	"SQ_Shortcut_to_SDS_ASSET___LOAD_TSTMP as i_LOAD_TSTMP",
	"SQ_Shortcut_to_SDS_ASSET_PRE___ID as ID",
	"SQ_Shortcut_to_SDS_ASSET_PRE___CONTACT_ID as CONTACT_ID",
	"SQ_Shortcut_to_SDS_ASSET_PRE___ACCOUNT_ID as ACCOUNT_ID",
	"SQ_Shortcut_to_SDS_ASSET_PRE___PARENT_ID as PARENT_ID",
	"SQ_Shortcut_to_SDS_ASSET_PRE___ROOT_ASSET_ID as ROOT_ASSET_ID",
	"SQ_Shortcut_to_SDS_ASSET_PRE___PRODUCT2_ID as PRODUCT2_ID",
	"SQ_Shortcut_to_SDS_ASSET_PRE___PRODUCT_CODE as PRODUCT_CODE",
	"SQ_Shortcut_to_SDS_ASSET_PRE___IS_COMPETITOR_PRODUCT as IS_COMPETITOR_PRODUCT",
	"SQ_Shortcut_to_SDS_ASSET_PRE___CREATED_DATE as CREATED_DATE",
	"SQ_Shortcut_to_SDS_ASSET_PRE___CREATED_BY_ID as CREATED_BY_ID",
	"SQ_Shortcut_to_SDS_ASSET_PRE___LAST_MODIFIED_DATE as LAST_MODIFIED_DATE",
	"SQ_Shortcut_to_SDS_ASSET_PRE___LAST_MODIFIED_BY_ID as LAST_MODIFIED_BY_ID",
	"SQ_Shortcut_to_SDS_ASSET_PRE___SYSTEM_MOD_STAMP as SYSTEM_MOD_STAMP",
	"SQ_Shortcut_to_SDS_ASSET_PRE___IS_DELETED as IS_DELETED",
	"SQ_Shortcut_to_SDS_ASSET_PRE___CURRENCY_ISO_CODE as CURRENCY_ISO_CODE",
	"SQ_Shortcut_to_SDS_ASSET_PRE___NAME as NAME",
	"SQ_Shortcut_to_SDS_ASSET_PRE___SERIAL_NUMBER as SERIAL_NUMBER",
	"SQ_Shortcut_to_SDS_ASSET_PRE___INSTALL_DATE as INSTALL_DATE",
	"SQ_Shortcut_to_SDS_ASSET_PRE___PURCHASE_DATE as PURCHASE_DATE",
	"SQ_Shortcut_to_SDS_ASSET_PRE___USAGE_END_DATE as USAGE_END_DATE",
	"SQ_Shortcut_to_SDS_ASSET_PRE___STATUS as STATUS",
	"SQ_Shortcut_to_SDS_ASSET_PRE___PRICE as PRICE",
	"SQ_Shortcut_to_SDS_ASSET_PRE___QUANTITY as QUANTITY",
	"SQ_Shortcut_to_SDS_ASSET_PRE___DESCRIPTION as DESCRIPTION",
	"SQ_Shortcut_to_SDS_ASSET_PRE___OWNER_ID as OWNER_ID",
	"SQ_Shortcut_to_SDS_ASSET_PRE___LOCATION_ID as LOCATION_ID",
	"SQ_Shortcut_to_SDS_ASSET_PRE___ASSET_PROVIDED_BY_ID as ASSET_PROVIDED_BY_ID",
	"SQ_Shortcut_to_SDS_ASSET_PRE___ASSET_SERVICED_BY_ID as ASSET_SERVICED_BY_ID",
	"SQ_Shortcut_to_SDS_ASSET_PRE___IS_INTERNAL as IS_INTERNAL",
	"SQ_Shortcut_to_SDS_ASSET_PRE___ASSET_LEVEL as ASSET_LEVEL",
	"SQ_Shortcut_to_SDS_ASSET_PRE___STOCK_KEEPING_UNIT as STOCK_KEEPING_UNIT",
	"SQ_Shortcut_to_SDS_ASSET_PRE___LAST_VIEWED_DATE as LAST_VIEWED_DATE",
	"SQ_Shortcut_to_SDS_ASSET_PRE___LAST_REFERENCED_DATE as LAST_REFERENCED_DATE",
	"SQ_Shortcut_to_SDS_ASSET_PRE___PSVC_ACTIVE_C as PSVC_ACTIVE_C",
	"SQ_Shortcut_to_SDS_ASSET_PRE___PSVC_ALLERGIES_C as PSVC_ALLERGIES_C",
	"SQ_Shortcut_to_SDS_ASSET_PRE___PSVC_ARTHRITIS_C as PSVC_ARTHRITIS_C",
	"SQ_Shortcut_to_SDS_ASSET_PRE___PSVC_BIRTHDATE_C as PSVC_BIRTHDATE_C",
	"SQ_Shortcut_to_SDS_ASSET_PRE___PSVC_BLIND_C as PSVC_BLIND_C",
	"SQ_Shortcut_to_SDS_ASSET_PRE___PSVC_BLOAT_C as PSVC_BLOAT_C",
	"SQ_Shortcut_to_SDS_ASSET_PRE___PSVC_BREED_C as PSVC_BREED_C",
	"SQ_Shortcut_to_SDS_ASSET_PRE___PSVC_CANCER_C as PSVC_CANCER_C",
	"SQ_Shortcut_to_SDS_ASSET_PRE___PSVC_COLOR_C as PSVC_COLOR_C",
	"SQ_Shortcut_to_SDS_ASSET_PRE___PSVC_FLEA_TICK_TREATMENT_C as PSVC_FLEA_TICK_TREATMENT_C",
	"SQ_Shortcut_to_SDS_ASSET_PRE___PSVC_GROOMING_BOOKING_ALERT_TEXT_C as PSVC_GROOMING_BOOKING_ALERT_TEXT_C",
	"SQ_Shortcut_to_SDS_ASSET_PRE___PSVC_GROOMING_CHECK_IN_ALERT_TEXT_C as PSVC_GROOMING_CHECK_IN_ALERT_TEXT_C",
	"SQ_Shortcut_to_SDS_ASSET_PRE___PSVC_GROOMING_CHECK_OUT_ALERT_TEXT_C as PSVC_GROOMING_CHECK_OUT_ALERT_TEXT_C",
	"SQ_Shortcut_to_SDS_ASSET_PRE___PSVC_GROOMING_PET_RATING_C as PSVC_GROOMING_PET_RATING_C",
	"SQ_Shortcut_to_SDS_ASSET_PRE___PSVC_GROOMING_RATING_REASON_C as PSVC_GROOMING_RATING_REASON_C",
	"SQ_Shortcut_to_SDS_ASSET_PRE___PSVC_GROOMING_SERVICE_CARD_ALERT_TEXT_C as PSVC_GROOMING_SERVICE_CARD_ALERT_TEXT_C",
	"SQ_Shortcut_to_SDS_ASSET_PRE___PSVC_HEART_CONDITION_C as PSVC_HEART_CONDITION_C",
	"SQ_Shortcut_to_SDS_ASSET_PRE___PSVC_IN_HEAT_C as PSVC_IN_HEAT_C",
	"SQ_Shortcut_to_SDS_ASSET_PRE___PSVC_INJURIES_C as PSVC_INJURIES_C",
	"SQ_Shortcut_to_SDS_ASSET_PRE___PSVC_MARKING_C as PSVC_MARKING_C",
	"SQ_Shortcut_to_SDS_ASSET_PRE___PSVC_MIX_C as PSVC_MIX_C",
	"SQ_Shortcut_to_SDS_ASSET_PRE___PSVC_VET_NAME_C as PSVC_VET_NAME_C",
	"SQ_Shortcut_to_SDS_ASSET_PRE___PSVC_OTHER_ISSUES_C as PSVC_OTHER_ISSUES_C",
	"SQ_Shortcut_to_SDS_ASSET_PRE___PSVC_PODS_PET_ID_C as PSVC_PODS_PET_ID_C",
	"SQ_Shortcut_to_SDS_ASSET_PRE___PSVC_PHYSICAL_LIMITATIONS_C as PSVC_PHYSICAL_LIMITATIONS_C",
	"SQ_Shortcut_to_SDS_ASSET_PRE___PSVC_PREGNANT_NURSING_C as PSVC_PREGNANT_NURSING_C",
	"SQ_Shortcut_to_SDS_ASSET_PRE___PSVC_RESPIRATORY_DISEASE_C as PSVC_RESPIRATORY_DISEASE_C",
	"SQ_Shortcut_to_SDS_ASSET_PRE___PSVC_SMS_PET_ID_C as PSVC_SMS_PET_ID_C",
	"SQ_Shortcut_to_SDS_ASSET_PRE___PSVC_SEDATION_WHEN_GROOMED_C as PSVC_SEDATION_WHEN_GROOMED_C",
	"SQ_Shortcut_to_SDS_ASSET_PRE___PSVC_SEIZURES_C as PSVC_SEIZURES_C",
	"SQ_Shortcut_to_SDS_ASSET_PRE___PSVC_SERVICE_NOTES_C as PSVC_SERVICE_NOTES_C",
	"SQ_Shortcut_to_SDS_ASSET_PRE___PSVC_SEX_C as PSVC_SEX_C",
	"SQ_Shortcut_to_SDS_ASSET_PRE___PSVC_SPAYED_NEUTERED_C as PSVC_SPAYED_NEUTERED_C",
	"SQ_Shortcut_to_SDS_ASSET_PRE___PSVC_SPECIES_C as PSVC_SPECIES_C",
	"SQ_Shortcut_to_SDS_ASSET_PRE___PSVC_THYROID_DISEASE_C as PSVC_THYROID_DISEASE_C",
	"SQ_Shortcut_to_SDS_ASSET_PRE___PSVC_WEIGHT_LBS_C as PSVC_WEIGHT_LBS_C",
	"SQ_Shortcut_to_SDS_ASSET_PRE___PSVC_BREED_TEXT_C as PSVC_BREED_TEXT_C",
	"SQ_Shortcut_to_SDS_ASSET_PRE___PSVC_BORDETELLA_EXPIRATION_DATE_C as PSVC_BORDETELLA_EXPIRATION_DATE_C",
	"SQ_Shortcut_to_SDS_ASSET_PRE___PSVC_DISTEMPER_EXPIRATION_DATE_C as PSVC_DISTEMPER_EXPIRATION_DATE_C",
	"SQ_Shortcut_to_SDS_ASSET_PRE___PSVC_FVRCCP_EXPIRATION_DATE_C as PSVC_FVRCCP_EXPIRATION_DATE_C",
	"SQ_Shortcut_to_SDS_ASSET_PRE___PSVC_PARAINFLUENZA_EXPIRATION_DATE_C as PSVC_PARAINFLUENZA_EXPIRATION_DATE_C",
	"SQ_Shortcut_to_SDS_ASSET_PRE___PSVC_PARVOVIRUS_EXPIRATION_DATE_C as PSVC_PARVOVIRUS_EXPIRATION_DATE_C",
	"SQ_Shortcut_to_SDS_ASSET_PRE___PSVC_RABIES_EXPIRATION_DATE_C as PSVC_RABIES_EXPIRATION_DATE_C")

# COMMAND ----------
# Processing node FIL_SDS_ASSET, type FILTER 
# COLUMN COUNT: 81

# for each involved DataFrame, append the dataframe name to each column
JNR_SDS_ASSET_temp = JNR_SDS_ASSET.toDF(*["JNR_SDS_ASSET___" + col for col in JNR_SDS_ASSET.columns])

FIL_SDS_ASSET = JNR_SDS_ASSET_temp.selectExpr(
	"JNR_SDS_ASSET___i_SDS_ASSET_ID as i_SDS_ASSET_ID",
	"JNR_SDS_ASSET___i_SDS_SYSTEM_MODIFIED_TSTMP as i_SDS_SYSTEM_MODIFIED_TSTMP",
	"JNR_SDS_ASSET___i_SDS_LAST_MODIFIED_TSTMP as i_SDS_LAST_MODIFIED_TSTMP",
	"JNR_SDS_ASSET___i_SDS_CREATED_TSTMP as i_SDS_CREATED_TSTMP",
	"JNR_SDS_ASSET___i_LOAD_TSTMP as i_LOAD_TSTMP",
	"JNR_SDS_ASSET___ID as ID",
	"JNR_SDS_ASSET___CONTACT_ID as CONTACT_ID",
	"JNR_SDS_ASSET___ACCOUNT_ID as ACCOUNT_ID",
	"JNR_SDS_ASSET___PARENT_ID as PARENT_ID",
	"JNR_SDS_ASSET___ROOT_ASSET_ID as ROOT_ASSET_ID",
	"JNR_SDS_ASSET___PRODUCT2_ID as PRODUCT2_ID",
	"JNR_SDS_ASSET___PRODUCT_CODE as PRODUCT_CODE",
	"JNR_SDS_ASSET___IS_COMPETITOR_PRODUCT as IS_COMPETITOR_PRODUCT",
	"JNR_SDS_ASSET___CREATED_DATE as CREATED_DATE",
	"JNR_SDS_ASSET___CREATED_BY_ID as CREATED_BY_ID",
	"JNR_SDS_ASSET___LAST_MODIFIED_DATE as LAST_MODIFIED_DATE",
	"JNR_SDS_ASSET___LAST_MODIFIED_BY_ID as LAST_MODIFIED_BY_ID",
	"JNR_SDS_ASSET___SYSTEM_MOD_STAMP as SYSTEM_MOD_STAMP",
	"JNR_SDS_ASSET___IS_DELETED as IS_DELETED",
	"JNR_SDS_ASSET___CURRENCY_ISO_CODE as CURRENCY_ISO_CODE",
	"JNR_SDS_ASSET___NAME as NAME",
	"JNR_SDS_ASSET___SERIAL_NUMBER as SERIAL_NUMBER",
	"JNR_SDS_ASSET___INSTALL_DATE as INSTALL_DATE",
	"JNR_SDS_ASSET___PURCHASE_DATE as PURCHASE_DATE",
	"JNR_SDS_ASSET___USAGE_END_DATE as USAGE_END_DATE",
	"JNR_SDS_ASSET___STATUS as STATUS",
	"JNR_SDS_ASSET___PRICE as PRICE",
	"JNR_SDS_ASSET___QUANTITY as QUANTITY",
	"JNR_SDS_ASSET___DESCRIPTION as DESCRIPTION",
	"JNR_SDS_ASSET___OWNER_ID as OWNER_ID",
	"JNR_SDS_ASSET___LOCATION_ID as LOCATION_ID",
	"JNR_SDS_ASSET___ASSET_PROVIDED_BY_ID as ASSET_PROVIDED_BY_ID",
	"JNR_SDS_ASSET___ASSET_SERVICED_BY_ID as ASSET_SERVICED_BY_ID",
	"JNR_SDS_ASSET___IS_INTERNAL as IS_INTERNAL",
	"JNR_SDS_ASSET___ASSET_LEVEL as ASSET_LEVEL",
	"JNR_SDS_ASSET___STOCK_KEEPING_UNIT as STOCK_KEEPING_UNIT",
	"JNR_SDS_ASSET___LAST_VIEWED_DATE as LAST_VIEWED_DATE",
	"JNR_SDS_ASSET___LAST_REFERENCED_DATE as LAST_REFERENCED_DATE",
	"JNR_SDS_ASSET___PSVC_ACTIVE_C as PSVC_ACTIVE_C",
	"JNR_SDS_ASSET___PSVC_ALLERGIES_C as PSVC_ALLERGIES_C",
	"JNR_SDS_ASSET___PSVC_ARTHRITIS_C as PSVC_ARTHRITIS_C",
	"JNR_SDS_ASSET___PSVC_BIRTHDATE_C as PSVC_BIRTHDATE_C",
	"JNR_SDS_ASSET___PSVC_BLIND_C as PSVC_BLIND_C",
	"JNR_SDS_ASSET___PSVC_BLOAT_C as PSVC_BLOAT_C",
	"JNR_SDS_ASSET___PSVC_BREED_C as PSVC_BREED_C",
	"JNR_SDS_ASSET___PSVC_CANCER_C as PSVC_CANCER_C",
	"JNR_SDS_ASSET___PSVC_COLOR_C as PSVC_COLOR_C",
	"JNR_SDS_ASSET___PSVC_FLEA_TICK_TREATMENT_C as PSVC_FLEA_TICK_TREATMENT_C",
	"JNR_SDS_ASSET___PSVC_GROOMING_BOOKING_ALERT_TEXT_C as PSVC_GROOMING_BOOKING_ALERT_TEXT_C",
	"JNR_SDS_ASSET___PSVC_GROOMING_CHECK_IN_ALERT_TEXT_C as PSVC_GROOMING_CHECK_IN_ALERT_TEXT_C",
	"JNR_SDS_ASSET___PSVC_GROOMING_CHECK_OUT_ALERT_TEXT_C as PSVC_GROOMING_CHECK_OUT_ALERT_TEXT_C",
	"JNR_SDS_ASSET___PSVC_GROOMING_PET_RATING_C as PSVC_GROOMING_PET_RATING_C",
	"JNR_SDS_ASSET___PSVC_GROOMING_RATING_REASON_C as PSVC_GROOMING_RATING_REASON_C",
	"JNR_SDS_ASSET___PSVC_GROOMING_SERVICE_CARD_ALERT_TEXT_C as PSVC_GROOMING_SERVICE_CARD_ALERT_TEXT_C",
	"JNR_SDS_ASSET___PSVC_HEART_CONDITION_C as PSVC_HEART_CONDITION_C",
	"JNR_SDS_ASSET___PSVC_IN_HEAT_C as PSVC_IN_HEAT_C",
	"JNR_SDS_ASSET___PSVC_INJURIES_C as PSVC_INJURIES_C",
	"JNR_SDS_ASSET___PSVC_MARKING_C as PSVC_MARKING_C",
	"JNR_SDS_ASSET___PSVC_MIX_C as PSVC_MIX_C",
	"JNR_SDS_ASSET___PSVC_VET_NAME_C as PSVC_VET_NAME_C",
	"JNR_SDS_ASSET___PSVC_OTHER_ISSUES_C as PSVC_OTHER_ISSUES_C",
	"JNR_SDS_ASSET___PSVC_PODS_PET_ID_C as PSVC_PODS_PET_ID_C",
	"JNR_SDS_ASSET___PSVC_PHYSICAL_LIMITATIONS_C as PSVC_PHYSICAL_LIMITATIONS_C",
	"JNR_SDS_ASSET___PSVC_PREGNANT_NURSING_C as PSVC_PREGNANT_NURSING_C",
	"JNR_SDS_ASSET___PSVC_RESPIRATORY_DISEASE_C as PSVC_RESPIRATORY_DISEASE_C",
	"JNR_SDS_ASSET___PSVC_SMS_PET_ID_C as PSVC_SMS_PET_ID_C",
	"JNR_SDS_ASSET___PSVC_SEDATION_WHEN_GROOMED_C as PSVC_SEDATION_WHEN_GROOMED_C",
	"JNR_SDS_ASSET___PSVC_SEIZURES_C as PSVC_SEIZURES_C",
	"JNR_SDS_ASSET___PSVC_SERVICE_NOTES_C as PSVC_SERVICE_NOTES_C",
	"JNR_SDS_ASSET___PSVC_SEX_C as PSVC_SEX_C",
	"JNR_SDS_ASSET___PSVC_SPAYED_NEUTERED_C as PSVC_SPAYED_NEUTERED_C",
	"JNR_SDS_ASSET___PSVC_SPECIES_C as PSVC_SPECIES_C",
	"JNR_SDS_ASSET___PSVC_THYROID_DISEASE_C as PSVC_THYROID_DISEASE_C",
	"JNR_SDS_ASSET___PSVC_WEIGHT_LBS_C as PSVC_WEIGHT_LBS_C",
	"JNR_SDS_ASSET___PSVC_BREED_TEXT_C as PSVC_BREED_TEXT_C",
	"JNR_SDS_ASSET___PSVC_BORDETELLA_EXPIRATION_DATE_C as PSVC_BORDETELLA_EXPIRATION_DATE_C",
	"JNR_SDS_ASSET___PSVC_DISTEMPER_EXPIRATION_DATE_C as PSVC_DISTEMPER_EXPIRATION_DATE_C",
	"JNR_SDS_ASSET___PSVC_FVRCCP_EXPIRATION_DATE_C as PSVC_FVRCCP_EXPIRATION_DATE_C",
	"JNR_SDS_ASSET___PSVC_PARAINFLUENZA_EXPIRATION_DATE_C as PSVC_PARAINFLUENZA_EXPIRATION_DATE_C",
	"JNR_SDS_ASSET___PSVC_PARVOVIRUS_EXPIRATION_DATE_C as PSVC_PARVOVIRUS_EXPIRATION_DATE_C",
	"JNR_SDS_ASSET___PSVC_RABIES_EXPIRATION_DATE_C as PSVC_RABIES_EXPIRATION_DATE_C").filter("i_SDS_ASSET_ID IS NULL OR ( i_SDS_ASSET_ID IS NOT NULL AND ( i_SDS_SYSTEM_MODIFIED_TSTMP != SYSTEM_MOD_STAMP OR i_SDS_CREATED_TSTMP != CREATED_DATE OR i_SDS_LAST_MODIFIED_TSTMP != LAST_MODIFIED_DATE ) )").withColumn("sys_row_id", monotonically_increasing_id())

# COMMAND ----------
# Processing node EXP_SDS_ASSET, type EXPRESSION 
# COLUMN COUNT: 79

# for each involved DataFrame, append the dataframe name to each column
FIL_SDS_ASSET_temp = FIL_SDS_ASSET.toDF(*["FIL_SDS_ASSET___" + col for col in FIL_SDS_ASSET.columns])

EXP_SDS_ASSET = FIL_SDS_ASSET_temp.selectExpr(
	"FIL_SDS_ASSET___sys_row_id as sys_row_id",
	"FIL_SDS_ASSET___ID as ID",
	"FIL_SDS_ASSET___CONTACT_ID as CONTACT_ID",
	"FIL_SDS_ASSET___ACCOUNT_ID as ACCOUNT_ID",
	"FIL_SDS_ASSET___PARENT_ID as PARENT_ID",
	"FIL_SDS_ASSET___ROOT_ASSET_ID as ROOT_ASSET_ID",
	"FIL_SDS_ASSET___PRODUCT2_ID as PRODUCT2_ID",
	"FIL_SDS_ASSET___PRODUCT_CODE as PRODUCT_CODE",
	"FIL_SDS_ASSET___IS_COMPETITOR_PRODUCT as IS_COMPETITOR_PRODUCT",
	"FIL_SDS_ASSET___CREATED_DATE as CREATED_DATE",
	"FIL_SDS_ASSET___CREATED_BY_ID as CREATED_BY_ID",
	"FIL_SDS_ASSET___LAST_MODIFIED_DATE as LAST_MODIFIED_DATE",
	"FIL_SDS_ASSET___LAST_MODIFIED_BY_ID as LAST_MODIFIED_BY_ID",
	"FIL_SDS_ASSET___SYSTEM_MOD_STAMP as SYSTEM_MOD_STAMP",
	"FIL_SDS_ASSET___IS_DELETED as IS_DELETED",
	"FIL_SDS_ASSET___CURRENCY_ISO_CODE as CURRENCY_ISO_CODE",
	"FIL_SDS_ASSET___NAME as NAME",
	"FIL_SDS_ASSET___SERIAL_NUMBER as SERIAL_NUMBER",
	"FIL_SDS_ASSET___INSTALL_DATE as INSTALL_DATE",
	"FIL_SDS_ASSET___PURCHASE_DATE as PURCHASE_DATE",
	"FIL_SDS_ASSET___USAGE_END_DATE as USAGE_END_DATE",
	"FIL_SDS_ASSET___STATUS as STATUS",
	"FIL_SDS_ASSET___PRICE as PRICE",
	"FIL_SDS_ASSET___QUANTITY as QUANTITY",
	"FIL_SDS_ASSET___DESCRIPTION as DESCRIPTION",
	"FIL_SDS_ASSET___OWNER_ID as OWNER_ID",
	"FIL_SDS_ASSET___LOCATION_ID as LOCATION_ID",
	"FIL_SDS_ASSET___ASSET_PROVIDED_BY_ID as ASSET_PROVIDED_BY_ID",
	"FIL_SDS_ASSET___ASSET_SERVICED_BY_ID as ASSET_SERVICED_BY_ID",
	"FIL_SDS_ASSET___IS_INTERNAL as IS_INTERNAL",
	"FIL_SDS_ASSET___ASSET_LEVEL as ASSET_LEVEL",
	"FIL_SDS_ASSET___STOCK_KEEPING_UNIT as STOCK_KEEPING_UNIT",
	"FIL_SDS_ASSET___LAST_VIEWED_DATE as LAST_VIEWED_DATE",
	"FIL_SDS_ASSET___LAST_REFERENCED_DATE as LAST_REFERENCED_DATE",
	"FIL_SDS_ASSET___PSVC_ACTIVE_C as PSVC_ACTIVE_C",
	"FIL_SDS_ASSET___PSVC_ALLERGIES_C as PSVC_ALLERGIES_C",
	"FIL_SDS_ASSET___PSVC_ARTHRITIS_C as PSVC_ARTHRITIS_C",
	"FIL_SDS_ASSET___PSVC_BIRTHDATE_C as PSVC_BIRTHDATE_C",
	"FIL_SDS_ASSET___PSVC_BLIND_C as PSVC_BLIND_C",
	"FIL_SDS_ASSET___PSVC_BLOAT_C as PSVC_BLOAT_C",
	"FIL_SDS_ASSET___PSVC_BREED_C as PSVC_BREED_C",
	"FIL_SDS_ASSET___PSVC_CANCER_C as PSVC_CANCER_C",
	"FIL_SDS_ASSET___PSVC_COLOR_C as PSVC_COLOR_C",
	"FIL_SDS_ASSET___PSVC_FLEA_TICK_TREATMENT_C as PSVC_FLEA_TICK_TREATMENT_C",
	"FIL_SDS_ASSET___PSVC_GROOMING_BOOKING_ALERT_TEXT_C as PSVC_GROOMING_BOOKING_ALERT_TEXT_C",
	"FIL_SDS_ASSET___PSVC_GROOMING_CHECK_IN_ALERT_TEXT_C as PSVC_GROOMING_CHECK_IN_ALERT_TEXT_C",
	"FIL_SDS_ASSET___PSVC_GROOMING_CHECK_OUT_ALERT_TEXT_C as PSVC_GROOMING_CHECK_OUT_ALERT_TEXT_C",
	"FIL_SDS_ASSET___PSVC_GROOMING_PET_RATING_C as PSVC_GROOMING_PET_RATING_C",
	"FIL_SDS_ASSET___PSVC_GROOMING_RATING_REASON_C as PSVC_GROOMING_RATING_REASON_C",
	"FIL_SDS_ASSET___PSVC_GROOMING_SERVICE_CARD_ALERT_TEXT_C as PSVC_GROOMING_SERVICE_CARD_ALERT_TEXT_C",
	"FIL_SDS_ASSET___PSVC_HEART_CONDITION_C as PSVC_HEART_CONDITION_C",
	"FIL_SDS_ASSET___PSVC_IN_HEAT_C as PSVC_IN_HEAT_C",
	"FIL_SDS_ASSET___PSVC_INJURIES_C as PSVC_INJURIES_C",
	"FIL_SDS_ASSET___PSVC_MARKING_C as PSVC_MARKING_C",
	"FIL_SDS_ASSET___PSVC_MIX_C as PSVC_MIX_C",
	"FIL_SDS_ASSET___PSVC_VET_NAME_C as PSVC_VET_NAME_C",
	"FIL_SDS_ASSET___PSVC_OTHER_ISSUES_C as PSVC_OTHER_ISSUES_C",
	"FIL_SDS_ASSET___PSVC_PODS_PET_ID_C as PSVC_PODS_PET_ID_C",
	"FIL_SDS_ASSET___PSVC_PHYSICAL_LIMITATIONS_C as PSVC_PHYSICAL_LIMITATIONS_C",
	"FIL_SDS_ASSET___PSVC_PREGNANT_NURSING_C as PSVC_PREGNANT_NURSING_C",
	"FIL_SDS_ASSET___PSVC_RESPIRATORY_DISEASE_C as PSVC_RESPIRATORY_DISEASE_C",
	"FIL_SDS_ASSET___PSVC_SMS_PET_ID_C as PSVC_SMS_PET_ID_C",
	"FIL_SDS_ASSET___PSVC_SEDATION_WHEN_GROOMED_C as PSVC_SEDATION_WHEN_GROOMED_C",
	"FIL_SDS_ASSET___PSVC_SEIZURES_C as PSVC_SEIZURES_C",
	"FIL_SDS_ASSET___PSVC_SERVICE_NOTES_C as PSVC_SERVICE_NOTES_C",
	"FIL_SDS_ASSET___PSVC_SEX_C as PSVC_SEX_C",
	"FIL_SDS_ASSET___PSVC_SPAYED_NEUTERED_C as PSVC_SPAYED_NEUTERED_C",
	"FIL_SDS_ASSET___PSVC_SPECIES_C as PSVC_SPECIES_C",
	"FIL_SDS_ASSET___PSVC_THYROID_DISEASE_C as PSVC_THYROID_DISEASE_C",
	"FIL_SDS_ASSET___PSVC_WEIGHT_LBS_C as PSVC_WEIGHT_LBS_C",
	"FIL_SDS_ASSET___PSVC_BREED_TEXT_C as PSVC_BREED_TEXT_C",
	"FIL_SDS_ASSET___PSVC_BORDETELLA_EXPIRATION_DATE_C as PSVC_BORDETELLA_EXPIRATION_DATE_C",
	"FIL_SDS_ASSET___PSVC_DISTEMPER_EXPIRATION_DATE_C as PSVC_DISTEMPER_EXPIRATION_DATE_C",
	"FIL_SDS_ASSET___PSVC_FVRCCP_EXPIRATION_DATE_C as PSVC_FVRCCP_EXPIRATION_DATE_C",
	"FIL_SDS_ASSET___PSVC_PARAINFLUENZA_EXPIRATION_DATE_C as PSVC_PARAINFLUENZA_EXPIRATION_DATE_C",
	"FIL_SDS_ASSET___PSVC_PARVOVIRUS_EXPIRATION_DATE_C as PSVC_PARVOVIRUS_EXPIRATION_DATE_C",
	"FIL_SDS_ASSET___PSVC_RABIES_EXPIRATION_DATE_C as PSVC_RABIES_EXPIRATION_DATE_C",
	"CURRENT_TIMESTAMP as UPDATE_TSTMP",
	"IF (FIL_SDS_ASSET___i_LOAD_TSTMP IS NULL, CURRENT_TIMESTAMP, FIL_SDS_ASSET___i_LOAD_TSTMP) as LOAD_TSTMP",
	"IF (FIL_SDS_ASSET___i_SDS_ASSET_ID IS NULL, 1, IF (FIL_SDS_ASSET___i_SDS_ASSET_ID IS NOT NULL AND ( FIL_SDS_ASSET___i_SDS_SYSTEM_MODIFIED_TSTMP != FIL_SDS_ASSET___SYSTEM_MOD_STAMP OR FIL_SDS_ASSET___i_SDS_CREATED_TSTMP != FIL_SDS_ASSET___CREATED_DATE OR FIL_SDS_ASSET___i_SDS_LAST_MODIFIED_TSTMP != FIL_SDS_ASSET___LAST_MODIFIED_DATE ), 2, 3)) as o_UPDATE_VALIDATOR"
)

# COMMAND ----------
# Processing node UPD_SDS_ASSET, type UPDATE_STRATEGY 
# COLUMN COUNT: 79

# for each involved DataFrame, append the dataframe name to each column
EXP_SDS_ASSET_temp = EXP_SDS_ASSET.toDF(*["EXP_SDS_ASSET___" + col for col in EXP_SDS_ASSET.columns])

UPD_SDS_ASSET = EXP_SDS_ASSET_temp.selectExpr(
	"EXP_SDS_ASSET___ID as ID",
	"EXP_SDS_ASSET___CONTACT_ID as CONTACT_ID",
	"EXP_SDS_ASSET___ACCOUNT_ID as ACCOUNT_ID",
	"EXP_SDS_ASSET___PARENT_ID as PARENT_ID",
	"EXP_SDS_ASSET___ROOT_ASSET_ID as ROOT_ASSET_ID",
	"EXP_SDS_ASSET___PRODUCT2_ID as PRODUCT2_ID",
	"EXP_SDS_ASSET___PRODUCT_CODE as PRODUCT_CODE",
	"EXP_SDS_ASSET___IS_COMPETITOR_PRODUCT as IS_COMPETITOR_PRODUCT",
	"EXP_SDS_ASSET___CREATED_DATE as CREATED_DATE",
	"EXP_SDS_ASSET___CREATED_BY_ID as CREATED_BY_ID",
	"EXP_SDS_ASSET___LAST_MODIFIED_DATE as LAST_MODIFIED_DATE",
	"EXP_SDS_ASSET___LAST_MODIFIED_BY_ID as LAST_MODIFIED_BY_ID",
	"EXP_SDS_ASSET___SYSTEM_MOD_STAMP as SYSTEM_MOD_STAMP",
	"EXP_SDS_ASSET___IS_DELETED as IS_DELETED",
	"EXP_SDS_ASSET___CURRENCY_ISO_CODE as CURRENCY_ISO_CODE",
	"EXP_SDS_ASSET___NAME as NAME",
	"EXP_SDS_ASSET___SERIAL_NUMBER as SERIAL_NUMBER",
	"EXP_SDS_ASSET___INSTALL_DATE as INSTALL_DATE",
	"EXP_SDS_ASSET___PURCHASE_DATE as PURCHASE_DATE",
	"EXP_SDS_ASSET___USAGE_END_DATE as USAGE_END_DATE",
	"EXP_SDS_ASSET___STATUS as STATUS",
	"EXP_SDS_ASSET___PRICE as PRICE",
	"EXP_SDS_ASSET___QUANTITY as QUANTITY",
	"EXP_SDS_ASSET___DESCRIPTION as DESCRIPTION",
	"EXP_SDS_ASSET___OWNER_ID as OWNER_ID",
	"EXP_SDS_ASSET___LOCATION_ID as LOCATION_ID",
	"EXP_SDS_ASSET___ASSET_PROVIDED_BY_ID as ASSET_PROVIDED_BY_ID",
	"EXP_SDS_ASSET___ASSET_SERVICED_BY_ID as ASSET_SERVICED_BY_ID",
	"EXP_SDS_ASSET___IS_INTERNAL as IS_INTERNAL",
	"EXP_SDS_ASSET___ASSET_LEVEL as ASSET_LEVEL",
	"EXP_SDS_ASSET___STOCK_KEEPING_UNIT as STOCK_KEEPING_UNIT",
	"EXP_SDS_ASSET___LAST_VIEWED_DATE as LAST_VIEWED_DATE",
	"EXP_SDS_ASSET___LAST_REFERENCED_DATE as LAST_REFERENCED_DATE",
	"EXP_SDS_ASSET___PSVC_ACTIVE_C as PSVC_ACTIVE_C",
	"EXP_SDS_ASSET___PSVC_ALLERGIES_C as PSVC_ALLERGIES_C",
	"EXP_SDS_ASSET___PSVC_ARTHRITIS_C as PSVC_ARTHRITIS_C",
	"EXP_SDS_ASSET___PSVC_BIRTHDATE_C as PSVC_BIRTHDATE_C",
	"EXP_SDS_ASSET___PSVC_BLIND_C as PSVC_BLIND_C",
	"EXP_SDS_ASSET___PSVC_BLOAT_C as PSVC_BLOAT_C",
	"EXP_SDS_ASSET___PSVC_BREED_C as PSVC_BREED_C",
	"EXP_SDS_ASSET___PSVC_CANCER_C as PSVC_CANCER_C",
	"EXP_SDS_ASSET___PSVC_COLOR_C as PSVC_COLOR_C",
	"EXP_SDS_ASSET___PSVC_FLEA_TICK_TREATMENT_C as PSVC_FLEA_TICK_TREATMENT_C",
	"EXP_SDS_ASSET___PSVC_GROOMING_BOOKING_ALERT_TEXT_C as PSVC_GROOMING_BOOKING_ALERT_TEXT_C",
	"EXP_SDS_ASSET___PSVC_GROOMING_CHECK_IN_ALERT_TEXT_C as PSVC_GROOMING_CHECK_IN_ALERT_TEXT_C",
	"EXP_SDS_ASSET___PSVC_GROOMING_CHECK_OUT_ALERT_TEXT_C as PSVC_GROOMING_CHECK_OUT_ALERT_TEXT_C",
	"EXP_SDS_ASSET___PSVC_GROOMING_PET_RATING_C as PSVC_GROOMING_PET_RATING_C",
	"EXP_SDS_ASSET___PSVC_GROOMING_RATING_REASON_C as PSVC_GROOMING_RATING_REASON_C",
	"EXP_SDS_ASSET___PSVC_GROOMING_SERVICE_CARD_ALERT_TEXT_C as PSVC_GROOMING_SERVICE_CARD_ALERT_TEXT_C",
	"EXP_SDS_ASSET___PSVC_HEART_CONDITION_C as PSVC_HEART_CONDITION_C",
	"EXP_SDS_ASSET___PSVC_IN_HEAT_C as PSVC_IN_HEAT_C",
	"EXP_SDS_ASSET___PSVC_INJURIES_C as PSVC_INJURIES_C",
	"EXP_SDS_ASSET___PSVC_MARKING_C as PSVC_MARKING_C",
	"EXP_SDS_ASSET___PSVC_MIX_C as PSVC_MIX_C",
	"EXP_SDS_ASSET___PSVC_VET_NAME_C as PSVC_VET_NAME_C",
	"EXP_SDS_ASSET___PSVC_OTHER_ISSUES_C as PSVC_OTHER_ISSUES_C",
	"EXP_SDS_ASSET___PSVC_PODS_PET_ID_C as PSVC_PODS_PET_ID_C",
	"EXP_SDS_ASSET___PSVC_PHYSICAL_LIMITATIONS_C as PSVC_PHYSICAL_LIMITATIONS_C",
	"EXP_SDS_ASSET___PSVC_PREGNANT_NURSING_C as PSVC_PREGNANT_NURSING_C",
	"EXP_SDS_ASSET___PSVC_RESPIRATORY_DISEASE_C as PSVC_RESPIRATORY_DISEASE_C",
	"EXP_SDS_ASSET___PSVC_SMS_PET_ID_C as PSVC_SMS_PET_ID_C",
	"EXP_SDS_ASSET___PSVC_SEDATION_WHEN_GROOMED_C as PSVC_SEDATION_WHEN_GROOMED_C",
	"EXP_SDS_ASSET___PSVC_SEIZURES_C as PSVC_SEIZURES_C",
	"EXP_SDS_ASSET___PSVC_SERVICE_NOTES_C as PSVC_SERVICE_NOTES_C",
	"EXP_SDS_ASSET___PSVC_SEX_C as PSVC_SEX_C",
	"EXP_SDS_ASSET___PSVC_SPAYED_NEUTERED_C as PSVC_SPAYED_NEUTERED_C",
	"EXP_SDS_ASSET___PSVC_SPECIES_C as PSVC_SPECIES_C",
	"EXP_SDS_ASSET___PSVC_THYROID_DISEASE_C as PSVC_THYROID_DISEASE_C",
	"EXP_SDS_ASSET___PSVC_WEIGHT_LBS_C as PSVC_WEIGHT_LBS_C",
	"EXP_SDS_ASSET___PSVC_BREED_TEXT_C as PSVC_BREED_TEXT_C",
	"EXP_SDS_ASSET___PSVC_BORDETELLA_EXPIRATION_DATE_C as PSVC_BORDETELLA_EXPIRATION_DATE_C",
	"EXP_SDS_ASSET___PSVC_DISTEMPER_EXPIRATION_DATE_C as PSVC_DISTEMPER_EXPIRATION_DATE_C",
	"EXP_SDS_ASSET___PSVC_FVRCCP_EXPIRATION_DATE_C as PSVC_FVRCCP_EXPIRATION_DATE_C",
	"EXP_SDS_ASSET___PSVC_PARAINFLUENZA_EXPIRATION_DATE_C as PSVC_PARAINFLUENZA_EXPIRATION_DATE_C",
	"EXP_SDS_ASSET___PSVC_PARVOVIRUS_EXPIRATION_DATE_C as PSVC_PARVOVIRUS_EXPIRATION_DATE_C",
	"EXP_SDS_ASSET___PSVC_RABIES_EXPIRATION_DATE_C as PSVC_RABIES_EXPIRATION_DATE_C",
	"EXP_SDS_ASSET___UPDATE_TSTMP as UPDATE_TSTMP",
	"EXP_SDS_ASSET___LOAD_TSTMP as LOAD_TSTMP",
	"EXP_SDS_ASSET___o_UPDATE_VALIDATOR as o_UPDATE_VALIDATOR")\
	.withColumn('pyspark_data_action', when(col('o_UPDATE_VALIDATOR') ==(lit(1)) , lit(0)).when(col('o_UPDATE_VALIDATOR') ==(lit(2)) , lit(1)))

# COMMAND ----------
# Processing node Shortcut_to_SDS_ASSET_4, type TARGET 
# COLUMN COUNT: 78


Shortcut_to_SDS_ASSET_4 = UPD_SDS_ASSET.selectExpr(
	"CAST(ID AS STRING) as SDS_ASSET_ID",
	"CAST(NAME AS STRING) as SDS_ASSET_NAME",
	"CAST(DESCRIPTION AS STRING) as SDS_ASSET_DESC",
	"CAST(PSVC_BIRTHDATE_C AS DATE) as BIRTH_DT",
	"CAST(PSVC_SPECIES_C AS STRING) as SPECIES",
	"CAST(PSVC_BREED_C AS STRING) as BREED",
	"CAST(PSVC_BREED_TEXT_C AS STRING) as BREED_TEXT",
	"CAST(PSVC_MIX_C AS TINYINT) as MIX_BREED_FLAG",
	"CAST(PSVC_SEX_C AS STRING) as SEX",
	"CAST(PSVC_SPAYED_NEUTERED_C AS STRING) as SPAYED_NEUTERED",
	"CAST(PSVC_COLOR_C AS STRING) as COLOR",
	"CAST(PSVC_MARKING_C AS STRING) as MARKING",
	"CAST(PSVC_WEIGHT_LBS_C AS DECIMAL(18,2)) as WEIGHT_LBS",
	"CAST(PSVC_VET_NAME_C AS STRING) as VET_NAME",
	"CAST(PSVC_ALLERGIES_C AS TINYINT) as ALLERGIES_FLAG",
	"CAST(PSVC_ARTHRITIS_C AS TINYINT) as ARTHRITIS_FLAG",
	"CAST(PSVC_BLIND_C AS TINYINT) as BLIND_FLAG",
	"CAST(PSVC_BLOAT_C AS TINYINT) as BLOAT_FLAG",
	"CAST(PSVC_CANCER_C AS TINYINT) as CANCER_FLAG",
	"CAST(PSVC_FLEA_TICK_TREATMENT_C AS TINYINT) as FLEA_TICK_TREATMENT_FLAG",
	"CAST(PSVC_HEART_CONDITION_C AS TINYINT) as HEART_CONDITION_FLAG",
	"CAST(PSVC_IN_HEAT_C AS TINYINT) as IN_HEAT_FLAG",
	"CAST(PSVC_INJURIES_C AS TINYINT) as INJURIES_FLAG",
	"CAST(PSVC_OTHER_ISSUES_C AS TINYINT) as OTHER_ISSUES_FLAG",
	"CAST(PSVC_PHYSICAL_LIMITATIONS_C AS TINYINT) as PHYSICAL_LIMITATIONS_FLAG",
	"CAST(PSVC_PREGNANT_NURSING_C AS TINYINT) as PREGNANT_NURSING_FLAG",
	"CAST(PSVC_RESPIRATORY_DISEASE_C AS TINYINT) as RESPIRATORY_DISEASE_FLAG",
	"CAST(PSVC_SEDATION_WHEN_GROOMED_C AS TINYINT) as SEDATION_WHEN_GROOMED_FLAG",
	"CAST(PSVC_SEIZURES_C AS TINYINT) as SEIZURES_FLAG",
	"CAST(PSVC_THYROID_DISEASE_C AS TINYINT) as THYROID_DISEASE_FLAG",
	"CAST(PSVC_BORDETELLA_EXPIRATION_DATE_C AS DATE) as BORDETELLA_EXP_DT",
	"CAST(PSVC_DISTEMPER_EXPIRATION_DATE_C AS DATE) as DISTEMPER_EXP_DT",
	"CAST(PSVC_FVRCCP_EXPIRATION_DATE_C AS DATE) as FVRCCP_EXP_DT",
	"CAST(PSVC_PARAINFLUENZA_EXPIRATION_DATE_C AS DATE) as PARAINFLUENZA_EXP_DT",
	"CAST(PSVC_PARVOVIRUS_EXPIRATION_DATE_C AS DATE) as PARVOVIRUS_EXP_DT",
	"CAST(PSVC_RABIES_EXPIRATION_DATE_C AS DATE) as RABIES_EXP_DT",
	"CAST(PSVC_SERVICE_NOTES_C AS STRING) as SERVICE_NOTES",
	"CAST(PSVC_GROOMING_BOOKING_ALERT_TEXT_C AS STRING) as GROOMING_BOOKING_ALERT_TEXT",
	"CAST(PSVC_GROOMING_CHECK_IN_ALERT_TEXT_C AS STRING) as GROOMING_CHECK_IN_ALERT_TEXT",
	"CAST(PSVC_GROOMING_CHECK_OUT_ALERT_TEXT_C AS STRING) as GROOMING_CHECK_OUT_ALERT_TEXT",
	"CAST(PSVC_GROOMING_PET_RATING_C AS STRING) as GROOMING_PET_RATING",
	"CAST(PSVC_GROOMING_RATING_REASON_C AS STRING) as GROOMING_RATING_REASON",
	"CAST(PSVC_GROOMING_SERVICE_CARD_ALERT_TEXT_C AS STRING) as GROOMING_SERVICE_CARD_ALERT_TEXT",
	"CAST(STATUS AS STRING) as SDS_ASSET_STATUS",
	"CAST(PSVC_PODS_PET_ID_C AS STRING) as PODS_PET_ID",
	"CAST(PSVC_SMS_PET_ID_C AS BIGINT) as SMS_PET_ID",
	"CAST(ACCOUNT_ID AS STRING) as SDS_ACCOUNT_ID",
	"CAST(CONTACT_ID AS STRING) as SDS_CONTACT_ID",
	"CAST(PARENT_ID AS STRING) as SDS_PARENT_ID",
	"CAST(ROOT_ASSET_ID AS STRING) as SDS_ROOT_ASSET_ID",
	"CAST(PRODUCT2_ID AS STRING) as SDS_PRODUCT_ID",
	"CAST(PRODUCT_CODE AS STRING) as SDS_PRODUCT_CD",
	"CAST(IS_COMPETITOR_PRODUCT AS TINYINT) as COMPETITOR_PRODUCT_FLAG",
	"CAST(SERIAL_NUMBER AS STRING) as SERIAL_NBR",
	"CAST(INSTALL_DATE AS DATE) as INSTALL_DT",
	"CAST(PURCHASE_DATE AS DATE) as PURCHASE_DT",
	"CAST(USAGE_END_DATE AS DATE) as USAGE_END_DT",
	"CAST(PRICE AS BIGINT) as PRICE",
	"CAST(QUANTITY AS DECIMAL(12,2)) as QUANTITY",
	"CAST(LOCATION_ID AS STRING) as SDS_LOCATION_ID",
	"CAST(ASSET_PROVIDED_BY_ID AS STRING) as ASSET_PROVIDED_BY_ID",
	"CAST(ASSET_SERVICED_BY_ID AS STRING) as ASSET_SERVICED_BY_ID",
	"CAST(IS_INTERNAL AS TINYINT) as INTERNAL_FLAG",
	"CAST(ASSET_LEVEL AS BIGINT) as ASSET_LEVEL",
	"CAST(STOCK_KEEPING_UNIT AS STRING) as STOCK_KEEPING_UNIT",
	"CAST(OWNER_ID AS STRING) as SDS_OWNER_ID",
	"CAST(CURRENCY_ISO_CODE AS STRING) as CURRENCY_ISO_CD",
	"CAST(PSVC_ACTIVE_C AS TINYINT) as ACTIVE_FLAG",
	"CAST(IS_DELETED AS TINYINT) as DELETED_FLAG",
	"CAST(LAST_VIEWED_DATE AS TIMESTAMP) as SDS_LAST_VIEWED_TSTMP",
	"CAST(LAST_REFERENCED_DATE AS TIMESTAMP) as SDS_LAST_REFERENCED_TSTMP",
	"CAST(SYSTEM_MOD_STAMP AS TIMESTAMP) as SDS_SYSTEM_MODIFIED_TSTMP",
	"CAST(LAST_MODIFIED_DATE AS TIMESTAMP) as SDS_LAST_MODIFIED_TSTMP",
	"CAST(LAST_MODIFIED_BY_ID AS STRING) as SDS_LAST_MODIFIED_BY_ID",
	"CAST(CREATED_DATE AS TIMESTAMP) as SDS_CREATED_TSTMP",
	"CAST(CREATED_BY_ID AS STRING) as SDS_CREATED_BY_ID",
	"CAST(UPDATE_TSTMP AS TIMESTAMP) as UPDATE_TSTMP",
	"CAST(LOAD_TSTMP AS TIMESTAMP) as LOAD_TSTMP",
	"UPD_SDS_ASSET.pyspark_data_action as pyspark_data_action"
)

try:
  primary_key = """source.SDS_ASSET_ID = target.SDS_ASSET_ID"""
  refined_perf_table = f"{legacy}.SDS_ASSET"
  executeMerge(Shortcut_to_SDS_ASSET_4, refined_perf_table, primary_key)
  logger.info(f"Merge with {refined_perf_table} completed]")
  logPrevRunDt("SDS_ASSET", "SDS_ASSET", "Completed", "N/A", f"{raw}.log_run_details")
except Exception as e:
  logPrevRunDt("SDS_ASSET", "SDS_ASSET","Failed",str(e), f"{raw}.log_run_details", )
  raise e
	