#Code converted on 2023-07-26 09:54:27
import os
import argparse
from pyspark.sql import *
from pyspark.sql.functions import *
from pyspark.sql.window import Window
from pyspark.sql.types import *
from datetime import datetime
from Datalake.utils.genericUtilities import *
from Datalake.utils.configs import *
from Datalake.utils.mergeUtils import *
from Datalake.utils.logger import *
# COMMAND ----------

parser = argparse.ArgumentParser()
spark = SparkSession.getActiveSession()
parser.add_argument('env', type=str, help='Env Variable')

args = parser.parse_args()
env = args.env

if env is None or env == '':
    raise ValueError('env is not set')

refine = getEnvPrefix(env) + 'refine'
raw = getEnvPrefix(env) + 'raw'
legacy = getEnvPrefix(env) + 'legacy'


# COMMAND ----------
# Processing node SQ_Shortcut_to_SALON_ACADEMY_TRAINING_PRE, type SOURCE 
# COLUMN COUNT: 29

SQ_Shortcut_to_SALON_ACADEMY_TRAINING_PRE = spark.sql(f"""SELECT
SALON_ACADEMY_TRAINING_PRE.SALON_ACADEMY_TRAINING_ID,
SALON_ACADEMY_TRAINING_PRE.SALON_ACADEMY_ID,
SALON_ACADEMY_TRAINING_PRE.SALON_ACADEMY_TYPE_ID,
SALON_ACADEMY_TRAINING_PRE.SALON_ACADEMY_TYPE_DESC,
SALON_ACADEMY_TRAINING_PRE.SALON_ACADEMY_CLASS,
SALON_ACADEMY_TRAINING_PRE.SALON_ACADEMY_TRAVEL_ID,
SALON_ACADEMY_TRAINING_PRE.SALON_ACADEMY_ASSESSMENT_ID,
SALON_ACADEMY_TRAINING_PRE.LOCATION_ID,
SALON_ACADEMY_TRAINING_PRE.EMPLOYEE_ID,
SALON_ACADEMY_TRAINING_PRE.DISTRICT_LEADER_NAME,
SALON_ACADEMY_TRAINING_PRE.SALON_SAFETY_CERTIFICATE_DT,
SALON_ACADEMY_TRAINING_PRE.SPLASH_DT,
SALON_ACADEMY_TRAINING_PRE.SPLASH_EXAM_PTS_DT,
SALON_ACADEMY_TRAINING_PRE.SPLASH_OBSERV_PTS_DT,
SALON_ACADEMY_TRAINING_PRE.GROOMING_TOOL_KIT_ID,
SALON_ACADEMY_TRAINING_PRE.TRAINING_STATUS_ID,
SALON_ACADEMY_TRAINING_PRE.TRAINING_STATUS_DESC,
SALON_ACADEMY_TRAINING_PRE.TRAINING_TYPE_ID,
SALON_ACADEMY_TRAINING_PRE.ENROLLED_TSTMP,
SALON_ACADEMY_TRAINING_PRE.DOG_ACADEMY_COMPLETED_DT,
SALON_ACADEMY_TRAINING_PRE.SAFETY_ALL_E_LEARNING_DT,
SALON_ACADEMY_TRAINING_PRE.SAFETY_ALL_PTS_DT,
SALON_ACADEMY_TRAINING_PRE.SAFETY_SALON_E_LEARNING_DT,
SALON_ACADEMY_TRAINING_PRE.SAFETY_SALON_PTS_DT,
SALON_ACADEMY_TRAINING_PRE.CANCELLED_FLAG,
SALON_ACADEMY_TRAINING_PRE.CREATED_TSTMP,
SALON_ACADEMY_TRAINING_PRE.CREATED_BY,
SALON_ACADEMY_TRAINING_PRE.MODIFIED_TSTMP,
SALON_ACADEMY_TRAINING_PRE.MODIFIED_BY
FROM {raw}.SALON_ACADEMY_TRAINING_PRE""").withColumn("sys_row_id", monotonically_increasing_id())

# COMMAND ----------
# Processing node SQ_Shortcut_to_SALON_ACADEMY_TRAINING, type SOURCE 
# COLUMN COUNT: 30

SQ_Shortcut_to_SALON_ACADEMY_TRAINING = spark.sql(f"""SELECT
SALON_ACADEMY_TRAINING.SALON_ACADEMY_TRAINING_ID,
SALON_ACADEMY_TRAINING.SALON_ACADEMY_ID,
SALON_ACADEMY_TRAINING.SALON_ACADEMY_TYPE_ID,
SALON_ACADEMY_TRAINING.SALON_ACADEMY_TYPE_DESC,
SALON_ACADEMY_TRAINING.SALON_ACADEMY_CLASS,
SALON_ACADEMY_TRAINING.SALON_ACADEMY_TRAVEL_ID,
SALON_ACADEMY_TRAINING.SALON_ACADEMY_ASSESSMENT_ID,
SALON_ACADEMY_TRAINING.LOCATION_ID,
SALON_ACADEMY_TRAINING.EMPLOYEE_ID,
SALON_ACADEMY_TRAINING.DISTRICT_LEADER_NAME,
SALON_ACADEMY_TRAINING.SALON_SAFETY_CERTIFICATE_DT,
SALON_ACADEMY_TRAINING.SPLASH_DT,
SALON_ACADEMY_TRAINING.SPLASH_EXAM_PTS_DT,
SALON_ACADEMY_TRAINING.SPLASH_OBSERV_PTS_DT,
SALON_ACADEMY_TRAINING.GROOMING_TOOL_KIT_ID,
SALON_ACADEMY_TRAINING.TRAINING_STATUS_ID,
SALON_ACADEMY_TRAINING.TRAINING_STATUS_DESC,
SALON_ACADEMY_TRAINING.TRAINING_TYPE_ID,
SALON_ACADEMY_TRAINING.ENROLLED_TSTMP,
SALON_ACADEMY_TRAINING.DOG_ACADEMY_COMPLETED_DT,
SALON_ACADEMY_TRAINING.SAFETY_ALL_E_LEARNING_DT,
SALON_ACADEMY_TRAINING.SAFETY_ALL_PTS_DT,
SALON_ACADEMY_TRAINING.SAFETY_SALON_E_LEARNING_DT,
SALON_ACADEMY_TRAINING.SAFETY_SALON_PTS_DT,
SALON_ACADEMY_TRAINING.CANCELLED_FLAG,
SALON_ACADEMY_TRAINING.CREATED_TSTMP,
SALON_ACADEMY_TRAINING.CREATED_BY,
SALON_ACADEMY_TRAINING.MODIFIED_TSTMP,
SALON_ACADEMY_TRAINING.MODIFIED_BY,
SALON_ACADEMY_TRAINING.LOAD_TSTMP
FROM {legacy}.SALON_ACADEMY_TRAINING""").withColumn("sys_row_id", monotonically_increasing_id())

# COMMAND ----------
# Processing node JNR_UPD, type JOINER . Note: using additional SELECT to rename incoming columns
# COLUMN COUNT: 59

# for each involved DataFrame, append the dataframe name to each column
SQ_Shortcut_to_SALON_ACADEMY_TRAINING_PRE_temp = SQ_Shortcut_to_SALON_ACADEMY_TRAINING_PRE.toDF(*["SQ_Shortcut_to_SALON_ACADEMY_TRAINING_PRE___" + col for col in SQ_Shortcut_to_SALON_ACADEMY_TRAINING_PRE.columns])
SQ_Shortcut_to_SALON_ACADEMY_TRAINING_temp = SQ_Shortcut_to_SALON_ACADEMY_TRAINING.toDF(*["SQ_Shortcut_to_SALON_ACADEMY_TRAINING___" + col for col in SQ_Shortcut_to_SALON_ACADEMY_TRAINING.columns])

JNR_UPD = SQ_Shortcut_to_SALON_ACADEMY_TRAINING_temp.join(SQ_Shortcut_to_SALON_ACADEMY_TRAINING_PRE_temp,[SQ_Shortcut_to_SALON_ACADEMY_TRAINING_temp.SQ_Shortcut_to_SALON_ACADEMY_TRAINING___SALON_ACADEMY_TRAINING_ID == SQ_Shortcut_to_SALON_ACADEMY_TRAINING_PRE_temp.SQ_Shortcut_to_SALON_ACADEMY_TRAINING_PRE___SALON_ACADEMY_TRAINING_ID],'right_outer').selectExpr(
	"SQ_Shortcut_to_SALON_ACADEMY_TRAINING_PRE___SALON_ACADEMY_TRAINING_ID as SALON_ACADEMY_TRAINING_ID",
	"SQ_Shortcut_to_SALON_ACADEMY_TRAINING_PRE___SALON_ACADEMY_ID as SALON_ACADEMY_ID",
	"SQ_Shortcut_to_SALON_ACADEMY_TRAINING_PRE___SALON_ACADEMY_TYPE_ID as SALON_ACADEMY_TYPE_ID",
	"SQ_Shortcut_to_SALON_ACADEMY_TRAINING_PRE___SALON_ACADEMY_TYPE_DESC as SALON_ACADEMY_TYPE_DESC",
	"SQ_Shortcut_to_SALON_ACADEMY_TRAINING_PRE___SALON_ACADEMY_CLASS as SALON_ACADEMY_CLASS",
	"SQ_Shortcut_to_SALON_ACADEMY_TRAINING_PRE___SALON_ACADEMY_TRAVEL_ID as SALON_ACADEMY_TRAVEL_ID",
	"SQ_Shortcut_to_SALON_ACADEMY_TRAINING_PRE___SALON_ACADEMY_ASSESSMENT_ID as SALON_ACADEMY_ASSESSMENT_ID",
	"SQ_Shortcut_to_SALON_ACADEMY_TRAINING_PRE___LOCATION_ID as LOCATION_ID",
	"SQ_Shortcut_to_SALON_ACADEMY_TRAINING_PRE___EMPLOYEE_ID as EMPLOYEE_ID",
	"SQ_Shortcut_to_SALON_ACADEMY_TRAINING_PRE___DISTRICT_LEADER_NAME as DISTRICT_LEADER_NAME",
	"SQ_Shortcut_to_SALON_ACADEMY_TRAINING_PRE___SALON_SAFETY_CERTIFICATE_DT as SALON_SAFETY_CERTIFICATE_DT",
	"SQ_Shortcut_to_SALON_ACADEMY_TRAINING_PRE___SPLASH_DT as SPLASH_DT",
	"SQ_Shortcut_to_SALON_ACADEMY_TRAINING_PRE___SPLASH_EXAM_PTS_DT as SPLASH_EXAM_PTS_DT",
	"SQ_Shortcut_to_SALON_ACADEMY_TRAINING_PRE___SPLASH_OBSERV_PTS_DT as SPLASH_OBSERV_PTS_DT",
	"SQ_Shortcut_to_SALON_ACADEMY_TRAINING_PRE___GROOMING_TOOL_KIT_ID as GROOMING_TOOL_KIT_ID",
	"SQ_Shortcut_to_SALON_ACADEMY_TRAINING_PRE___TRAINING_STATUS_ID as TRAINING_STATUS_ID",
	"SQ_Shortcut_to_SALON_ACADEMY_TRAINING_PRE___TRAINING_STATUS_DESC as TRAINING_STATUS_DESC",
	"SQ_Shortcut_to_SALON_ACADEMY_TRAINING_PRE___TRAINING_TYPE_ID as TRAINING_TYPE_ID",
	"SQ_Shortcut_to_SALON_ACADEMY_TRAINING_PRE___ENROLLED_TSTMP as ENROLLED_TSTMP",
	"SQ_Shortcut_to_SALON_ACADEMY_TRAINING_PRE___DOG_ACADEMY_COMPLETED_DT as DOG_ACADEMY_COMPLETED_DT",
	"SQ_Shortcut_to_SALON_ACADEMY_TRAINING_PRE___SAFETY_ALL_E_LEARNING_DT as SAFETY_ALL_E_LEARNING_DT",
	"SQ_Shortcut_to_SALON_ACADEMY_TRAINING_PRE___SAFETY_ALL_PTS_DT as SAFETY_ALL_PTS_DT",
	"SQ_Shortcut_to_SALON_ACADEMY_TRAINING_PRE___SAFETY_SALON_E_LEARNING_DT as SAFETY_SALON_E_LEARNING_DT",
	"SQ_Shortcut_to_SALON_ACADEMY_TRAINING_PRE___SAFETY_SALON_PTS_DT as SAFETY_SALON_PTS_DT",
	"SQ_Shortcut_to_SALON_ACADEMY_TRAINING_PRE___CANCELLED_FLAG as CANCELLED_FLAG",
	"SQ_Shortcut_to_SALON_ACADEMY_TRAINING_PRE___CREATED_TSTMP as CREATED_TSTMP",
	"SQ_Shortcut_to_SALON_ACADEMY_TRAINING_PRE___CREATED_BY as CREATED_BY",
	"SQ_Shortcut_to_SALON_ACADEMY_TRAINING_PRE___MODIFIED_TSTMP as MODIFIED_TSTMP",
	"SQ_Shortcut_to_SALON_ACADEMY_TRAINING_PRE___MODIFIED_BY as MODIFIED_BY",
	"SQ_Shortcut_to_SALON_ACADEMY_TRAINING___SALON_ACADEMY_TRAINING_ID as SALON_ACADEMY_TRAINING_ID1",
	"SQ_Shortcut_to_SALON_ACADEMY_TRAINING___SALON_ACADEMY_ID as SALON_ACADEMY_ID1",
	"SQ_Shortcut_to_SALON_ACADEMY_TRAINING___SALON_ACADEMY_TYPE_ID as SALON_ACADEMY_TYPE_ID1",
	"SQ_Shortcut_to_SALON_ACADEMY_TRAINING___SALON_ACADEMY_TYPE_DESC as SALON_ACADEMY_TYPE_DESC1",
	"SQ_Shortcut_to_SALON_ACADEMY_TRAINING___SALON_ACADEMY_CLASS as SALON_ACADEMY_CLASS1",
	"SQ_Shortcut_to_SALON_ACADEMY_TRAINING___SALON_ACADEMY_TRAVEL_ID as SALON_ACADEMY_TRAVEL_ID1",
	"SQ_Shortcut_to_SALON_ACADEMY_TRAINING___SALON_ACADEMY_ASSESSMENT_ID as SALON_ACADEMY_ASSESSMENT_ID1",
	"SQ_Shortcut_to_SALON_ACADEMY_TRAINING___LOCATION_ID as LOCATION_ID1",
	"SQ_Shortcut_to_SALON_ACADEMY_TRAINING___EMPLOYEE_ID as EMPLOYEE_ID1",
	"SQ_Shortcut_to_SALON_ACADEMY_TRAINING___DISTRICT_LEADER_NAME as DISTRICT_LEADER_NAME1",
	"SQ_Shortcut_to_SALON_ACADEMY_TRAINING___SALON_SAFETY_CERTIFICATE_DT as SALON_SAFETY_CERTIFICATE_DT1",
	"SQ_Shortcut_to_SALON_ACADEMY_TRAINING___SPLASH_DT as SPLASH_DT1",
	"SQ_Shortcut_to_SALON_ACADEMY_TRAINING___SPLASH_EXAM_PTS_DT as SPLASH_EXAM_PTS_DT1",
	"SQ_Shortcut_to_SALON_ACADEMY_TRAINING___SPLASH_OBSERV_PTS_DT as SPLASH_OBSERV_PTS_DT1",
	"SQ_Shortcut_to_SALON_ACADEMY_TRAINING___GROOMING_TOOL_KIT_ID as GROOMING_TOOL_KIT_ID1",
	"SQ_Shortcut_to_SALON_ACADEMY_TRAINING___TRAINING_STATUS_ID as TRAINING_STATUS_ID1",
	"SQ_Shortcut_to_SALON_ACADEMY_TRAINING___TRAINING_STATUS_DESC as TRAINING_STATUS_DESC1",
	"SQ_Shortcut_to_SALON_ACADEMY_TRAINING___TRAINING_TYPE_ID as TRAINING_TYPE_ID1",
	"SQ_Shortcut_to_SALON_ACADEMY_TRAINING___ENROLLED_TSTMP as ENROLLED_TSTMP1",
	"SQ_Shortcut_to_SALON_ACADEMY_TRAINING___DOG_ACADEMY_COMPLETED_DT as DOG_ACADEMY_COMPLETED_DT1",
	"SQ_Shortcut_to_SALON_ACADEMY_TRAINING___SAFETY_ALL_E_LEARNING_DT as SAFETY_ALL_E_LEARNING_DT1",
	"SQ_Shortcut_to_SALON_ACADEMY_TRAINING___SAFETY_ALL_PTS_DT as SAFETY_ALL_PTS_DT1",
	"SQ_Shortcut_to_SALON_ACADEMY_TRAINING___SAFETY_SALON_E_LEARNING_DT as SAFETY_SALON_E_LEARNING_DT1",
	"SQ_Shortcut_to_SALON_ACADEMY_TRAINING___SAFETY_SALON_PTS_DT as SAFETY_SALON_PTS_DT1",
	"SQ_Shortcut_to_SALON_ACADEMY_TRAINING___CANCELLED_FLAG as CANCELLED_FLAG1",
	"SQ_Shortcut_to_SALON_ACADEMY_TRAINING___CREATED_TSTMP as CREATED_TSTMP1",
	"SQ_Shortcut_to_SALON_ACADEMY_TRAINING___CREATED_BY as CREATED_BY1",
	"SQ_Shortcut_to_SALON_ACADEMY_TRAINING___MODIFIED_TSTMP as MODIFIED_TSTMP1",
	"SQ_Shortcut_to_SALON_ACADEMY_TRAINING___MODIFIED_BY as MODIFIED_BY1",
	"SQ_Shortcut_to_SALON_ACADEMY_TRAINING___LOAD_TSTMP as LOAD_TSTMP")

# COMMAND ----------
# Processing node EXP_MD5_UPD_FLAG, type EXPRESSION 
# COLUMN COUNT: 32

# for each involved DataFrame, append the dataframe name to each column
JNR_UPD_temp = JNR_UPD.toDF(*["JNR_UPD___" + col for col in JNR_UPD.columns]).selectExpr('*', '''md5(concat ( ifnull(JNR_UPD___SALON_ACADEMY_TRAINING_ID , "") 
, ifnull(JNR_UPD___SALON_ACADEMY_ID  , "") 
, ifnull(JNR_UPD___SALON_ACADEMY_TYPE_ID  , "") 
, ifnull(JNR_UPD___SALON_ACADEMY_TYPE_DESC  , "") 
, ifnull(JNR_UPD___SALON_ACADEMY_CLASS  , "") 
, ifnull(JNR_UPD___SALON_ACADEMY_TRAVEL_ID  , "") 
, ifnull(JNR_UPD___SALON_ACADEMY_ASSESSMENT_ID  , "") 
, ifnull(JNR_UPD___LOCATION_ID  , "") 
, ifnull(JNR_UPD___EMPLOYEE_ID  , "") 
, ifnull(JNR_UPD___DISTRICT_LEADER_NAME  , "") 
, ifnull(JNR_UPD___SALON_SAFETY_CERTIFICATE_DT  , "") 
, ifnull(JNR_UPD___SPLASH_DT  , "") 
, ifnull(JNR_UPD___SPLASH_EXAM_PTS_DT  , "") 
, ifnull(JNR_UPD___SPLASH_OBSERV_PTS_DT  , "") 
, ifnull(JNR_UPD___GROOMING_TOOL_KIT_ID  , "") 
, ifnull(JNR_UPD___TRAINING_STATUS_ID  , "") 
, ifnull(JNR_UPD___TRAINING_STATUS_DESC  , "") 
, ifnull(JNR_UPD___TRAINING_TYPE_ID  , "") 
, ifnull(JNR_UPD___ENROLLED_TSTMP  , "") 
, ifnull(JNR_UPD___DOG_ACADEMY_COMPLETED_DT  , "") 
, ifnull(JNR_UPD___SAFETY_ALL_E_LEARNING_DT  , "") 
, ifnull(JNR_UPD___SAFETY_ALL_PTS_DT  , "") 
, ifnull(JNR_UPD___SAFETY_SALON_E_LEARNING_DT  , "") 
, ifnull(JNR_UPD___SAFETY_SALON_PTS_DT  , "") 
, ifnull(JNR_UPD___CANCELLED_FLAG  , "") 
, ifnull(JNR_UPD___CREATED_TSTMP  , "") 
, ifnull(JNR_UPD___CREATED_BY  , "") 
, ifnull(JNR_UPD___MODIFIED_TSTMP  , "") 
, ifnull(JNR_UPD___MODIFIED_BY , ""))) as md5pre''',
'''md5(concat( ifnull(JNR_UPD___SALON_ACADEMY_TRAINING_ID1 , "")
, ifnull(JNR_UPD___SALON_ACADEMY_ID1 , "")
, ifnull(JNR_UPD___SALON_ACADEMY_TYPE_ID1 , "")
, ifnull(JNR_UPD___SALON_ACADEMY_TYPE_DESC1 , "")
, ifnull(JNR_UPD___SALON_ACADEMY_CLASS1 , "")
, ifnull(JNR_UPD___SALON_ACADEMY_TRAVEL_ID1 , "")
, ifnull(JNR_UPD___SALON_ACADEMY_ASSESSMENT_ID1 , "")
, ifnull(JNR_UPD___LOCATION_ID1 , "")
, ifnull(JNR_UPD___EMPLOYEE_ID1 , "")
, ifnull(JNR_UPD___DISTRICT_LEADER_NAME1 , "")
, ifnull(JNR_UPD___SALON_SAFETY_CERTIFICATE_DT1 , "")
, ifnull(JNR_UPD___SPLASH_DT1 , "")
, ifnull(JNR_UPD___SPLASH_EXAM_PTS_DT1 , "")
, ifnull(JNR_UPD___SPLASH_OBSERV_PTS_DT1 , "")
, ifnull(JNR_UPD___GROOMING_TOOL_KIT_ID1 , "")
, ifnull(JNR_UPD___TRAINING_STATUS_ID1 , "")
, ifnull(JNR_UPD___TRAINING_STATUS_DESC1 , "")
, ifnull(JNR_UPD___TRAINING_TYPE_ID1 , "")
, ifnull(JNR_UPD___ENROLLED_TSTMP1 , "")
, ifnull(JNR_UPD___DOG_ACADEMY_COMPLETED_DT1 , "")
, ifnull(JNR_UPD___SAFETY_ALL_E_LEARNING_DT1 , "")
, ifnull(JNR_UPD___SAFETY_ALL_PTS_DT1 , "")
, ifnull(JNR_UPD___SAFETY_SALON_E_LEARNING_DT1 , "")
, ifnull(JNR_UPD___SAFETY_SALON_PTS_DT1 , "")
, ifnull(JNR_UPD___CANCELLED_FLAG1 , "")
, ifnull(JNR_UPD___CREATED_TSTMP1 , "")
, ifnull(JNR_UPD___CREATED_BY1 , "")
, ifnull(JNR_UPD___MODIFIED_TSTMP1 , "")
, ifnull(JNR_UPD___MODIFIED_BY1 , ""))) as md5base''')

EXP_MD5_UPD_FLAG = JNR_UPD_temp.selectExpr(
	"JNR_UPD___SALON_ACADEMY_TRAINING_ID as SALON_ACADEMY_TRAINING_ID",
	"JNR_UPD___SALON_ACADEMY_ID as SALON_ACADEMY_ID",
	"JNR_UPD___SALON_ACADEMY_TYPE_ID as SALON_ACADEMY_TYPE_ID",
	"JNR_UPD___SALON_ACADEMY_TYPE_DESC as SALON_ACADEMY_TYPE_DESC",
	"JNR_UPD___SALON_ACADEMY_CLASS as SALON_ACADEMY_CLASS",
	"JNR_UPD___SALON_ACADEMY_TRAVEL_ID as SALON_ACADEMY_TRAVEL_ID",
	"JNR_UPD___SALON_ACADEMY_ASSESSMENT_ID as SALON_ACADEMY_ASSESSMENT_ID",
	"JNR_UPD___LOCATION_ID as LOCATION_ID",
	"JNR_UPD___EMPLOYEE_ID as EMPLOYEE_ID",
	"JNR_UPD___DISTRICT_LEADER_NAME as DISTRICT_LEADER_NAME",
	"JNR_UPD___SALON_SAFETY_CERTIFICATE_DT as SALON_SAFETY_CERTIFICATE_DT",
	"JNR_UPD___SPLASH_DT as SPLASH_DT",
	"JNR_UPD___SPLASH_EXAM_PTS_DT as SPLASH_EXAM_PTS_DT",
	"JNR_UPD___SPLASH_OBSERV_PTS_DT as SPLASH_OBSERV_PTS_DT",
	"JNR_UPD___GROOMING_TOOL_KIT_ID as GROOMING_TOOL_KIT_ID",
	"JNR_UPD___TRAINING_STATUS_ID as TRAINING_STATUS_ID",
	"JNR_UPD___TRAINING_STATUS_DESC as TRAINING_STATUS_DESC",
	"JNR_UPD___TRAINING_TYPE_ID as TRAINING_TYPE_ID",
	"JNR_UPD___ENROLLED_TSTMP as ENROLLED_TSTMP",
	"JNR_UPD___DOG_ACADEMY_COMPLETED_DT as DOG_ACADEMY_COMPLETED_DT",
	"JNR_UPD___SAFETY_ALL_E_LEARNING_DT as SAFETY_ALL_E_LEARNING_DT",
	"JNR_UPD___SAFETY_ALL_PTS_DT as SAFETY_ALL_PTS_DT",
	"JNR_UPD___SAFETY_SALON_E_LEARNING_DT as SAFETY_SALON_E_LEARNING_DT",
	"JNR_UPD___SAFETY_SALON_PTS_DT as SAFETY_SALON_PTS_DT",
	"JNR_UPD___CANCELLED_FLAG as CANCELLED_FLAG",
	"JNR_UPD___CREATED_TSTMP as CREATED_TSTMP",
	"JNR_UPD___CREATED_BY as CREATED_BY",
	"JNR_UPD___MODIFIED_TSTMP as MODIFIED_TSTMP",
	"JNR_UPD___MODIFIED_BY as MODIFIED_BY",
	"CURRENT_TIMESTAMP as UPDATE_TSTMP",
	"IF (JNR_UPD___LOAD_TSTMP IS NULL, CURRENT_TIMESTAMP, JNR_UPD___LOAD_TSTMP) as o_LOAD_TSTMP",
 	"IF (JNR_UPD___SALON_ACADEMY_TRAINING_ID1 IS NULL, 0, IF ( md5base <> md5pre , 1, 3)) as UPD_FLAG"
)

# COMMAND ----------
# Processing node FIL_NO_CHANGES, type FILTER 
# COLUMN COUNT: 32

# for each involved DataFrame, append the dataframe name to each column
EXP_MD5_UPD_FLAG_temp = EXP_MD5_UPD_FLAG.toDF(*["EXP_MD5_UPD_FLAG___" + col for col in EXP_MD5_UPD_FLAG.columns])

FIL_NO_CHANGES = EXP_MD5_UPD_FLAG_temp.selectExpr(
	"EXP_MD5_UPD_FLAG___SALON_ACADEMY_TRAINING_ID as SALON_ACADEMY_TRAINING_ID",
	"EXP_MD5_UPD_FLAG___SALON_ACADEMY_ID as SALON_ACADEMY_ID",
	"EXP_MD5_UPD_FLAG___SALON_ACADEMY_TYPE_ID as SALON_ACADEMY_TYPE_ID",
	"EXP_MD5_UPD_FLAG___SALON_ACADEMY_TYPE_DESC as SALON_ACADEMY_TYPE_DESC",
	"EXP_MD5_UPD_FLAG___SALON_ACADEMY_CLASS as SALON_ACADEMY_CLASS",
	"EXP_MD5_UPD_FLAG___SALON_ACADEMY_TRAVEL_ID as SALON_ACADEMY_TRAVEL_ID",
	"EXP_MD5_UPD_FLAG___SALON_ACADEMY_ASSESSMENT_ID as SALON_ACADEMY_ASSESSMENT_ID",
	"EXP_MD5_UPD_FLAG___LOCATION_ID as LOCATION_ID",
	"EXP_MD5_UPD_FLAG___EMPLOYEE_ID as EMPLOYEE_ID",
	"EXP_MD5_UPD_FLAG___DISTRICT_LEADER_NAME as DISTRICT_LEADER_NAME",
	"EXP_MD5_UPD_FLAG___SALON_SAFETY_CERTIFICATE_DT as SALON_SAFETY_CERTIFICATE_DT",
	"EXP_MD5_UPD_FLAG___SPLASH_DT as SPLASH_DT",
	"EXP_MD5_UPD_FLAG___SPLASH_EXAM_PTS_DT as SPLASH_EXAM_PTS_DT",
	"EXP_MD5_UPD_FLAG___SPLASH_OBSERV_PTS_DT as SPLASH_OBSERV_PTS_DT",
	"EXP_MD5_UPD_FLAG___GROOMING_TOOL_KIT_ID as GROOMING_TOOL_KIT_ID",
	"EXP_MD5_UPD_FLAG___TRAINING_STATUS_ID as TRAINING_STATUS_ID",
	"EXP_MD5_UPD_FLAG___TRAINING_STATUS_DESC as TRAINING_STATUS_DESC",
	"EXP_MD5_UPD_FLAG___TRAINING_TYPE_ID as TRAINING_TYPE_ID",
	"EXP_MD5_UPD_FLAG___ENROLLED_TSTMP as ENROLLED_TSTMP",
	"EXP_MD5_UPD_FLAG___DOG_ACADEMY_COMPLETED_DT as DOG_ACADEMY_COMPLETED_DT",
	"EXP_MD5_UPD_FLAG___SAFETY_ALL_E_LEARNING_DT as SAFETY_ALL_E_LEARNING_DT",
	"EXP_MD5_UPD_FLAG___SAFETY_ALL_PTS_DT as SAFETY_ALL_PTS_DT",
	"EXP_MD5_UPD_FLAG___SAFETY_SALON_E_LEARNING_DT as SAFETY_SALON_E_LEARNING_DT",
	"EXP_MD5_UPD_FLAG___SAFETY_SALON_PTS_DT as SAFETY_SALON_PTS_DT",
	"EXP_MD5_UPD_FLAG___CANCELLED_FLAG as CANCELLED_FLAG",
	"EXP_MD5_UPD_FLAG___CREATED_TSTMP as CREATED_TSTMP",
	"EXP_MD5_UPD_FLAG___CREATED_BY as CREATED_BY",
	"EXP_MD5_UPD_FLAG___MODIFIED_TSTMP as MODIFIED_TSTMP",
	"EXP_MD5_UPD_FLAG___MODIFIED_BY as MODIFIED_BY",
	"EXP_MD5_UPD_FLAG___UPDATE_TSTMP as UPDATE_TSTMP",
	"EXP_MD5_UPD_FLAG___o_LOAD_TSTMP as o_LOAD_TSTMP",
	"EXP_MD5_UPD_FLAG___UPD_FLAG as UPD_FLAG").filter("UPD_FLAG != 3").withColumn("sys_row_id", monotonically_increasing_id())

# COMMAND ----------
# Processing node UPD_MD5, type UPDATE_STRATEGY 
# COLUMN COUNT: 32

# for each involved DataFrame, append the dataframe name to each column
FIL_NO_CHANGES_temp = FIL_NO_CHANGES.toDF(*["FIL_NO_CHANGES___" + col for col in FIL_NO_CHANGES.columns])

UPD_MD5 = FIL_NO_CHANGES_temp.selectExpr(
	"FIL_NO_CHANGES___SALON_ACADEMY_TRAINING_ID as SALON_ACADEMY_TRAINING_ID",
	"FIL_NO_CHANGES___SALON_ACADEMY_ID as SALON_ACADEMY_ID",
	"FIL_NO_CHANGES___SALON_ACADEMY_TYPE_ID as SALON_ACADEMY_TYPE_ID",
	"FIL_NO_CHANGES___SALON_ACADEMY_TYPE_DESC as SALON_ACADEMY_TYPE_DESC",
	"FIL_NO_CHANGES___SALON_ACADEMY_CLASS as SALON_ACADEMY_CLASS",
	"FIL_NO_CHANGES___SALON_ACADEMY_TRAVEL_ID as SALON_ACADEMY_TRAVEL_ID",
	"FIL_NO_CHANGES___SALON_ACADEMY_ASSESSMENT_ID as SALON_ACADEMY_ASSESSMENT_ID",
	"FIL_NO_CHANGES___LOCATION_ID as LOCATION_ID",
	"FIL_NO_CHANGES___EMPLOYEE_ID as EMPLOYEE_ID",
	"FIL_NO_CHANGES___DISTRICT_LEADER_NAME as DISTRICT_LEADER_NAME",
	"FIL_NO_CHANGES___SALON_SAFETY_CERTIFICATE_DT as SALON_SAFETY_CERTIFICATE_DT",
	"FIL_NO_CHANGES___SPLASH_DT as SPLASH_DT",
	"FIL_NO_CHANGES___SPLASH_EXAM_PTS_DT as SPLASH_EXAM_PTS_DT",
	"FIL_NO_CHANGES___SPLASH_OBSERV_PTS_DT as SPLASH_OBSERV_PTS_DT",
	"FIL_NO_CHANGES___GROOMING_TOOL_KIT_ID as GROOMING_TOOL_KIT_ID",
	"FIL_NO_CHANGES___TRAINING_STATUS_ID as TRAINING_STATUS_ID",
	"FIL_NO_CHANGES___TRAINING_STATUS_DESC as TRAINING_STATUS_DESC",
	"FIL_NO_CHANGES___TRAINING_TYPE_ID as TRAINING_TYPE_ID",
	"FIL_NO_CHANGES___ENROLLED_TSTMP as ENROLLED_TSTMP",
	"FIL_NO_CHANGES___DOG_ACADEMY_COMPLETED_DT as DOG_ACADEMY_COMPLETED_DT",
	"FIL_NO_CHANGES___SAFETY_ALL_E_LEARNING_DT as SAFETY_ALL_E_LEARNING_DT",
	"FIL_NO_CHANGES___SAFETY_ALL_PTS_DT as SAFETY_ALL_PTS_DT",
	"FIL_NO_CHANGES___SAFETY_SALON_E_LEARNING_DT as SAFETY_SALON_E_LEARNING_DT",
	"FIL_NO_CHANGES___SAFETY_SALON_PTS_DT as SAFETY_SALON_PTS_DT",
	"FIL_NO_CHANGES___CANCELLED_FLAG as CANCELLED_FLAG",
	"FIL_NO_CHANGES___CREATED_TSTMP as CREATED_TSTMP",
	"FIL_NO_CHANGES___CREATED_BY as CREATED_BY",
	"FIL_NO_CHANGES___MODIFIED_TSTMP as MODIFIED_TSTMP",
	"FIL_NO_CHANGES___MODIFIED_BY as MODIFIED_BY",
	"FIL_NO_CHANGES___UPDATE_TSTMP as UPDATE_TSTMP",
	"FIL_NO_CHANGES___o_LOAD_TSTMP as o_LOAD_TSTMP",
	"FIL_NO_CHANGES___UPD_FLAG as UPD_FLAG") \
	.withColumn('pyspark_data_action', col('UPD_FLAG'))

# COMMAND ----------
# Processing node Shortcut_to_SALON_ACADEMY_TRAINING1, type TARGET 
# COLUMN COUNT: 31


Shortcut_to_SALON_ACADEMY_TRAINING1 = UPD_MD5.selectExpr(
	"SALON_ACADEMY_TRAINING_ID as SALON_ACADEMY_TRAINING_ID",
	"SALON_ACADEMY_ID as SALON_ACADEMY_ID",
	"CAST(SALON_ACADEMY_TYPE_ID AS BIGINT) as SALON_ACADEMY_TYPE_ID",
	"CAST(SALON_ACADEMY_TYPE_DESC AS STRING) as SALON_ACADEMY_TYPE_DESC",
	"CAST(SALON_ACADEMY_CLASS AS STRING) as SALON_ACADEMY_CLASS",
	"SALON_ACADEMY_TRAVEL_ID as SALON_ACADEMY_TRAVEL_ID",
	"SALON_ACADEMY_ASSESSMENT_ID as SALON_ACADEMY_ASSESSMENT_ID",
	"CAST(LOCATION_ID AS BIGINT) as LOCATION_ID",
	"CAST(EMPLOYEE_ID AS BIGINT) as EMPLOYEE_ID",
	"CAST(DISTRICT_LEADER_NAME AS STRING) as DISTRICT_LEADER_NAME",
	"CAST(SALON_SAFETY_CERTIFICATE_DT AS DATE) as SALON_SAFETY_CERTIFICATE_DT",
	"CAST(SPLASH_DT AS DATE) as SPLASH_DT",
	"CAST(SPLASH_EXAM_PTS_DT AS DATE) as SPLASH_EXAM_PTS_DT",
	"CAST(SPLASH_OBSERV_PTS_DT AS DATE) as SPLASH_OBSERV_PTS_DT",
	"CAST(GROOMING_TOOL_KIT_ID AS BIGINT) as GROOMING_TOOL_KIT_ID",
	"CAST(TRAINING_STATUS_ID AS BIGINT) as TRAINING_STATUS_ID",
	"CAST(TRAINING_STATUS_DESC AS STRING) as TRAINING_STATUS_DESC",
	"CAST(TRAINING_TYPE_ID AS BIGINT) as TRAINING_TYPE_ID",
	"CAST(ENROLLED_TSTMP AS TIMESTAMP) as ENROLLED_TSTMP",
	"CAST(DOG_ACADEMY_COMPLETED_DT AS DATE) as DOG_ACADEMY_COMPLETED_DT",
	"CAST(SAFETY_ALL_E_LEARNING_DT AS DATE) as SAFETY_ALL_E_LEARNING_DT",
	"CAST(SAFETY_ALL_PTS_DT AS DATE) as SAFETY_ALL_PTS_DT",
	"CAST(SAFETY_SALON_E_LEARNING_DT AS DATE) as SAFETY_SALON_E_LEARNING_DT",
	"CAST(SAFETY_SALON_PTS_DT AS DATE) as SAFETY_SALON_PTS_DT",
	"CAST(CANCELLED_FLAG AS BIGINT) as CANCELLED_FLAG",
	"CAST(CREATED_TSTMP AS TIMESTAMP) as CREATED_TSTMP",
	"CAST(CREATED_BY AS STRING) as CREATED_BY",
	"CAST(MODIFIED_TSTMP AS TIMESTAMP) as MODIFIED_TSTMP",
	"CAST(MODIFIED_BY AS STRING) as MODIFIED_BY",
	"CAST(UPDATE_TSTMP AS TIMESTAMP) as UPDATE_TSTMP",
	"CAST(o_LOAD_TSTMP AS TIMESTAMP) as LOAD_TSTMP",
	"pyspark_data_action as pyspark_data_action"
)

try:
	primary_key = """source.SALON_ACADEMY_TRAINING_ID = target.SALON_ACADEMY_TRAINING_ID"""
	refined_perf_table = f"{legacy}.SALON_ACADEMY_TRAINING"
	executeMerge(Shortcut_to_SALON_ACADEMY_TRAINING1, refined_perf_table, primary_key)
	logger.info(f"Merge with {refined_perf_table} completed]")
	logPrevRunDt("SALON_ACADEMY_TRAINING", "SALON_ACADEMY_TRAINING", "Completed", "N/A", f"{raw}.log_run_details")
except Exception as e:
	logPrevRunDt("SALON_ACADEMY_TRAINING", "SALON_ACADEMY_TRAINING","Failed",str(e), f"{raw}.log_run_details")
	raise e
		
