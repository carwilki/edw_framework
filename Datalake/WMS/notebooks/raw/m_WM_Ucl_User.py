#Code converted on 2023-05-16 15:07:08
import os
from pyspark.sql import *
from pyspark.sql.functions import *
from pyspark.sql.window import Window
from pyspark.sql.types import *
from datetime import datetime
from dbruntime import dbutils

# COMMAND ----------

# Set global variables
starttime = datetime.now() #start timestamp of the script

# Read in job variables
# read_infa_paramfile('', 'm_WM_Ucl_User') ProcessingUtils

# COMMAND ----------
# Processing node SQ_Shortcut_to_WM_UCL_USER_PRE, type SOURCE 
# COLUMN COUNT: 53

SQ_Shortcut_to_WM_UCL_USER_PRE = spark.read.jdbc(os.environ.get('NZ_SCDS_CONNECT_STRING'), f"""SELECT
WM_UCL_USER_PRE.DC_NBR,
WM_UCL_USER_PRE.UCL_USER_ID,
WM_UCL_USER_PRE.COMPANY_ID,
WM_UCL_USER_PRE.USER_NAME,
WM_UCL_USER_PRE.USER_PASSWORD,
WM_UCL_USER_PRE.IS_ACTIVE,
WM_UCL_USER_PRE.CREATED_SOURCE_TYPE_ID,
WM_UCL_USER_PRE.CREATED_SOURCE,
WM_UCL_USER_PRE.CREATED_DTTM,
WM_UCL_USER_PRE.LAST_UPDATED_SOURCE_TYPE_ID,
WM_UCL_USER_PRE.LAST_UPDATED_SOURCE,
WM_UCL_USER_PRE.LAST_UPDATED_DTTM,
WM_UCL_USER_PRE.USER_TYPE_ID,
WM_UCL_USER_PRE.LOCALE_ID,
WM_UCL_USER_PRE.LOCATION_ID,
WM_UCL_USER_PRE.USER_FIRST_NAME,
WM_UCL_USER_PRE.USER_MIDDLE_NAME,
WM_UCL_USER_PRE.USER_LAST_NAME,
WM_UCL_USER_PRE.USER_PREFIX,
WM_UCL_USER_PRE.USER_TITLE,
WM_UCL_USER_PRE.TELEPHONE_NUMBER,
WM_UCL_USER_PRE.FAX_NUMBER,
WM_UCL_USER_PRE.ADDRESS_1,
WM_UCL_USER_PRE.ADDRESS_2,
WM_UCL_USER_PRE.CITY,
WM_UCL_USER_PRE.STATE_PROV_CODE,
WM_UCL_USER_PRE.POSTAL_CODE,
WM_UCL_USER_PRE.COUNTRY_CODE,
WM_UCL_USER_PRE.USER_EMAIL_1,
WM_UCL_USER_PRE.USER_EMAIL_2,
WM_UCL_USER_PRE.COMM_METHOD_ID_DURING_BH_1,
WM_UCL_USER_PRE.COMM_METHOD_ID_DURING_BH_2,
WM_UCL_USER_PRE.COMM_METHOD_ID_AFTER_BH_1,
WM_UCL_USER_PRE.COMM_METHOD_ID_AFTER_BH_2,
WM_UCL_USER_PRE.COMMON_NAME,
WM_UCL_USER_PRE.LAST_PASSWORD_CHANGE_DTTM,
WM_UCL_USER_PRE.LOGGED_IN,
WM_UCL_USER_PRE.LAST_LOGIN_DTTM,
WM_UCL_USER_PRE.DEFAULT_BUSINESS_UNIT_ID,
WM_UCL_USER_PRE.DEFAULT_WHSE_REGION_ID,
WM_UCL_USER_PRE.CHANNEL_ID,
WM_UCL_USER_PRE.HIBERNATE_VERSION,
WM_UCL_USER_PRE.NUMBER_OF_INVALID_LOGINS,
WM_UCL_USER_PRE.TAX_ID_NBR,
WM_UCL_USER_PRE.EMP_START_DATE,
WM_UCL_USER_PRE.BIRTH_DATE,
WM_UCL_USER_PRE.GENDER_ID,
WM_UCL_USER_PRE.PASSWORD_RESET_DATE_TIME,
WM_UCL_USER_PRE.PASSWORD_TOKEN,
WM_UCL_USER_PRE.ISPASSWORDMANAGEDINTERNALLY,
WM_UCL_USER_PRE.COPY_FROM_USER,
WM_UCL_USER_PRE.EXTERNAL_USER_ID,
WM_UCL_USER_PRE.SECURITY_POLICY_GROUP_ID
FROM WM_UCL_USER_PRE""", 
properties={
'user': os.environ.get('NZ_SCDS_LOGIN'),
'password': os.environ.get('NZ_SCDS_PASSWORD'),
'driver': os.environ.get('_DRIVER')}).withColumn("sys_row_id", monotonically_increasing_id())

# COMMAND ----------
# Processing node SQ_Shortcut_to_WM_UCL_USER, type SOURCE 
# COLUMN COUNT: 6

SQ_Shortcut_to_WM_UCL_USER = spark.read.jdbc(os.environ.get('NZ_SCDS_CONNECT_STRING'), f"""SELECT
WM_UCL_USER.LOCATION_ID,
WM_UCL_USER.WM_UCL_USER_ID,
WM_UCL_USER.WM_CREATED_TSTMP,
WM_UCL_USER.WM_LAST_UPDATED_TSTMP,
WM_UCL_USER.LOAD_TSTMP,
WM_UCL_USER.USER_NAME
FROM WM_UCL_USER
WHERE USER_NAME IN (SELECT USER_NAME FROM WM_UCL_USER_PRE)""", 
properties={
'user': os.environ.get('NZ_SCDS_LOGIN'),
'password': os.environ.get('NZ_SCDS_PASSWORD'),
'driver': os.environ.get('_DRIVER')}).withColumn("sys_row_id", monotonically_increasing_id())

# COMMAND ----------
# Processing node EXP_INT_CONVERSION, type EXPRESSION 
# COLUMN COUNT: 53

EXP_INT_CONVERSION = SQ_Shortcut_to_WM_UCL_USER_PRE.selectExpr(
	"sys_row_id as sys_row_id",
	"DC_NBR.cast(IntegerType()) as o_DC_NBR",
	"SQ_Shortcut_to_WM_UCL_USER_PRE.UCL_USER_ID as UCL_USER_ID",
	"SQ_Shortcut_to_WM_UCL_USER_PRE.COMPANY_ID as COMPANY_ID",
	"SQ_Shortcut_to_WM_UCL_USER_PRE.USER_NAME as USER_NAME",
	"SQ_Shortcut_to_WM_UCL_USER_PRE.USER_PASSWORD as USER_PASSWORD",
	"SQ_Shortcut_to_WM_UCL_USER_PRE.IS_ACTIVE as IS_ACTIVE",
	"SQ_Shortcut_to_WM_UCL_USER_PRE.CREATED_SOURCE_TYPE_ID as CREATED_SOURCE_TYPE_ID",
	"SQ_Shortcut_to_WM_UCL_USER_PRE.CREATED_SOURCE as CREATED_SOURCE",
	"SQ_Shortcut_to_WM_UCL_USER_PRE.CREATED_DTTM as CREATED_DTTM",
	"SQ_Shortcut_to_WM_UCL_USER_PRE.LAST_UPDATED_SOURCE_TYPE_ID as LAST_UPDATED_SOURCE_TYPE_ID",
	"SQ_Shortcut_to_WM_UCL_USER_PRE.LAST_UPDATED_SOURCE as LAST_UPDATED_SOURCE",
	"SQ_Shortcut_to_WM_UCL_USER_PRE.LAST_UPDATED_DTTM as LAST_UPDATED_DTTM",
	"SQ_Shortcut_to_WM_UCL_USER_PRE.USER_TYPE_ID as USER_TYPE_ID",
	"SQ_Shortcut_to_WM_UCL_USER_PRE.LOCALE_ID as LOCALE_ID",
	"SQ_Shortcut_to_WM_UCL_USER_PRE.LOCATION_ID as LOCATION_ID",
	"SQ_Shortcut_to_WM_UCL_USER_PRE.USER_FIRST_NAME as USER_FIRST_NAME",
	"SQ_Shortcut_to_WM_UCL_USER_PRE.USER_MIDDLE_NAME as USER_MIDDLE_NAME",
	"SQ_Shortcut_to_WM_UCL_USER_PRE.USER_LAST_NAME as USER_LAST_NAME",
	"SQ_Shortcut_to_WM_UCL_USER_PRE.USER_PREFIX as USER_PREFIX",
	"SQ_Shortcut_to_WM_UCL_USER_PRE.USER_TITLE as USER_TITLE",
	"SQ_Shortcut_to_WM_UCL_USER_PRE.TELEPHONE_NUMBER as TELEPHONE_NUMBER",
	"SQ_Shortcut_to_WM_UCL_USER_PRE.FAX_NUMBER as FAX_NUMBER",
	"SQ_Shortcut_to_WM_UCL_USER_PRE.ADDRESS_1 as ADDRESS_1",
	"SQ_Shortcut_to_WM_UCL_USER_PRE.ADDRESS_2 as ADDRESS_2",
	"SQ_Shortcut_to_WM_UCL_USER_PRE.CITY as CITY",
	"SQ_Shortcut_to_WM_UCL_USER_PRE.STATE_PROV_CODE as STATE_PROV_CODE",
	"SQ_Shortcut_to_WM_UCL_USER_PRE.POSTAL_CODE as POSTAL_CODE",
	"SQ_Shortcut_to_WM_UCL_USER_PRE.COUNTRY_CODE as COUNTRY_CODE",
	"SQ_Shortcut_to_WM_UCL_USER_PRE.USER_EMAIL_1 as USER_EMAIL_1",
	"SQ_Shortcut_to_WM_UCL_USER_PRE.USER_EMAIL_2 as USER_EMAIL_2",
	"SQ_Shortcut_to_WM_UCL_USER_PRE.COMM_METHOD_ID_DURING_BH_1 as COMM_METHOD_ID_DURING_BH_1",
	"SQ_Shortcut_to_WM_UCL_USER_PRE.COMM_METHOD_ID_DURING_BH_2 as COMM_METHOD_ID_DURING_BH_2",
	"SQ_Shortcut_to_WM_UCL_USER_PRE.COMM_METHOD_ID_AFTER_BH_1 as COMM_METHOD_ID_AFTER_BH_1",
	"SQ_Shortcut_to_WM_UCL_USER_PRE.COMM_METHOD_ID_AFTER_BH_2 as COMM_METHOD_ID_AFTER_BH_2",
	"SQ_Shortcut_to_WM_UCL_USER_PRE.COMMON_NAME as COMMON_NAME",
	"SQ_Shortcut_to_WM_UCL_USER_PRE.LAST_PASSWORD_CHANGE_DTTM as LAST_PASSWORD_CHANGE_DTTM",
	"SQ_Shortcut_to_WM_UCL_USER_PRE.LOGGED_IN as LOGGED_IN",
	"SQ_Shortcut_to_WM_UCL_USER_PRE.LAST_LOGIN_DTTM as LAST_LOGIN_DTTM",
	"SQ_Shortcut_to_WM_UCL_USER_PRE.DEFAULT_BUSINESS_UNIT_ID as DEFAULT_BUSINESS_UNIT_ID",
	"SQ_Shortcut_to_WM_UCL_USER_PRE.DEFAULT_WHSE_REGION_ID as DEFAULT_WHSE_REGION_ID",
	"SQ_Shortcut_to_WM_UCL_USER_PRE.CHANNEL_ID as CHANNEL_ID",
	"SQ_Shortcut_to_WM_UCL_USER_PRE.HIBERNATE_VERSION as HIBERNATE_VERSION",
	"SQ_Shortcut_to_WM_UCL_USER_PRE.NUMBER_OF_INVALID_LOGINS as NUMBER_OF_INVALID_LOGINS",
	"SQ_Shortcut_to_WM_UCL_USER_PRE.TAX_ID_NBR as TAX_ID_NBR",
	"SQ_Shortcut_to_WM_UCL_USER_PRE.EMP_START_DATE as EMP_START_DATE",
	"SQ_Shortcut_to_WM_UCL_USER_PRE.BIRTH_DATE as BIRTH_DATE",
	"SQ_Shortcut_to_WM_UCL_USER_PRE.GENDER_ID as GENDER_ID",
	"SQ_Shortcut_to_WM_UCL_USER_PRE.PASSWORD_RESET_DATE_TIME as PASSWORD_RESET_DATE_TIME",
	"SQ_Shortcut_to_WM_UCL_USER_PRE.PASSWORD_TOKEN as PASSWORD_TOKEN",
	"SQ_Shortcut_to_WM_UCL_USER_PRE.ISPASSWORDMANAGEDINTERNALLY as ISPASSWORDMANAGEDINTERNALLY",
	"SQ_Shortcut_to_WM_UCL_USER_PRE.COPY_FROM_USER as COPY_FROM_USER",
	"SQ_Shortcut_to_WM_UCL_USER_PRE.EXTERNAL_USER_ID as EXTERNAL_USER_ID",
	"SQ_Shortcut_to_WM_UCL_USER_PRE.SECURITY_POLICY_GROUP_ID as SECURITY_POLICY_GROUP_ID"
)

# COMMAND ----------
# Processing node SQ_Shortcut_to_SITE_PROFILE, type SOURCE 
# COLUMN COUNT: 2

SQ_Shortcut_to_SITE_PROFILE = spark.read.jdbc(os.environ.get('NZ_SCDS_CONNECT_STRING'), f"""SELECT
SITE_PROFILE.LOCATION_ID,
SITE_PROFILE.STORE_NBR
FROM SITE_PROFILE""", 
properties={
'user': os.environ.get('NZ_SCDS_LOGIN'),
'password': os.environ.get('NZ_SCDS_PASSWORD'),
'driver': os.environ.get('_DRIVER')}).withColumn("sys_row_id", monotonically_increasing_id())

# COMMAND ----------
# Processing node JNR_SITE_PROFILE, type JOINER . Note: using additional SELECT to rename incoming columns
# COLUMN COUNT: 55

JNR_SITE_PROFILE = SQ_Shortcut_to_SITE_PROFILE.join(EXP_INT_CONVERSION,[SQ_Shortcut_to_SITE_PROFILE.STORE_NBR == EXP_INT_CONVERSION.o_DC_NBR],'inner').selectExpr(
	"EXP_INT_CONVERSION.o_DC_NBR as o_DC_NBR",
	"EXP_INT_CONVERSION.UCL_USER_ID as UCL_USER_ID",
	"EXP_INT_CONVERSION.COMPANY_ID as COMPANY_ID",
	"EXP_INT_CONVERSION.USER_NAME as USER_NAME",
	"EXP_INT_CONVERSION.USER_PASSWORD as USER_PASSWORD",
	"EXP_INT_CONVERSION.IS_ACTIVE as IS_ACTIVE",
	"EXP_INT_CONVERSION.CREATED_SOURCE_TYPE_ID as CREATED_SOURCE_TYPE_ID",
	"EXP_INT_CONVERSION.CREATED_SOURCE as CREATED_SOURCE",
	"EXP_INT_CONVERSION.CREATED_DTTM as CREATED_DTTM",
	"EXP_INT_CONVERSION.LAST_UPDATED_SOURCE_TYPE_ID as LAST_UPDATED_SOURCE_TYPE_ID",
	"EXP_INT_CONVERSION.LAST_UPDATED_SOURCE as LAST_UPDATED_SOURCE",
	"EXP_INT_CONVERSION.LAST_UPDATED_DTTM as LAST_UPDATED_DTTM",
	"EXP_INT_CONVERSION.USER_TYPE_ID as USER_TYPE_ID",
	"EXP_INT_CONVERSION.LOCALE_ID as LOCALE_ID",
	"EXP_INT_CONVERSION.LOCATION_ID as LOCATION_ID",
	"EXP_INT_CONVERSION.USER_FIRST_NAME as USER_FIRST_NAME",
	"EXP_INT_CONVERSION.USER_MIDDLE_NAME as USER_MIDDLE_NAME",
	"EXP_INT_CONVERSION.USER_LAST_NAME as USER_LAST_NAME",
	"EXP_INT_CONVERSION.USER_PREFIX as USER_PREFIX",
	"EXP_INT_CONVERSION.USER_TITLE as USER_TITLE",
	"EXP_INT_CONVERSION.TELEPHONE_NUMBER as TELEPHONE_NUMBER",
	"EXP_INT_CONVERSION.FAX_NUMBER as FAX_NUMBER",
	"EXP_INT_CONVERSION.ADDRESS_1 as ADDRESS_1",
	"EXP_INT_CONVERSION.ADDRESS_2 as ADDRESS_2",
	"EXP_INT_CONVERSION.CITY as CITY",
	"EXP_INT_CONVERSION.STATE_PROV_CODE as STATE_PROV_CODE",
	"EXP_INT_CONVERSION.POSTAL_CODE as POSTAL_CODE",
	"EXP_INT_CONVERSION.COUNTRY_CODE as COUNTRY_CODE",
	"EXP_INT_CONVERSION.USER_EMAIL_1 as USER_EMAIL_1",
	"EXP_INT_CONVERSION.USER_EMAIL_2 as USER_EMAIL_2",
	"EXP_INT_CONVERSION.COMM_METHOD_ID_DURING_BH_1 as COMM_METHOD_ID_DURING_BH_1",
	"EXP_INT_CONVERSION.COMM_METHOD_ID_DURING_BH_2 as COMM_METHOD_ID_DURING_BH_2",
	"EXP_INT_CONVERSION.COMM_METHOD_ID_AFTER_BH_1 as COMM_METHOD_ID_AFTER_BH_1",
	"EXP_INT_CONVERSION.COMM_METHOD_ID_AFTER_BH_2 as COMM_METHOD_ID_AFTER_BH_2",
	"EXP_INT_CONVERSION.COMMON_NAME as COMMON_NAME",
	"EXP_INT_CONVERSION.LAST_PASSWORD_CHANGE_DTTM as LAST_PASSWORD_CHANGE_DTTM",
	"EXP_INT_CONVERSION.LOGGED_IN as LOGGED_IN",
	"EXP_INT_CONVERSION.LAST_LOGIN_DTTM as LAST_LOGIN_DTTM",
	"EXP_INT_CONVERSION.DEFAULT_BUSINESS_UNIT_ID as DEFAULT_BUSINESS_UNIT_ID",
	"EXP_INT_CONVERSION.DEFAULT_WHSE_REGION_ID as DEFAULT_WHSE_REGION_ID",
	"EXP_INT_CONVERSION.CHANNEL_ID as CHANNEL_ID",
	"EXP_INT_CONVERSION.HIBERNATE_VERSION as HIBERNATE_VERSION",
	"EXP_INT_CONVERSION.NUMBER_OF_INVALID_LOGINS as NUMBER_OF_INVALID_LOGINS",
	"EXP_INT_CONVERSION.TAX_ID_NBR as TAX_ID_NBR",
	"EXP_INT_CONVERSION.EMP_START_DATE as EMP_START_DATE",
	"EXP_INT_CONVERSION.BIRTH_DATE as BIRTH_DATE",
	"EXP_INT_CONVERSION.GENDER_ID as GENDER_ID",
	"EXP_INT_CONVERSION.PASSWORD_RESET_DATE_TIME as PASSWORD_RESET_DATE_TIME",
	"EXP_INT_CONVERSION.PASSWORD_TOKEN as PASSWORD_TOKEN",
	"EXP_INT_CONVERSION.ISPASSWORDMANAGEDINTERNALLY as ISPASSWORDMANAGEDINTERNALLY",
	"EXP_INT_CONVERSION.COPY_FROM_USER as COPY_FROM_USER",
	"EXP_INT_CONVERSION.EXTERNAL_USER_ID as EXTERNAL_USER_ID",
	"EXP_INT_CONVERSION.SECURITY_POLICY_GROUP_ID as SECURITY_POLICY_GROUP_ID",
	"SQ_Shortcut_to_SITE_PROFILE.LOCATION_ID as LOCATION_ID1",
	"SQ_Shortcut_to_SITE_PROFILE.STORE_NBR as STORE_NBR")

# COMMAND ----------
# Processing node JNR_WM_UCL_USER, type JOINER . Note: using additional SELECT to rename incoming columns
# COLUMN COUNT: 59

JNR_WM_UCL_USER = SQ_Shortcut_to_WM_UCL_USER.join(JNR_SITE_PROFILE,[SQ_Shortcut_to_WM_UCL_USER.LOCATION_ID == JNR_SITE_PROFILE.LOCATION_ID1, SQ_Shortcut_to_WM_UCL_USER.USER_NAME == JNR_SITE_PROFILE.USER_NAME],'right_outer').selectExpr(
	"JNR_SITE_PROFILE.LOCATION_ID1 as LOCATION_ID1",
	"JNR_SITE_PROFILE.UCL_USER_ID as UCL_USER_ID",
	"JNR_SITE_PROFILE.COMPANY_ID as COMPANY_ID",
	"JNR_SITE_PROFILE.USER_NAME as USER_NAME",
	"JNR_SITE_PROFILE.USER_PASSWORD as USER_PASSWORD",
	"JNR_SITE_PROFILE.IS_ACTIVE as IS_ACTIVE",
	"JNR_SITE_PROFILE.CREATED_SOURCE_TYPE_ID as CREATED_SOURCE_TYPE_ID",
	"JNR_SITE_PROFILE.CREATED_SOURCE as CREATED_SOURCE",
	"JNR_SITE_PROFILE.CREATED_DTTM as CREATED_DTTM",
	"JNR_SITE_PROFILE.LAST_UPDATED_SOURCE_TYPE_ID as LAST_UPDATED_SOURCE_TYPE_ID",
	"JNR_SITE_PROFILE.LAST_UPDATED_SOURCE as LAST_UPDATED_SOURCE",
	"JNR_SITE_PROFILE.LAST_UPDATED_DTTM as LAST_UPDATED_DTTM",
	"JNR_SITE_PROFILE.USER_TYPE_ID as USER_TYPE_ID",
	"JNR_SITE_PROFILE.LOCALE_ID as LOCALE_ID",
	"JNR_SITE_PROFILE.LOCATION_ID as LOCATION_ID",
	"JNR_SITE_PROFILE.USER_FIRST_NAME as USER_FIRST_NAME",
	"JNR_SITE_PROFILE.USER_MIDDLE_NAME as USER_MIDDLE_NAME",
	"JNR_SITE_PROFILE.USER_LAST_NAME as USER_LAST_NAME",
	"JNR_SITE_PROFILE.USER_PREFIX as USER_PREFIX",
	"JNR_SITE_PROFILE.USER_TITLE as USER_TITLE",
	"JNR_SITE_PROFILE.TELEPHONE_NUMBER as TELEPHONE_NUMBER",
	"JNR_SITE_PROFILE.FAX_NUMBER as FAX_NUMBER",
	"JNR_SITE_PROFILE.ADDRESS_1 as ADDRESS_1",
	"JNR_SITE_PROFILE.ADDRESS_2 as ADDRESS_2",
	"JNR_SITE_PROFILE.CITY as CITY",
	"JNR_SITE_PROFILE.STATE_PROV_CODE as STATE_PROV_CODE",
	"JNR_SITE_PROFILE.POSTAL_CODE as POSTAL_CODE",
	"JNR_SITE_PROFILE.COUNTRY_CODE as COUNTRY_CODE",
	"JNR_SITE_PROFILE.USER_EMAIL_1 as USER_EMAIL_1",
	"JNR_SITE_PROFILE.USER_EMAIL_2 as USER_EMAIL_2",
	"JNR_SITE_PROFILE.COMM_METHOD_ID_DURING_BH_1 as COMM_METHOD_ID_DURING_BH_1",
	"JNR_SITE_PROFILE.COMM_METHOD_ID_DURING_BH_2 as COMM_METHOD_ID_DURING_BH_2",
	"JNR_SITE_PROFILE.COMM_METHOD_ID_AFTER_BH_1 as COMM_METHOD_ID_AFTER_BH_1",
	"JNR_SITE_PROFILE.COMM_METHOD_ID_AFTER_BH_2 as COMM_METHOD_ID_AFTER_BH_2",
	"JNR_SITE_PROFILE.COMMON_NAME as COMMON_NAME",
	"JNR_SITE_PROFILE.LAST_PASSWORD_CHANGE_DTTM as LAST_PASSWORD_CHANGE_DTTM",
	"JNR_SITE_PROFILE.LOGGED_IN as LOGGED_IN",
	"JNR_SITE_PROFILE.LAST_LOGIN_DTTM as LAST_LOGIN_DTTM",
	"JNR_SITE_PROFILE.DEFAULT_BUSINESS_UNIT_ID as DEFAULT_BUSINESS_UNIT_ID",
	"JNR_SITE_PROFILE.DEFAULT_WHSE_REGION_ID as DEFAULT_WHSE_REGION_ID",
	"JNR_SITE_PROFILE.CHANNEL_ID as CHANNEL_ID",
	"JNR_SITE_PROFILE.HIBERNATE_VERSION as HIBERNATE_VERSION",
	"JNR_SITE_PROFILE.NUMBER_OF_INVALID_LOGINS as NUMBER_OF_INVALID_LOGINS",
	"JNR_SITE_PROFILE.TAX_ID_NBR as TAX_ID_NBR",
	"JNR_SITE_PROFILE.EMP_START_DATE as EMP_START_DATE",
	"JNR_SITE_PROFILE.BIRTH_DATE as BIRTH_DATE",
	"JNR_SITE_PROFILE.GENDER_ID as GENDER_ID",
	"JNR_SITE_PROFILE.PASSWORD_RESET_DATE_TIME as PASSWORD_RESET_DATE_TIME",
	"JNR_SITE_PROFILE.PASSWORD_TOKEN as PASSWORD_TOKEN",
	"JNR_SITE_PROFILE.ISPASSWORDMANAGEDINTERNALLY as ISPASSWORDMANAGEDINTERNALLY",
	"JNR_SITE_PROFILE.COPY_FROM_USER as COPY_FROM_USER",
	"JNR_SITE_PROFILE.EXTERNAL_USER_ID as EXTERNAL_USER_ID",
	"JNR_SITE_PROFILE.SECURITY_POLICY_GROUP_ID as SECURITY_POLICY_GROUP_ID",
	"SQ_Shortcut_to_WM_UCL_USER.LOCATION_ID as i_LOCATION_ID",
	"SQ_Shortcut_to_WM_UCL_USER.WM_UCL_USER_ID as i_WM_UCL_USER_ID",
	"SQ_Shortcut_to_WM_UCL_USER.WM_CREATED_TSTMP as i_WM_CREATED_TSTMP",
	"SQ_Shortcut_to_WM_UCL_USER.WM_LAST_UPDATED_TSTMP as i_WM_LAST_UPDATED_TSTMP",
	"SQ_Shortcut_to_WM_UCL_USER.LOAD_TSTMP as i_LOAD_TSTMP",
	"SQ_Shortcut_to_WM_UCL_USER.USER_NAME as i_USER_NAME")

# COMMAND ----------
# Processing node FIL_UNCHANGED_RECORDS, type FILTER . Note: using additional SELECT to rename incoming columns
# COLUMN COUNT: 59

FIL_UNCHANGED_RECORDS = JNR_WM_UCL_USER.selectExpr(
	"JNR_WM_UCL_USER.LOCATION_ID1 as LOCATION_ID1",
	"JNR_WM_UCL_USER.UCL_USER_ID as UCL_USER_ID",
	"JNR_WM_UCL_USER.COMPANY_ID as COMPANY_ID",
	"JNR_WM_UCL_USER.USER_NAME as USER_NAME1",
	"JNR_WM_UCL_USER.USER_PASSWORD as USER_PASSWORD",
	"JNR_WM_UCL_USER.IS_ACTIVE as IS_ACTIVE",
	"JNR_WM_UCL_USER.CREATED_SOURCE_TYPE_ID as CREATED_SOURCE_TYPE_ID",
	"JNR_WM_UCL_USER.CREATED_SOURCE as CREATED_SOURCE",
	"JNR_WM_UCL_USER.CREATED_DTTM as CREATED_DTTM",
	"JNR_WM_UCL_USER.LAST_UPDATED_SOURCE_TYPE_ID as LAST_UPDATED_SOURCE_TYPE_ID",
	"JNR_WM_UCL_USER.LAST_UPDATED_SOURCE as LAST_UPDATED_SOURCE",
	"JNR_WM_UCL_USER.LAST_UPDATED_DTTM as LAST_UPDATED_DTTM",
	"JNR_WM_UCL_USER.USER_TYPE_ID as USER_TYPE_ID",
	"JNR_WM_UCL_USER.LOCALE_ID as LOCALE_ID",
	"JNR_WM_UCL_USER.LOCATION_ID as LOCATION_ID2",
	"JNR_WM_UCL_USER.USER_FIRST_NAME as USER_FIRST_NAME1",
	"JNR_WM_UCL_USER.USER_MIDDLE_NAME as USER_MIDDLE_NAME1",
	"JNR_WM_UCL_USER.USER_LAST_NAME as USER_LAST_NAME1",
	"JNR_WM_UCL_USER.USER_PREFIX as USER_PREFIX1",
	"JNR_WM_UCL_USER.USER_TITLE as USER_TITLE1",
	"JNR_WM_UCL_USER.TELEPHONE_NUMBER as TELEPHONE_NUMBER",
	"JNR_WM_UCL_USER.FAX_NUMBER as FAX_NUMBER",
	"JNR_WM_UCL_USER.ADDRESS_1 as ADDRESS_11",
	"JNR_WM_UCL_USER.ADDRESS_2 as ADDRESS_21",
	"JNR_WM_UCL_USER.CITY as CITY1",
	"JNR_WM_UCL_USER.STATE_PROV_CODE as STATE_PROV_CODE",
	"JNR_WM_UCL_USER.POSTAL_CODE as POSTAL_CODE",
	"JNR_WM_UCL_USER.COUNTRY_CODE as COUNTRY_CODE",
	"JNR_WM_UCL_USER.USER_EMAIL_1 as USER_EMAIL_11",
	"JNR_WM_UCL_USER.USER_EMAIL_2 as USER_EMAIL_21",
	"JNR_WM_UCL_USER.COMM_METHOD_ID_DURING_BH_1 as COMM_METHOD_ID_DURING_BH_1",
	"JNR_WM_UCL_USER.COMM_METHOD_ID_DURING_BH_2 as COMM_METHOD_ID_DURING_BH_2",
	"JNR_WM_UCL_USER.COMM_METHOD_ID_AFTER_BH_1 as COMM_METHOD_ID_AFTER_BH_1",
	"JNR_WM_UCL_USER.COMM_METHOD_ID_AFTER_BH_2 as COMM_METHOD_ID_AFTER_BH_2",
	"JNR_WM_UCL_USER.COMMON_NAME as COMMON_NAME1",
	"JNR_WM_UCL_USER.LAST_PASSWORD_CHANGE_DTTM as LAST_PASSWORD_CHANGE_DTTM",
	"JNR_WM_UCL_USER.LOGGED_IN as LOGGED_IN1",
	"JNR_WM_UCL_USER.LAST_LOGIN_DTTM as LAST_LOGIN_DTTM",
	"JNR_WM_UCL_USER.DEFAULT_BUSINESS_UNIT_ID as DEFAULT_BUSINESS_UNIT_ID",
	"JNR_WM_UCL_USER.DEFAULT_WHSE_REGION_ID as DEFAULT_WHSE_REGION_ID",
	"JNR_WM_UCL_USER.CHANNEL_ID as CHANNEL_ID",
	"JNR_WM_UCL_USER.HIBERNATE_VERSION as HIBERNATE_VERSION1",
	"JNR_WM_UCL_USER.NUMBER_OF_INVALID_LOGINS as NUMBER_OF_INVALID_LOGINS1",
	"JNR_WM_UCL_USER.TAX_ID_NBR as TAX_ID_NBR",
	"JNR_WM_UCL_USER.EMP_START_DATE as EMP_START_DATE",
	"JNR_WM_UCL_USER.BIRTH_DATE as BIRTH_DATE",
	"JNR_WM_UCL_USER.GENDER_ID as GENDER_ID1",
	"JNR_WM_UCL_USER.PASSWORD_RESET_DATE_TIME as PASSWORD_RESET_DATE_TIME",
	"JNR_WM_UCL_USER.PASSWORD_TOKEN as PASSWORD_TOKEN",
	"JNR_WM_UCL_USER.ISPASSWORDMANAGEDINTERNALLY as ISPASSWORDMANAGEDINTERNALLY",
	"JNR_WM_UCL_USER.COPY_FROM_USER as COPY_FROM_USER1",
	"JNR_WM_UCL_USER.EXTERNAL_USER_ID as EXTERNAL_USER_ID",
	"JNR_WM_UCL_USER.SECURITY_POLICY_GROUP_ID as SECURITY_POLICY_GROUP_ID",
	"JNR_WM_UCL_USER.i_WM_UCL_USER_ID as i_WM_UCL_USER_ID",
	"JNR_WM_UCL_USER.i_WM_CREATED_TSTMP as i_WM_CREATED_TSTMP",
	"JNR_WM_UCL_USER.i_WM_LAST_UPDATED_TSTMP as i_WM_LAST_UPDATED_TSTMP",
	"JNR_WM_UCL_USER.i_LOAD_TSTMP as i_LOAD_TSTMP",
	"JNR_WM_UCL_USER.i_USER_NAME as i_USER_NAME1",
	"JNR_WM_UCL_USER.i_LOCATION_ID as i_LOCATION_ID").filter(f"i_USER_NAME1.isNull() OR ( i_USER_NAME1.isNotNull()  &  ( when((CREATED_DTTM.isNull()),(to_date ( '01/01/1900' , 'MM/DD/YYYY' ))).otherwise(CREATED_DTTM) != when((i_WM_CREATED_TSTMP.isNull()),(to_date ( '01/01/1900' , 'MM/DD/YYYY' ))).otherwise(i_WM_CREATED_TSTMP) OR when((LAST_UPDATED_DTTM.isNull()),(to_date ( '01/01/1900' , 'MM/DD/YYYY' ))).otherwise(LAST_UPDATED_DTTM) != when((i_WM_LAST_UPDATED_TSTMP.isNull()),(to_date ( '01/01/1900' , 'MM/DD/YYYY' ))).otherwise(i_WM_LAST_UPDATED_TSTMP) ) )").withColumn("sys_row_id", monotonically_increasing_id())

# COMMAND ----------
# Processing node EXP_UPD_VALIDATOR, type EXPRESSION . Note: using additional SELECT to rename incoming columns
# COLUMN COUNT: 58

EXP_UPD_VALIDATOR = FIL_UNCHANGED_RECORDS.selectExpr(
	"FIL_UNCHANGED_RECORDS.LOCATION_ID1 as LOCATION_ID1",
	"FIL_UNCHANGED_RECORDS.UCL_USER_ID as UCL_USER_ID",
	"FIL_UNCHANGED_RECORDS.COMPANY_ID as COMPANY_ID",
	"FIL_UNCHANGED_RECORDS.USER_NAME1 as USER_NAME1",
	"FIL_UNCHANGED_RECORDS.USER_PASSWORD as USER_PASSWORD",
	"FIL_UNCHANGED_RECORDS.IS_ACTIVE as IS_ACTIVE",
	"FIL_UNCHANGED_RECORDS.CREATED_SOURCE_TYPE_ID as CREATED_SOURCE_TYPE_ID",
	"FIL_UNCHANGED_RECORDS.CREATED_SOURCE as CREATED_SOURCE",
	"FIL_UNCHANGED_RECORDS.CREATED_DTTM as CREATED_DTTM",
	"FIL_UNCHANGED_RECORDS.LAST_UPDATED_SOURCE_TYPE_ID as LAST_UPDATED_SOURCE_TYPE_ID",
	"FIL_UNCHANGED_RECORDS.LAST_UPDATED_SOURCE as LAST_UPDATED_SOURCE",
	"FIL_UNCHANGED_RECORDS.LAST_UPDATED_DTTM as LAST_UPDATED_DTTM",
	"FIL_UNCHANGED_RECORDS.USER_TYPE_ID as USER_TYPE_ID",
	"FIL_UNCHANGED_RECORDS.LOCALE_ID as LOCALE_ID",
	"FIL_UNCHANGED_RECORDS.LOCATION_ID2 as LOCATION_ID2",
	"FIL_UNCHANGED_RECORDS.USER_FIRST_NAME1 as USER_FIRST_NAME1",
	"FIL_UNCHANGED_RECORDS.USER_MIDDLE_NAME1 as USER_MIDDLE_NAME1",
	"FIL_UNCHANGED_RECORDS.USER_LAST_NAME1 as USER_LAST_NAME1",
	"FIL_UNCHANGED_RECORDS.USER_PREFIX1 as USER_PREFIX1",
	"FIL_UNCHANGED_RECORDS.USER_TITLE1 as USER_TITLE1",
	"FIL_UNCHANGED_RECORDS.TELEPHONE_NUMBER as TELEPHONE_NUMBER",
	"FIL_UNCHANGED_RECORDS.FAX_NUMBER as FAX_NUMBER",
	"FIL_UNCHANGED_RECORDS.ADDRESS_11 as ADDRESS_11",
	"FIL_UNCHANGED_RECORDS.ADDRESS_21 as ADDRESS_21",
	"FIL_UNCHANGED_RECORDS.CITY1 as CITY1",
	"FIL_UNCHANGED_RECORDS.STATE_PROV_CODE as STATE_PROV_CODE",
	"FIL_UNCHANGED_RECORDS.POSTAL_CODE as POSTAL_CODE",
	"FIL_UNCHANGED_RECORDS.COUNTRY_CODE as COUNTRY_CODE",
	"FIL_UNCHANGED_RECORDS.USER_EMAIL_11 as USER_EMAIL_11",
	"FIL_UNCHANGED_RECORDS.USER_EMAIL_21 as USER_EMAIL_21",
	"FIL_UNCHANGED_RECORDS.COMM_METHOD_ID_DURING_BH_1 as COMM_METHOD_ID_DURING_BH_1",
	"FIL_UNCHANGED_RECORDS.COMM_METHOD_ID_DURING_BH_2 as COMM_METHOD_ID_DURING_BH_2",
	"FIL_UNCHANGED_RECORDS.COMM_METHOD_ID_AFTER_BH_1 as COMM_METHOD_ID_AFTER_BH_1",
	"FIL_UNCHANGED_RECORDS.COMM_METHOD_ID_AFTER_BH_2 as COMM_METHOD_ID_AFTER_BH_2",
	"FIL_UNCHANGED_RECORDS.COMMON_NAME1 as COMMON_NAME1",
	"FIL_UNCHANGED_RECORDS.LAST_PASSWORD_CHANGE_DTTM as LAST_PASSWORD_CHANGE_DTTM",
	"FIL_UNCHANGED_RECORDS.LOGGED_IN1 as LOGGED_IN1",
	"FIL_UNCHANGED_RECORDS.LAST_LOGIN_DTTM as LAST_LOGIN_DTTM",
	"FIL_UNCHANGED_RECORDS.DEFAULT_BUSINESS_UNIT_ID as DEFAULT_BUSINESS_UNIT_ID",
	"FIL_UNCHANGED_RECORDS.DEFAULT_WHSE_REGION_ID as DEFAULT_WHSE_REGION_ID",
	"FIL_UNCHANGED_RECORDS.CHANNEL_ID as CHANNEL_ID",
	"FIL_UNCHANGED_RECORDS.HIBERNATE_VERSION1 as HIBERNATE_VERSION1",
	"FIL_UNCHANGED_RECORDS.NUMBER_OF_INVALID_LOGINS1 as NUMBER_OF_INVALID_LOGINS1",
	"FIL_UNCHANGED_RECORDS.TAX_ID_NBR as TAX_ID_NBR",
	"FIL_UNCHANGED_RECORDS.EMP_START_DATE as EMP_START_DATE",
	"FIL_UNCHANGED_RECORDS.BIRTH_DATE as BIRTH_DATE",
	"FIL_UNCHANGED_RECORDS.GENDER_ID1 as GENDER_ID1",
	"FIL_UNCHANGED_RECORDS.PASSWORD_RESET_DATE_TIME as PASSWORD_RESET_DATE_TIME",
	"FIL_UNCHANGED_RECORDS.PASSWORD_TOKEN as PASSWORD_TOKEN",
	"FIL_UNCHANGED_RECORDS.ISPASSWORDMANAGEDINTERNALLY as ISPASSWORDMANAGEDINTERNALLY",
	"FIL_UNCHANGED_RECORDS.COPY_FROM_USER1 as COPY_FROM_USER1",
	"FIL_UNCHANGED_RECORDS.EXTERNAL_USER_ID as EXTERNAL_USER_ID",
	"FIL_UNCHANGED_RECORDS.SECURITY_POLICY_GROUP_ID as SECURITY_POLICY_GROUP_ID",
	"FIL_UNCHANGED_RECORDS.i_WM_UCL_USER_ID as i_WM_UCL_USER_ID",
	"FIL_UNCHANGED_RECORDS.i_LOAD_TSTMP as i_LOAD_TSTMP",
	"FIL_UNCHANGED_RECORDS.i_USER_NAME1 as i_USER_NAME1",
	"FIL_UNCHANGED_RECORDS.i_LOCATION_ID as i_LOCATION_ID1").selectExpr(
	"sys_row_id as sys_row_id",
	"LOCATION_ID1 as LOCATION_ID1",
	"UCL_USER_ID as UCL_USER_ID",
	"COMPANY_ID as COMPANY_ID",
	"USER_NAME1 as USER_NAME1",
	"USER_PASSWORD as USER_PASSWORD",
	"IS_ACTIVE as IS_ACTIVE",
	"CREATED_SOURCE_TYPE_ID as CREATED_SOURCE_TYPE_ID",
	"CREATED_SOURCE as CREATED_SOURCE",
	"CREATED_DTTM as CREATED_DTTM",
	"LAST_UPDATED_SOURCE_TYPE_ID as LAST_UPDATED_SOURCE_TYPE_ID",
	"LAST_UPDATED_SOURCE as LAST_UPDATED_SOURCE",
	"LAST_UPDATED_DTTM as LAST_UPDATED_DTTM",
	"USER_TYPE_ID as USER_TYPE_ID",
	"LOCALE_ID as LOCALE_ID",
	"LOCATION_ID2 as LOCATION_ID2",
	"USER_FIRST_NAME1 as USER_FIRST_NAME1",
	"USER_MIDDLE_NAME1 as USER_MIDDLE_NAME1",
	"USER_LAST_NAME1 as USER_LAST_NAME1",
	"USER_PREFIX1 as USER_PREFIX1",
	"USER_TITLE1 as USER_TITLE1",
	"TELEPHONE_NUMBER as TELEPHONE_NUMBER",
	"FAX_NUMBER as FAX_NUMBER",
	"ADDRESS_11 as ADDRESS_11",
	"ADDRESS_21 as ADDRESS_21",
	"CITY1 as CITY1",
	"STATE_PROV_CODE as STATE_PROV_CODE",
	"POSTAL_CODE as POSTAL_CODE",
	"COUNTRY_CODE as COUNTRY_CODE",
	"USER_EMAIL_11 as USER_EMAIL_11",
	"USER_EMAIL_21 as USER_EMAIL_21",
	"COMM_METHOD_ID_DURING_BH_1 as COMM_METHOD_ID_DURING_BH_1",
	"COMM_METHOD_ID_DURING_BH_2 as COMM_METHOD_ID_DURING_BH_2",
	"COMM_METHOD_ID_AFTER_BH_1 as COMM_METHOD_ID_AFTER_BH_1",
	"COMM_METHOD_ID_AFTER_BH_2 as COMM_METHOD_ID_AFTER_BH_2",
	"COMMON_NAME1 as COMMON_NAME1",
	"LAST_PASSWORD_CHANGE_DTTM as LAST_PASSWORD_CHANGE_DTTM",
	"LOGGED_IN1 as LOGGED_IN1",
	"LAST_LOGIN_DTTM as LAST_LOGIN_DTTM",
	"DEFAULT_BUSINESS_UNIT_ID as DEFAULT_BUSINESS_UNIT_ID",
	"DEFAULT_WHSE_REGION_ID as DEFAULT_WHSE_REGION_ID",
	"CHANNEL_ID as CHANNEL_ID",
	"HIBERNATE_VERSION1 as HIBERNATE_VERSION1",
	"NUMBER_OF_INVALID_LOGINS1 as NUMBER_OF_INVALID_LOGINS1",
	"TAX_ID_NBR as TAX_ID_NBR",
	"EMP_START_DATE as EMP_START_DATE",
	"BIRTH_DATE as BIRTH_DATE",
	"GENDER_ID1 as GENDER_ID1",
	"PASSWORD_RESET_DATE_TIME as PASSWORD_RESET_DATE_TIME",
	"PASSWORD_TOKEN as PASSWORD_TOKEN",
	"ISPASSWORDMANAGEDINTERNALLY as ISPASSWORDMANAGEDINTERNALLY",
	"COPY_FROM_USER1 as COPY_FROM_USER1",
	"EXTERNAL_USER_ID as EXTERNAL_USER_ID",
	"SECURITY_POLICY_GROUP_ID as SECURITY_POLICY_GROUP_ID",
	"i_USER_NAME1 as i_USER_NAME1",
	"i_LOCATION_ID1 as i_LOCATION_ID1",
	"current_date() as UPDATE_TSTMP",
	"when((ISNULL ( i_LOAD_TSTMP )),(current_date())).otherwise(i_LOAD_TSTMP) as LOAD_TSTMP",
	"when((( ISNULL ( i_USER_NAME1 )  & ISNULL ( i_LOCATION_ID1 ) )),(1)).otherwise(2) as o_UPDATE_VALIDATOR"
)

# COMMAND ----------
# Processing node UPD_INS_UPD, type UPDATE_STRATEGY 
# COLUMN COUNT: 56

UPD_INS_UPD = EXP_UPD_VALIDATOR.selectExpr(
	"EXP_UPD_VALIDATOR.LOCATION_ID1 as LOCATION_ID1",
	"EXP_UPD_VALIDATOR.UCL_USER_ID as UCL_USER_ID",
	"EXP_UPD_VALIDATOR.COMPANY_ID as COMPANY_ID",
	"EXP_UPD_VALIDATOR.USER_NAME1 as USER_NAME1",
	"EXP_UPD_VALIDATOR.USER_PASSWORD as USER_PASSWORD",
	"EXP_UPD_VALIDATOR.IS_ACTIVE as IS_ACTIVE",
	"EXP_UPD_VALIDATOR.CREATED_SOURCE_TYPE_ID as CREATED_SOURCE_TYPE_ID",
	"EXP_UPD_VALIDATOR.CREATED_SOURCE as CREATED_SOURCE",
	"EXP_UPD_VALIDATOR.CREATED_DTTM as CREATED_DTTM",
	"EXP_UPD_VALIDATOR.LAST_UPDATED_SOURCE_TYPE_ID as LAST_UPDATED_SOURCE_TYPE_ID",
	"EXP_UPD_VALIDATOR.LAST_UPDATED_SOURCE as LAST_UPDATED_SOURCE",
	"EXP_UPD_VALIDATOR.LAST_UPDATED_DTTM as LAST_UPDATED_DTTM",
	"EXP_UPD_VALIDATOR.USER_TYPE_ID as USER_TYPE_ID",
	"EXP_UPD_VALIDATOR.LOCALE_ID as LOCALE_ID",
	"EXP_UPD_VALIDATOR.LOCATION_ID2 as LOCATION_ID2",
	"EXP_UPD_VALIDATOR.USER_FIRST_NAME1 as USER_FIRST_NAME1",
	"EXP_UPD_VALIDATOR.USER_MIDDLE_NAME1 as USER_MIDDLE_NAME1",
	"EXP_UPD_VALIDATOR.USER_LAST_NAME1 as USER_LAST_NAME1",
	"EXP_UPD_VALIDATOR.USER_PREFIX1 as USER_PREFIX1",
	"EXP_UPD_VALIDATOR.USER_TITLE1 as USER_TITLE1",
	"EXP_UPD_VALIDATOR.TELEPHONE_NUMBER as TELEPHONE_NUMBER",
	"EXP_UPD_VALIDATOR.FAX_NUMBER as FAX_NUMBER",
	"EXP_UPD_VALIDATOR.ADDRESS_11 as ADDRESS_11",
	"EXP_UPD_VALIDATOR.ADDRESS_21 as ADDRESS_21",
	"EXP_UPD_VALIDATOR.CITY1 as CITY1",
	"EXP_UPD_VALIDATOR.STATE_PROV_CODE as STATE_PROV_CODE",
	"EXP_UPD_VALIDATOR.POSTAL_CODE as POSTAL_CODE",
	"EXP_UPD_VALIDATOR.COUNTRY_CODE as COUNTRY_CODE",
	"EXP_UPD_VALIDATOR.USER_EMAIL_11 as USER_EMAIL_11",
	"EXP_UPD_VALIDATOR.USER_EMAIL_21 as USER_EMAIL_21",
	"EXP_UPD_VALIDATOR.COMM_METHOD_ID_DURING_BH_1 as COMM_METHOD_ID_DURING_BH_1",
	"EXP_UPD_VALIDATOR.COMM_METHOD_ID_DURING_BH_2 as COMM_METHOD_ID_DURING_BH_2",
	"EXP_UPD_VALIDATOR.COMM_METHOD_ID_AFTER_BH_1 as COMM_METHOD_ID_AFTER_BH_1",
	"EXP_UPD_VALIDATOR.COMM_METHOD_ID_AFTER_BH_2 as COMM_METHOD_ID_AFTER_BH_2",
	"EXP_UPD_VALIDATOR.COMMON_NAME1 as COMMON_NAME1",
	"EXP_UPD_VALIDATOR.LAST_PASSWORD_CHANGE_DTTM as LAST_PASSWORD_CHANGE_DTTM",
	"EXP_UPD_VALIDATOR.LOGGED_IN1 as LOGGED_IN1",
	"EXP_UPD_VALIDATOR.LAST_LOGIN_DTTM as LAST_LOGIN_DTTM",
	"EXP_UPD_VALIDATOR.DEFAULT_BUSINESS_UNIT_ID as DEFAULT_BUSINESS_UNIT_ID",
	"EXP_UPD_VALIDATOR.DEFAULT_WHSE_REGION_ID as DEFAULT_WHSE_REGION_ID",
	"EXP_UPD_VALIDATOR.CHANNEL_ID as CHANNEL_ID",
	"EXP_UPD_VALIDATOR.HIBERNATE_VERSION1 as HIBERNATE_VERSION1",
	"EXP_UPD_VALIDATOR.NUMBER_OF_INVALID_LOGINS1 as NUMBER_OF_INVALID_LOGINS1",
	"EXP_UPD_VALIDATOR.TAX_ID_NBR as TAX_ID_NBR",
	"EXP_UPD_VALIDATOR.EMP_START_DATE as EMP_START_DATE",
	"EXP_UPD_VALIDATOR.BIRTH_DATE as BIRTH_DATE",
	"EXP_UPD_VALIDATOR.GENDER_ID1 as GENDER_ID1",
	"EXP_UPD_VALIDATOR.PASSWORD_RESET_DATE_TIME as PASSWORD_RESET_DATE_TIME",
	"EXP_UPD_VALIDATOR.PASSWORD_TOKEN as PASSWORD_TOKEN",
	"EXP_UPD_VALIDATOR.ISPASSWORDMANAGEDINTERNALLY as ISPASSWORDMANAGEDINTERNALLY",
	"EXP_UPD_VALIDATOR.COPY_FROM_USER1 as COPY_FROM_USER1",
	"EXP_UPD_VALIDATOR.EXTERNAL_USER_ID as EXTERNAL_USER_ID",
	"EXP_UPD_VALIDATOR.SECURITY_POLICY_GROUP_ID as SECURITY_POLICY_GROUP_ID",
	"EXP_UPD_VALIDATOR.UPDATE_TSTMP as UPDATE_TSTMP",
	"EXP_UPD_VALIDATOR.LOAD_TSTMP as LOAD_TSTMP",
	"EXP_UPD_VALIDATOR.o_UPDATE_VALIDATOR as o_UPDATE_VALIDATOR")
	.withColumn('pyspark_data_action', lit())

# COMMAND ----------
# Processing node Shortcut_to_WM_UCL_USER, type TARGET 
# COLUMN COUNT: 53

Shortcut_to_WM_UCL_USER = DeltaTable.forPath(spark, '/tmp/delta/WM_UCL_USER')
Shortcut_to_WM_UCL_USER.alias('WM_UCL_USER').merge(UPD_INS_UPD.alias('UPD_INS_UPD'),
'WM_UCL_USER.LOCATION_ID = UPD_INS_UPD.LOCATION_ID1 and WM_UCL_USER.USER_NAME = UPD_INS_UPD.USER_NAME1')
.whenMatchedUpdate(set = {
	'LOCATION_ID' : 'UPD_INS_UPD.LOCATION_ID1',
	'WM_UCL_USER_ID' : 'UPD_INS_UPD.UCL_USER_ID',
	'WM_COMPANY_ID' : 'UPD_INS_UPD.COMPANY_ID',
	'WM_LOCATION_ID' : 'UPD_INS_UPD.LOCATION_ID2',
	'WM_LOCALE_ID' : 'UPD_INS_UPD.LOCALE_ID',
	'WM_USER_TYPE_ID' : 'UPD_INS_UPD.USER_TYPE_ID',
	'ACTIVE_FLAG' : 'UPD_INS_UPD.IS_ACTIVE',
	'USER_NAME' : 'UPD_INS_UPD.USER_NAME1',
	'TAX_ID_NBR' : 'UPD_INS_UPD.TAX_ID_NBR',
	'COMMON_NAME' : 'UPD_INS_UPD.COMMON_NAME1',
	'USER_PREFIX' : 'UPD_INS_UPD.USER_PREFIX1',
	'USER_TITLE' : 'UPD_INS_UPD.USER_TITLE1',
	'USER_FIRST_NAME' : 'UPD_INS_UPD.USER_FIRST_NAME1',
	'USER_MIDDLE_NAME' : 'UPD_INS_UPD.USER_MIDDLE_NAME1',
	'USER_LAST_NAME' : 'UPD_INS_UPD.USER_LAST_NAME1',
	'BIRTH_DT' : 'UPD_INS_UPD.BIRTH_DATE',
	'GENDER_ID' : 'UPD_INS_UPD.GENDER_ID1',
	'EMPLOYEE_START_DT' : 'UPD_INS_UPD.EMP_START_DATE',
	'ADDR_1' : 'UPD_INS_UPD.ADDRESS_11',
	'ADDR_2' : 'UPD_INS_UPD.ADDRESS_21',
	'CITY' : 'UPD_INS_UPD.CITY1',
	'STATE_PROV_CD' : 'UPD_INS_UPD.STATE_PROV_CODE',
	'POSTAL_CD' : 'UPD_INS_UPD.POSTAL_CODE',
	'COUNTRY_CD' : 'UPD_INS_UPD.COUNTRY_CODE',
	'USER_EMAIL_1' : 'UPD_INS_UPD.USER_EMAIL_11',
	'USER_EMAIL_2' : 'UPD_INS_UPD.USER_EMAIL_21',
	'PHONE_NBR' : 'UPD_INS_UPD.TELEPHONE_NUMBER',
	'FAX_NBR' : 'UPD_INS_UPD.FAX_NUMBER',
	'WM_EXTERNAL_USER_ID' : 'UPD_INS_UPD.EXTERNAL_USER_ID',
	'COPY_FROM_USER' : 'UPD_INS_UPD.COPY_FROM_USER1',
	'WM_SECURITY_POLICY_GROUP_ID' : 'UPD_INS_UPD.SECURITY_POLICY_GROUP_ID',
	'DEFAULT_WM_BUSINESS_UNIT_ID' : 'UPD_INS_UPD.DEFAULT_BUSINESS_UNIT_ID',
	'DEFAULT_WM_WHSE_REGION_ID' : 'UPD_INS_UPD.DEFAULT_WHSE_REGION_ID',
	'WM_CHANNEL_ID' : 'UPD_INS_UPD.CHANNEL_ID',
	'WM_COMM_METHOD_ID_DURING_BH_1' : 'UPD_INS_UPD.COMM_METHOD_ID_DURING_BH_1',
	'WM_COMM_METHOD_ID_DURING_BH_2' : 'UPD_INS_UPD.COMM_METHOD_ID_DURING_BH_2',
	'WM_COMM_METHOD_ID_AFTER_BH_1' : 'UPD_INS_UPD.COMM_METHOD_ID_AFTER_BH_1',
	'WM_COMM_METHOD_ID_AFTER_BH_2' : 'UPD_INS_UPD.COMM_METHOD_ID_AFTER_BH_2',
	'PASSWORD_MANAGED_INTERNALLY_FLAG' : 'UPD_INS_UPD.ISPASSWORDMANAGEDINTERNALLY',
	'LOGGED_IN_FLAG' : 'UPD_INS_UPD.LOGGED_IN1',
	'LAST_LOGIN_TSTMP' : 'UPD_INS_UPD.LAST_LOGIN_DTTM',
	'NUMBER_OF_INVALID_LOGINS' : 'UPD_INS_UPD.NUMBER_OF_INVALID_LOGINS1',
	'PASSWORD_RESET_TSTMP' : 'UPD_INS_UPD.PASSWORD_RESET_DATE_TIME',
	'LAST_PASSWORD_CHANGE_TSTMP' : 'UPD_INS_UPD.LAST_PASSWORD_CHANGE_DTTM',
	'WM_HIBERNATE_VERSION' : 'UPD_INS_UPD.HIBERNATE_VERSION1',
	'WM_CREATED_SOURCE_TYPE_ID' : 'UPD_INS_UPD.CREATED_SOURCE_TYPE_ID',
	'WM_CREATED_SOURCE' : 'UPD_INS_UPD.CREATED_SOURCE',
	'WM_CREATED_TSTMP' : 'UPD_INS_UPD.CREATED_DTTM',
	'WM_LAST_UPDATED_SOURCE_TYPE_ID' : 'UPD_INS_UPD.LAST_UPDATED_SOURCE_TYPE_ID',
	'WM_LAST_UPDATED_SOURCE' : 'UPD_INS_UPD.LAST_UPDATED_SOURCE',
	'WM_LAST_UPDATED_TSTMP' : 'UPD_INS_UPD.LAST_UPDATED_DTTM',
	'UPDATE_TSTMP' : 'UPD_INS_UPD.UPDATE_TSTMP',
	'LOAD_TSTMP' : 'UPD_INS_UPD.LOAD_TSTMP'} )
.whenNotMatchedInsert(values = {
	'LOCATION_ID' : 'UPD_INS_UPD.LOCATION_ID1',
	'WM_UCL_USER_ID' : 'UPD_INS_UPD.UCL_USER_ID',
	'WM_COMPANY_ID' : 'UPD_INS_UPD.COMPANY_ID',
	'WM_LOCATION_ID' : 'UPD_INS_UPD.LOCATION_ID2',
	'WM_LOCALE_ID' : 'UPD_INS_UPD.LOCALE_ID',
	'WM_USER_TYPE_ID' : 'UPD_INS_UPD.USER_TYPE_ID',
	'ACTIVE_FLAG' : 'UPD_INS_UPD.IS_ACTIVE',
	'USER_NAME' : 'UPD_INS_UPD.USER_NAME1',
	'TAX_ID_NBR' : 'UPD_INS_UPD.TAX_ID_NBR',
	'COMMON_NAME' : 'UPD_INS_UPD.COMMON_NAME1',
	'USER_PREFIX' : 'UPD_INS_UPD.USER_PREFIX1',
	'USER_TITLE' : 'UPD_INS_UPD.USER_TITLE1',
	'USER_FIRST_NAME' : 'UPD_INS_UPD.USER_FIRST_NAME1',
	'USER_MIDDLE_NAME' : 'UPD_INS_UPD.USER_MIDDLE_NAME1',
	'USER_LAST_NAME' : 'UPD_INS_UPD.USER_LAST_NAME1',
	'BIRTH_DT' : 'UPD_INS_UPD.BIRTH_DATE',
	'GENDER_ID' : 'UPD_INS_UPD.GENDER_ID1',
	'EMPLOYEE_START_DT' : 'UPD_INS_UPD.EMP_START_DATE',
	'ADDR_1' : 'UPD_INS_UPD.ADDRESS_11',
	'ADDR_2' : 'UPD_INS_UPD.ADDRESS_21',
	'CITY' : 'UPD_INS_UPD.CITY1',
	'STATE_PROV_CD' : 'UPD_INS_UPD.STATE_PROV_CODE',
	'POSTAL_CD' : 'UPD_INS_UPD.POSTAL_CODE',
	'COUNTRY_CD' : 'UPD_INS_UPD.COUNTRY_CODE',
	'USER_EMAIL_1' : 'UPD_INS_UPD.USER_EMAIL_11',
	'USER_EMAIL_2' : 'UPD_INS_UPD.USER_EMAIL_21',
	'PHONE_NBR' : 'UPD_INS_UPD.TELEPHONE_NUMBER',
	'FAX_NBR' : 'UPD_INS_UPD.FAX_NUMBER',
	'WM_EXTERNAL_USER_ID' : 'UPD_INS_UPD.EXTERNAL_USER_ID',
	'COPY_FROM_USER' : 'UPD_INS_UPD.COPY_FROM_USER1',
	'WM_SECURITY_POLICY_GROUP_ID' : 'UPD_INS_UPD.SECURITY_POLICY_GROUP_ID',
	'DEFAULT_WM_BUSINESS_UNIT_ID' : 'UPD_INS_UPD.DEFAULT_BUSINESS_UNIT_ID',
	'DEFAULT_WM_WHSE_REGION_ID' : 'UPD_INS_UPD.DEFAULT_WHSE_REGION_ID',
	'WM_CHANNEL_ID' : 'UPD_INS_UPD.CHANNEL_ID',
	'WM_COMM_METHOD_ID_DURING_BH_1' : 'UPD_INS_UPD.COMM_METHOD_ID_DURING_BH_1',
	'WM_COMM_METHOD_ID_DURING_BH_2' : 'UPD_INS_UPD.COMM_METHOD_ID_DURING_BH_2',
	'WM_COMM_METHOD_ID_AFTER_BH_1' : 'UPD_INS_UPD.COMM_METHOD_ID_AFTER_BH_1',
	'WM_COMM_METHOD_ID_AFTER_BH_2' : 'UPD_INS_UPD.COMM_METHOD_ID_AFTER_BH_2',
	'PASSWORD_MANAGED_INTERNALLY_FLAG' : 'UPD_INS_UPD.ISPASSWORDMANAGEDINTERNALLY',
	'LOGGED_IN_FLAG' : 'UPD_INS_UPD.LOGGED_IN1',
	'LAST_LOGIN_TSTMP' : 'UPD_INS_UPD.LAST_LOGIN_DTTM',
	'NUMBER_OF_INVALID_LOGINS' : 'UPD_INS_UPD.NUMBER_OF_INVALID_LOGINS1',
	'PASSWORD_RESET_TSTMP' : 'UPD_INS_UPD.PASSWORD_RESET_DATE_TIME',
	'LAST_PASSWORD_CHANGE_TSTMP' : 'UPD_INS_UPD.LAST_PASSWORD_CHANGE_DTTM',
	'WM_HIBERNATE_VERSION' : 'UPD_INS_UPD.HIBERNATE_VERSION1',
	'WM_CREATED_SOURCE_TYPE_ID' : 'UPD_INS_UPD.CREATED_SOURCE_TYPE_ID',
	'WM_CREATED_SOURCE' : 'UPD_INS_UPD.CREATED_SOURCE',
	'WM_CREATED_TSTMP' : 'UPD_INS_UPD.CREATED_DTTM',
	'WM_LAST_UPDATED_SOURCE_TYPE_ID' : 'UPD_INS_UPD.LAST_UPDATED_SOURCE_TYPE_ID',
	'WM_LAST_UPDATED_SOURCE' : 'UPD_INS_UPD.LAST_UPDATED_SOURCE',
	'WM_LAST_UPDATED_TSTMP' : 'UPD_INS_UPD.LAST_UPDATED_DTTM',
	'UPDATE_TSTMP' : 'UPD_INS_UPD.UPDATE_TSTMP',
	'LOAD_TSTMP' : 'UPD_INS_UPD.LOAD_TSTMP'}).execute()

quit()