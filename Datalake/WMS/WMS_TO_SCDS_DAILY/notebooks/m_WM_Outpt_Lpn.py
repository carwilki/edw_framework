#Code converted on 2023-06-26 17:58:19
import os
import argparse
from pyspark.sql import *
from pyspark.sql.functions import *
from pyspark.sql.window import Window
from pyspark.sql.types import *
from datetime import datetime
from pyspark.dbutils import DBUtils
from Datalake.utils.genericUtilities import *
from Datalake.utils.configs import *
from Datalake.utils.mergeUtils import *
from Datalake.utils.logger import *
# COMMAND ----------

parser = argparse.ArgumentParser()
spark = SparkSession.getActiveSession()
dbutils = DBUtils(spark)

parser.add_argument('env', type=str, help='Env Variable')
args = parser.parse_args()
env = args.env
# env = 'dev'

if env is None or env == '':
    raise ValueError('env is not set')

refine = getEnvPrefix(env) + 'refine'
raw = getEnvPrefix(env) + 'raw'
legacy = getEnvPrefix(env) + 'legacy'

# Set global variables
starttime = datetime.now() #start timestamp of the script
refined_perf_table = f"{refine}.WM_OUTPT_LPN"
raw_perf_table = f"{raw}.WM_OUTPT_LPN_PRE"
site_profile_table = f"{legacy}.SITE_PROFILE"

# COMMAND ----------
# Processing node SQ_Shortcut_to_WM_OUTPT_LPN_PRE, type SOURCE 
# COLUMN COUNT: 97

SQ_Shortcut_to_WM_OUTPT_LPN_PRE = spark.sql(f"""SELECT
DC_NBR,
OUTPT_LPN_ID,
ACTUAL_CHARGE,
ACTUAL_CHARGE_CURRENCY,
ACTUAL_MONETARY_VALUE,
ACTUAL_VOLUME,
ADDNL_OPTION_CHARGE,
ADDNL_OPTION_CHARGE_CURRENCY,
ADF_TRANSMIT_FLAG,
AUDITOR_USERID,
BASE_CHARGE,
BASE_CHARGE_CURRENCY,
BILL_OF_LADING_NUMBER,
C_FACILITY_ALIAS_ID,
COD_AMOUNT,
COD_PAYMENT_METHOD,
CONTAINER_SIZE,
CONTAINER_TYPE,
CREATED_DTTM,
CREATED_SOURCE,
CREATED_SOURCE_TYPE,
DECLARED_MONETARY_VALUE,
DIST_CHARGE,
DIST_CHARGE_CURRENCY,
EPC_MATCH_FLAG,
ESTIMATED_WEIGHT,
FINAL_DEST_FACILITY_ALIAS_ID,
FREIGHT_CHARGE,
FREIGHT_CHARGE_CURRENCY,
INSUR_CHARGE,
INSUR_CHARGE_CURRENCY,
INVC_BATCH_NBR,
LAST_UPDATED_DTTM,
LOADED_DTTM,
LOADED_POSN,
LPN_EPC,
LPN_NBR_X_OF_Y,
MANIFEST_NBR,
MASTER_BOL_NBR,
MISC_INSTR_CODE_1,
MISC_INSTR_CODE_2,
MISC_INSTR_CODE_3,
MISC_INSTR_CODE_4,
MISC_INSTR_CODE_5,
MISC_NUM_1,
MISC_NUM_2,
NON_INVENTORY_LPN_FLAG,
NON_MACHINEABLE,
PACKAGE_DESCRIPTION,
PACKER_USERID,
PALLET_EPC,
PALLET_MASTER_LPN_FLAG,
PARCEL_SERVICE_MODE,
PARCEL_SHIPMENT_NBR,
PICKER_USERID,
PRE_BULK_ADD_OPT_CHR,
PRE_BULK_ADD_OPT_CHR_CURRENCY,
PRE_BULK_BASE_CHARGE,
PROC_DTTM,
PROC_STAT_CODE,
QTY_UOM,
RATE_ZONE,
RATED_WEIGHT,
RATED_WEIGHT_UOM,
SERVICE_LEVEL,
SHIP_VIA,
SHIPPED_DTTM,
STATIC_ROUTE_ID,
TC_COMPANY_ID,
TC_LPN_ID,
TC_ORDER_ID,
TC_PARENT_LPN_ID,
TC_SHIPMENT_ID,
TOTAL_LPN_QTY,
TRACKING_NBR,
ALT_TRACKING_NBR,
VERSION_NBR,
VOLUME_UOM,
WEIGHT,
WEIGHT_UOM,
LOAD_SEQUENCE,
TC_PURCHASE_ORDER_ID,
RETURN_TRACKING_NBR,
XREF_OLPN,
RETURN_REFERENCE_NUMBER,
EPI_PACKAGE_ID,
EPI_SHIPMENT_ID,
REF_FIELD_2,
REF_FIELD_3,
REF_FIELD_4,
REF_FIELD_5,
REF_FIELD_6,
REF_FIELD_7,
REF_FIELD_8,
REF_FIELD_9,
REF_FIELD_10,
REF_FIELD_1
FROM {raw_perf_table}""").withColumn("sys_row_id", monotonically_increasing_id())

# COMMAND ----------
# Processing node SQ_Shortcut_to_WM_OUTPT_LPN, type SOURCE 
# COLUMN COUNT: 5

SQ_Shortcut_to_WM_OUTPT_LPN = spark.sql(f"""SELECT
LOCATION_ID,
WM_OUTPT_LPN_ID,
WM_CREATED_TSTMP,
WM_LAST_UPDATED_TSTMP,
LOAD_TSTMP
FROM {refined_perf_table}
WHERE WM_OUTPT_LPN_ID IN (SELECT OUTPT_LPN_ID FROM {raw_perf_table})""").withColumn("sys_row_id", monotonically_increasing_id())

# COMMAND ----------
# Processing node EXP_INT_CONVERSION, type EXPRESSION 
# COLUMN COUNT: 97

# for each involved DataFrame, append the dataframe name to each column
SQ_Shortcut_to_WM_OUTPT_LPN_PRE_temp = SQ_Shortcut_to_WM_OUTPT_LPN_PRE.toDF(*["SQ_Shortcut_to_WM_OUTPT_LPN_PRE___" + col for col in SQ_Shortcut_to_WM_OUTPT_LPN_PRE.columns])

EXP_INT_CONVERSION = SQ_Shortcut_to_WM_OUTPT_LPN_PRE_temp.selectExpr( \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___sys_row_id as sys_row_id", \
	"cast(SQ_Shortcut_to_WM_OUTPT_LPN_PRE___DC_NBR as int) as o_DC_NBR", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___OUTPT_LPN_ID as OUTPT_LPN_ID", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___ACTUAL_CHARGE as ACTUAL_CHARGE", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___ACTUAL_CHARGE_CURRENCY as ACTUAL_CHARGE_CURRENCY", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___ACTUAL_MONETARY_VALUE as ACTUAL_MONETARY_VALUE", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___ACTUAL_VOLUME as ACTUAL_VOLUME", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___ADDNL_OPTION_CHARGE as ADDNL_OPTION_CHARGE", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___ADDNL_OPTION_CHARGE_CURRENCY as ADDNL_OPTION_CHARGE_CURRENCY", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___ADF_TRANSMIT_FLAG as ADF_TRANSMIT_FLAG", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___AUDITOR_USERID as AUDITOR_USERID", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___BASE_CHARGE as BASE_CHARGE", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___BASE_CHARGE_CURRENCY as BASE_CHARGE_CURRENCY", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___BILL_OF_LADING_NUMBER as BILL_OF_LADING_NUMBER", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___C_FACILITY_ALIAS_ID as C_FACILITY_ALIAS_ID", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___COD_AMOUNT as COD_AMOUNT", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___COD_PAYMENT_METHOD as COD_PAYMENT_METHOD", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___CONTAINER_SIZE as CONTAINER_SIZE", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___CONTAINER_TYPE as CONTAINER_TYPE", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___CREATED_DTTM as CREATED_DTTM", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___CREATED_SOURCE as CREATED_SOURCE", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___CREATED_SOURCE_TYPE as CREATED_SOURCE_TYPE", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___DECLARED_MONETARY_VALUE as DECLARED_MONETARY_VALUE", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___DIST_CHARGE as DIST_CHARGE", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___DIST_CHARGE_CURRENCY as DIST_CHARGE_CURRENCY", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___EPC_MATCH_FLAG as EPC_MATCH_FLAG", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___ESTIMATED_WEIGHT as ESTIMATED_WEIGHT", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___FINAL_DEST_FACILITY_ALIAS_ID as FINAL_DEST_FACILITY_ALIAS_ID", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___FREIGHT_CHARGE as FREIGHT_CHARGE", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___FREIGHT_CHARGE_CURRENCY as FREIGHT_CHARGE_CURRENCY", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___INSUR_CHARGE as INSUR_CHARGE", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___INSUR_CHARGE_CURRENCY as INSUR_CHARGE_CURRENCY", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___INVC_BATCH_NBR as INVC_BATCH_NBR", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___LAST_UPDATED_DTTM as LAST_UPDATED_DTTM", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___LOADED_DTTM as LOADED_DTTM", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___LOADED_POSN as LOADED_POSN", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___LPN_EPC as LPN_EPC", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___LPN_NBR_X_OF_Y as LPN_NBR_X_OF_Y", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___MANIFEST_NBR as MANIFEST_NBR", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___MASTER_BOL_NBR as MASTER_BOL_NBR", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___MISC_INSTR_CODE_1 as MISC_INSTR_CODE_1", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___MISC_INSTR_CODE_2 as MISC_INSTR_CODE_2", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___MISC_INSTR_CODE_3 as MISC_INSTR_CODE_3", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___MISC_INSTR_CODE_4 as MISC_INSTR_CODE_4", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___MISC_INSTR_CODE_5 as MISC_INSTR_CODE_5", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___MISC_NUM_1 as MISC_NUM_1", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___MISC_NUM_2 as MISC_NUM_2", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___NON_INVENTORY_LPN_FLAG as NON_INVENTORY_LPN_FLAG", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___NON_MACHINEABLE as NON_MACHINEABLE", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___PACKAGE_DESCRIPTION as PACKAGE_DESCRIPTION", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___PACKER_USERID as PACKER_USERID", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___PALLET_EPC as PALLET_EPC", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___PALLET_MASTER_LPN_FLAG as PALLET_MASTER_LPN_FLAG", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___PARCEL_SERVICE_MODE as PARCEL_SERVICE_MODE", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___PARCEL_SHIPMENT_NBR as PARCEL_SHIPMENT_NBR", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___PICKER_USERID as PICKER_USERID", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___PRE_BULK_ADD_OPT_CHR as PRE_BULK_ADD_OPT_CHR", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___PRE_BULK_ADD_OPT_CHR_CURRENCY as PRE_BULK_ADD_OPT_CHR_CURRENCY", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___PRE_BULK_BASE_CHARGE as PRE_BULK_BASE_CHARGE", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___PROC_DTTM as PROC_DTTM", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___PROC_STAT_CODE as PROC_STAT_CODE", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___QTY_UOM as QTY_UOM", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___RATE_ZONE as RATE_ZONE", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___RATED_WEIGHT as RATED_WEIGHT", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___RATED_WEIGHT_UOM as RATED_WEIGHT_UOM", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___SERVICE_LEVEL as SERVICE_LEVEL", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___SHIP_VIA as SHIP_VIA", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___SHIPPED_DTTM as SHIPPED_DTTM", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___STATIC_ROUTE_ID as STATIC_ROUTE_ID", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___TC_COMPANY_ID as TC_COMPANY_ID", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___TC_LPN_ID as TC_LPN_ID", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___TC_ORDER_ID as TC_ORDER_ID", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___TC_PARENT_LPN_ID as TC_PARENT_LPN_ID", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___TC_SHIPMENT_ID as TC_SHIPMENT_ID", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___TOTAL_LPN_QTY as TOTAL_LPN_QTY", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___TRACKING_NBR as TRACKING_NBR", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___ALT_TRACKING_NBR as ALT_TRACKING_NBR", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___VERSION_NBR as VERSION_NBR", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___VOLUME_UOM as VOLUME_UOM", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___WEIGHT as WEIGHT", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___WEIGHT_UOM as WEIGHT_UOM", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___LOAD_SEQUENCE as LOAD_SEQUENCE", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___TC_PURCHASE_ORDER_ID as TC_PURCHASE_ORDER_ID", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___RETURN_TRACKING_NBR as RETURN_TRACKING_NBR", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___XREF_OLPN as XREF_OLPN", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___RETURN_REFERENCE_NUMBER as RETURN_REFERENCE_NUMBER", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___EPI_PACKAGE_ID as EPI_PACKAGE_ID", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___EPI_SHIPMENT_ID as EPI_SHIPMENT_ID", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___REF_FIELD_2 as REF_FIELD_2", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___REF_FIELD_3 as REF_FIELD_3", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___REF_FIELD_4 as REF_FIELD_4", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___REF_FIELD_5 as REF_FIELD_5", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___REF_FIELD_6 as REF_FIELD_6", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___REF_FIELD_7 as REF_FIELD_7", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___REF_FIELD_8 as REF_FIELD_8", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___REF_FIELD_9 as REF_FIELD_9", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___REF_FIELD_10 as REF_FIELD_10", \
	"SQ_Shortcut_to_WM_OUTPT_LPN_PRE___REF_FIELD_1 as REF_FIELD_1" \
)

# COMMAND ----------
# Processing node SQ_Shortcut_to_SITE_PROFILE, type SOURCE 
# COLUMN COUNT: 2

SQ_Shortcut_to_SITE_PROFILE = spark.sql(f"""SELECT LOCATION_ID, STORE_NBR FROM {site_profile_table}""").withColumn("sys_row_id", monotonically_increasing_id())

# COMMAND ----------
# Processing node JNR_SITE_PROFILE, type JOINER 
# COLUMN COUNT: 99

JNR_SITE_PROFILE = SQ_Shortcut_to_SITE_PROFILE.join(EXP_INT_CONVERSION,[SQ_Shortcut_to_SITE_PROFILE.STORE_NBR == EXP_INT_CONVERSION.o_DC_NBR],'inner')

# COMMAND ----------
# Processing node JNR_WM_OUTPT_LPN, type JOINER . Note: using additional SELECT to rename incoming columns
# COLUMN COUNT: 102

# for each involved DataFrame, append the dataframe name to each column
JNR_SITE_PROFILE_temp = JNR_SITE_PROFILE.toDF(*["JNR_SITE_PROFILE___" + col for col in JNR_SITE_PROFILE.columns])
SQ_Shortcut_to_WM_OUTPT_LPN_temp = SQ_Shortcut_to_WM_OUTPT_LPN.toDF(*["SQ_Shortcut_to_WM_OUTPT_LPN___" + col for col in SQ_Shortcut_to_WM_OUTPT_LPN.columns])

JNR_WM_OUTPT_LPN = SQ_Shortcut_to_WM_OUTPT_LPN_temp.join(JNR_SITE_PROFILE_temp,[SQ_Shortcut_to_WM_OUTPT_LPN_temp.SQ_Shortcut_to_WM_OUTPT_LPN___LOCATION_ID == JNR_SITE_PROFILE_temp.JNR_SITE_PROFILE___LOCATION_ID, SQ_Shortcut_to_WM_OUTPT_LPN_temp.SQ_Shortcut_to_WM_OUTPT_LPN___WM_OUTPT_LPN_ID == JNR_SITE_PROFILE_temp.JNR_SITE_PROFILE___OUTPT_LPN_ID],'right_outer').selectExpr( \
	"JNR_SITE_PROFILE___LOCATION_ID as LOCATION_ID", \
	"JNR_SITE_PROFILE___OUTPT_LPN_ID as OUTPT_LPN_ID", \
	"JNR_SITE_PROFILE___ACTUAL_CHARGE as ACTUAL_CHARGE", \
	"JNR_SITE_PROFILE___ACTUAL_CHARGE_CURRENCY as ACTUAL_CHARGE_CURRENCY", \
	"JNR_SITE_PROFILE___ACTUAL_MONETARY_VALUE as ACTUAL_MONETARY_VALUE", \
	"JNR_SITE_PROFILE___ACTUAL_VOLUME as ACTUAL_VOLUME", \
	"JNR_SITE_PROFILE___ADDNL_OPTION_CHARGE as ADDNL_OPTION_CHARGE", \
	"JNR_SITE_PROFILE___ADDNL_OPTION_CHARGE_CURRENCY as ADDNL_OPTION_CHARGE_CURRENCY", \
	"JNR_SITE_PROFILE___ADF_TRANSMIT_FLAG as ADF_TRANSMIT_FLAG", \
	"JNR_SITE_PROFILE___AUDITOR_USERID as AUDITOR_USERID", \
	"JNR_SITE_PROFILE___BASE_CHARGE as BASE_CHARGE", \
	"JNR_SITE_PROFILE___BASE_CHARGE_CURRENCY as BASE_CHARGE_CURRENCY", \
	"JNR_SITE_PROFILE___BILL_OF_LADING_NUMBER as BILL_OF_LADING_NUMBER", \
	"JNR_SITE_PROFILE___C_FACILITY_ALIAS_ID as C_FACILITY_ALIAS_ID", \
	"JNR_SITE_PROFILE___COD_AMOUNT as COD_AMOUNT", \
	"JNR_SITE_PROFILE___COD_PAYMENT_METHOD as COD_PAYMENT_METHOD", \
	"JNR_SITE_PROFILE___CONTAINER_SIZE as CONTAINER_SIZE", \
	"JNR_SITE_PROFILE___CONTAINER_TYPE as CONTAINER_TYPE", \
	"JNR_SITE_PROFILE___CREATED_DTTM as CREATED_DTTM", \
	"JNR_SITE_PROFILE___CREATED_SOURCE as CREATED_SOURCE", \
	"JNR_SITE_PROFILE___CREATED_SOURCE_TYPE as CREATED_SOURCE_TYPE", \
	"JNR_SITE_PROFILE___DECLARED_MONETARY_VALUE as DECLARED_MONETARY_VALUE", \
	"JNR_SITE_PROFILE___DIST_CHARGE as DIST_CHARGE", \
	"JNR_SITE_PROFILE___DIST_CHARGE_CURRENCY as DIST_CHARGE_CURRENCY", \
	"JNR_SITE_PROFILE___EPC_MATCH_FLAG as EPC_MATCH_FLAG", \
	"JNR_SITE_PROFILE___ESTIMATED_WEIGHT as ESTIMATED_WEIGHT", \
	"JNR_SITE_PROFILE___FINAL_DEST_FACILITY_ALIAS_ID as FINAL_DEST_FACILITY_ALIAS_ID", \
	"JNR_SITE_PROFILE___FREIGHT_CHARGE as FREIGHT_CHARGE", \
	"JNR_SITE_PROFILE___FREIGHT_CHARGE_CURRENCY as FREIGHT_CHARGE_CURRENCY", \
	"JNR_SITE_PROFILE___INSUR_CHARGE as INSUR_CHARGE", \
	"JNR_SITE_PROFILE___INSUR_CHARGE_CURRENCY as INSUR_CHARGE_CURRENCY", \
	"JNR_SITE_PROFILE___INVC_BATCH_NBR as INVC_BATCH_NBR", \
	"JNR_SITE_PROFILE___LAST_UPDATED_DTTM as LAST_UPDATED_DTTM", \
	"JNR_SITE_PROFILE___LOADED_DTTM as LOADED_DTTM", \
	"JNR_SITE_PROFILE___LOADED_POSN as LOADED_POSN", \
	"JNR_SITE_PROFILE___LPN_EPC as LPN_EPC", \
	"JNR_SITE_PROFILE___LPN_NBR_X_OF_Y as LPN_NBR_X_OF_Y", \
	"JNR_SITE_PROFILE___MANIFEST_NBR as MANIFEST_NBR", \
	"JNR_SITE_PROFILE___MASTER_BOL_NBR as MASTER_BOL_NBR", \
	"JNR_SITE_PROFILE___MISC_INSTR_CODE_1 as MISC_INSTR_CODE_1", \
	"JNR_SITE_PROFILE___MISC_INSTR_CODE_2 as MISC_INSTR_CODE_2", \
	"JNR_SITE_PROFILE___MISC_INSTR_CODE_3 as MISC_INSTR_CODE_3", \
	"JNR_SITE_PROFILE___MISC_INSTR_CODE_4 as MISC_INSTR_CODE_4", \
	"JNR_SITE_PROFILE___MISC_INSTR_CODE_5 as MISC_INSTR_CODE_5", \
	"JNR_SITE_PROFILE___MISC_NUM_1 as MISC_NUM_1", \
	"JNR_SITE_PROFILE___MISC_NUM_2 as MISC_NUM_2", \
	"JNR_SITE_PROFILE___NON_INVENTORY_LPN_FLAG as NON_INVENTORY_LPN_FLAG", \
	"JNR_SITE_PROFILE___NON_MACHINEABLE as NON_MACHINEABLE", \
	"JNR_SITE_PROFILE___PACKAGE_DESCRIPTION as PACKAGE_DESCRIPTION", \
	"JNR_SITE_PROFILE___PACKER_USERID as PACKER_USERID", \
	"JNR_SITE_PROFILE___PALLET_EPC as PALLET_EPC", \
	"JNR_SITE_PROFILE___PALLET_MASTER_LPN_FLAG as PALLET_MASTER_LPN_FLAG", \
	"JNR_SITE_PROFILE___PARCEL_SERVICE_MODE as PARCEL_SERVICE_MODE", \
	"JNR_SITE_PROFILE___PARCEL_SHIPMENT_NBR as PARCEL_SHIPMENT_NBR", \
	"JNR_SITE_PROFILE___PICKER_USERID as PICKER_USERID", \
	"JNR_SITE_PROFILE___PRE_BULK_ADD_OPT_CHR as PRE_BULK_ADD_OPT_CHR", \
	"JNR_SITE_PROFILE___PRE_BULK_ADD_OPT_CHR_CURRENCY as PRE_BULK_ADD_OPT_CHR_CURRENCY", \
	"JNR_SITE_PROFILE___PRE_BULK_BASE_CHARGE as PRE_BULK_BASE_CHARGE", \
	"JNR_SITE_PROFILE___PROC_DTTM as PROC_DTTM", \
	"JNR_SITE_PROFILE___PROC_STAT_CODE as PROC_STAT_CODE", \
	"JNR_SITE_PROFILE___QTY_UOM as QTY_UOM", \
	"JNR_SITE_PROFILE___RATE_ZONE as RATE_ZONE", \
	"JNR_SITE_PROFILE___RATED_WEIGHT as RATED_WEIGHT", \
	"JNR_SITE_PROFILE___RATED_WEIGHT_UOM as RATED_WEIGHT_UOM", \
	"JNR_SITE_PROFILE___SERVICE_LEVEL as SERVICE_LEVEL", \
	"JNR_SITE_PROFILE___SHIP_VIA as SHIP_VIA", \
	"JNR_SITE_PROFILE___SHIPPED_DTTM as SHIPPED_DTTM", \
	"JNR_SITE_PROFILE___STATIC_ROUTE_ID as STATIC_ROUTE_ID", \
	"JNR_SITE_PROFILE___TC_COMPANY_ID as TC_COMPANY_ID", \
	"JNR_SITE_PROFILE___TC_LPN_ID as TC_LPN_ID", \
	"JNR_SITE_PROFILE___TC_ORDER_ID as TC_ORDER_ID", \
	"JNR_SITE_PROFILE___TC_PARENT_LPN_ID as TC_PARENT_LPN_ID", \
	"JNR_SITE_PROFILE___TC_SHIPMENT_ID as TC_SHIPMENT_ID", \
	"JNR_SITE_PROFILE___TOTAL_LPN_QTY as TOTAL_LPN_QTY", \
	"JNR_SITE_PROFILE___TRACKING_NBR as TRACKING_NBR", \
	"JNR_SITE_PROFILE___ALT_TRACKING_NBR as ALT_TRACKING_NBR", \
	"JNR_SITE_PROFILE___VERSION_NBR as VERSION_NBR", \
	"JNR_SITE_PROFILE___VOLUME_UOM as VOLUME_UOM", \
	"JNR_SITE_PROFILE___WEIGHT as WEIGHT", \
	"JNR_SITE_PROFILE___WEIGHT_UOM as WEIGHT_UOM", \
	"JNR_SITE_PROFILE___LOAD_SEQUENCE as LOAD_SEQUENCE", \
	"JNR_SITE_PROFILE___TC_PURCHASE_ORDER_ID as TC_PURCHASE_ORDER_ID", \
	"JNR_SITE_PROFILE___RETURN_TRACKING_NBR as RETURN_TRACKING_NBR", \
	"JNR_SITE_PROFILE___XREF_OLPN as XREF_OLPN", \
	"JNR_SITE_PROFILE___RETURN_REFERENCE_NUMBER as RETURN_REFERENCE_NUMBER", \
	"JNR_SITE_PROFILE___EPI_PACKAGE_ID as EPI_PACKAGE_ID", \
	"JNR_SITE_PROFILE___EPI_SHIPMENT_ID as EPI_SHIPMENT_ID", \
	"JNR_SITE_PROFILE___REF_FIELD_2 as REF_FIELD_2", \
	"JNR_SITE_PROFILE___REF_FIELD_3 as REF_FIELD_3", \
	"JNR_SITE_PROFILE___REF_FIELD_4 as REF_FIELD_4", \
	"JNR_SITE_PROFILE___REF_FIELD_5 as REF_FIELD_5", \
	"JNR_SITE_PROFILE___REF_FIELD_6 as REF_FIELD_6", \
	"JNR_SITE_PROFILE___REF_FIELD_7 as REF_FIELD_7", \
	"JNR_SITE_PROFILE___REF_FIELD_8 as REF_FIELD_8", \
	"JNR_SITE_PROFILE___REF_FIELD_9 as REF_FIELD_9", \
	"JNR_SITE_PROFILE___REF_FIELD_10 as REF_FIELD_10", \
	"JNR_SITE_PROFILE___REF_FIELD_1 as REF_FIELD_1", \
	"SQ_Shortcut_to_WM_OUTPT_LPN___LOCATION_ID as i_LOCATION_ID", \
	"SQ_Shortcut_to_WM_OUTPT_LPN___WM_OUTPT_LPN_ID as i_WM_OUTPT_LPN_ID", \
	"SQ_Shortcut_to_WM_OUTPT_LPN___WM_CREATED_TSTMP as i_WM_CREATED_TSTMP", \
	"SQ_Shortcut_to_WM_OUTPT_LPN___WM_LAST_UPDATED_TSTMP as i_WM_LAST_UPDATED_TSTMP", \
	"SQ_Shortcut_to_WM_OUTPT_LPN___LOAD_TSTMP as i_LOAD_TSTMP")

# COMMAND ----------
# Processing node FIL_UNCHANGED_RECORDS, type FILTER 
# COLUMN COUNT: 101

# for each involved DataFrame, append the dataframe name to each column
JNR_WM_OUTPT_LPN_temp = JNR_WM_OUTPT_LPN.toDF(*["JNR_WM_OUTPT_LPN___" + col for col in JNR_WM_OUTPT_LPN.columns])

FIL_UNCHANGED_RECORDS = JNR_WM_OUTPT_LPN_temp.selectExpr( \
	"JNR_WM_OUTPT_LPN___LOCATION_ID as LOCATION_ID", \
	"JNR_WM_OUTPT_LPN___OUTPT_LPN_ID as OUTPT_LPN_ID", \
	"JNR_WM_OUTPT_LPN___ACTUAL_CHARGE as ACTUAL_CHARGE", \
	"JNR_WM_OUTPT_LPN___ACTUAL_CHARGE_CURRENCY as ACTUAL_CHARGE_CURRENCY", \
	"JNR_WM_OUTPT_LPN___ACTUAL_MONETARY_VALUE as ACTUAL_MONETARY_VALUE", \
	"JNR_WM_OUTPT_LPN___ACTUAL_VOLUME as ACTUAL_VOLUME", \
	"JNR_WM_OUTPT_LPN___ADDNL_OPTION_CHARGE as ADDNL_OPTION_CHARGE", \
	"JNR_WM_OUTPT_LPN___ADDNL_OPTION_CHARGE_CURRENCY as ADDNL_OPTION_CHARGE_CURRENCY", \
	"JNR_WM_OUTPT_LPN___ADF_TRANSMIT_FLAG as ADF_TRANSMIT_FLAG", \
	"JNR_WM_OUTPT_LPN___AUDITOR_USERID as AUDITOR_USERID", \
	"JNR_WM_OUTPT_LPN___BASE_CHARGE as BASE_CHARGE", \
	"JNR_WM_OUTPT_LPN___BASE_CHARGE_CURRENCY as BASE_CHARGE_CURRENCY", \
	"JNR_WM_OUTPT_LPN___BILL_OF_LADING_NUMBER as BILL_OF_LADING_NUMBER", \
	"JNR_WM_OUTPT_LPN___C_FACILITY_ALIAS_ID as C_FACILITY_ALIAS_ID", \
	"JNR_WM_OUTPT_LPN___COD_AMOUNT as COD_AMOUNT", \
	"JNR_WM_OUTPT_LPN___COD_PAYMENT_METHOD as COD_PAYMENT_METHOD", \
	"JNR_WM_OUTPT_LPN___CONTAINER_SIZE as CONTAINER_SIZE", \
	"JNR_WM_OUTPT_LPN___CONTAINER_TYPE as CONTAINER_TYPE", \
	"JNR_WM_OUTPT_LPN___CREATED_DTTM as CREATED_DTTM", \
	"JNR_WM_OUTPT_LPN___CREATED_SOURCE as CREATED_SOURCE", \
	"JNR_WM_OUTPT_LPN___CREATED_SOURCE_TYPE as CREATED_SOURCE_TYPE", \
	"JNR_WM_OUTPT_LPN___DECLARED_MONETARY_VALUE as DECLARED_MONETARY_VALUE", \
	"JNR_WM_OUTPT_LPN___DIST_CHARGE as DIST_CHARGE", \
	"JNR_WM_OUTPT_LPN___DIST_CHARGE_CURRENCY as DIST_CHARGE_CURRENCY", \
	"JNR_WM_OUTPT_LPN___EPC_MATCH_FLAG as EPC_MATCH_FLAG", \
	"JNR_WM_OUTPT_LPN___ESTIMATED_WEIGHT as ESTIMATED_WEIGHT", \
	"JNR_WM_OUTPT_LPN___FINAL_DEST_FACILITY_ALIAS_ID as FINAL_DEST_FACILITY_ALIAS_ID", \
	"JNR_WM_OUTPT_LPN___FREIGHT_CHARGE as FREIGHT_CHARGE", \
	"JNR_WM_OUTPT_LPN___FREIGHT_CHARGE_CURRENCY as FREIGHT_CHARGE_CURRENCY", \
	"JNR_WM_OUTPT_LPN___INSUR_CHARGE as INSUR_CHARGE", \
	"JNR_WM_OUTPT_LPN___INSUR_CHARGE_CURRENCY as INSUR_CHARGE_CURRENCY", \
	"JNR_WM_OUTPT_LPN___INVC_BATCH_NBR as INVC_BATCH_NBR", \
	"JNR_WM_OUTPT_LPN___LAST_UPDATED_DTTM as LAST_UPDATED_DTTM", \
	"JNR_WM_OUTPT_LPN___LOADED_DTTM as LOADED_DTTM", \
	"JNR_WM_OUTPT_LPN___LOADED_POSN as LOADED_POSN", \
	"JNR_WM_OUTPT_LPN___LPN_EPC as LPN_EPC", \
	"JNR_WM_OUTPT_LPN___LPN_NBR_X_OF_Y as LPN_NBR_X_OF_Y", \
	"JNR_WM_OUTPT_LPN___MANIFEST_NBR as MANIFEST_NBR", \
	"JNR_WM_OUTPT_LPN___MASTER_BOL_NBR as MASTER_BOL_NBR", \
	"JNR_WM_OUTPT_LPN___MISC_INSTR_CODE_1 as MISC_INSTR_CODE_1", \
	"JNR_WM_OUTPT_LPN___MISC_INSTR_CODE_2 as MISC_INSTR_CODE_2", \
	"JNR_WM_OUTPT_LPN___MISC_INSTR_CODE_3 as MISC_INSTR_CODE_3", \
	"JNR_WM_OUTPT_LPN___MISC_INSTR_CODE_4 as MISC_INSTR_CODE_4", \
	"JNR_WM_OUTPT_LPN___MISC_INSTR_CODE_5 as MISC_INSTR_CODE_5", \
	"JNR_WM_OUTPT_LPN___MISC_NUM_1 as MISC_NUM_1", \
	"JNR_WM_OUTPT_LPN___MISC_NUM_2 as MISC_NUM_2", \
	"JNR_WM_OUTPT_LPN___NON_INVENTORY_LPN_FLAG as NON_INVENTORY_LPN_FLAG", \
	"JNR_WM_OUTPT_LPN___NON_MACHINEABLE as NON_MACHINEABLE", \
	"JNR_WM_OUTPT_LPN___PACKAGE_DESCRIPTION as PACKAGE_DESCRIPTION", \
	"JNR_WM_OUTPT_LPN___PACKER_USERID as PACKER_USERID", \
	"JNR_WM_OUTPT_LPN___PALLET_EPC as PALLET_EPC", \
	"JNR_WM_OUTPT_LPN___PALLET_MASTER_LPN_FLAG as PALLET_MASTER_LPN_FLAG", \
	"JNR_WM_OUTPT_LPN___PARCEL_SERVICE_MODE as PARCEL_SERVICE_MODE", \
	"JNR_WM_OUTPT_LPN___PARCEL_SHIPMENT_NBR as PARCEL_SHIPMENT_NBR", \
	"JNR_WM_OUTPT_LPN___PICKER_USERID as PICKER_USERID", \
	"JNR_WM_OUTPT_LPN___PRE_BULK_ADD_OPT_CHR as PRE_BULK_ADD_OPT_CHR", \
	"JNR_WM_OUTPT_LPN___PRE_BULK_ADD_OPT_CHR_CURRENCY as PRE_BULK_ADD_OPT_CHR_CURRENCY", \
	"JNR_WM_OUTPT_LPN___PRE_BULK_BASE_CHARGE as PRE_BULK_BASE_CHARGE", \
	"JNR_WM_OUTPT_LPN___PROC_DTTM as PROC_DTTM", \
	"JNR_WM_OUTPT_LPN___PROC_STAT_CODE as PROC_STAT_CODE", \
	"JNR_WM_OUTPT_LPN___QTY_UOM as QTY_UOM", \
	"JNR_WM_OUTPT_LPN___RATE_ZONE as RATE_ZONE", \
	"JNR_WM_OUTPT_LPN___RATED_WEIGHT as RATED_WEIGHT", \
	"JNR_WM_OUTPT_LPN___RATED_WEIGHT_UOM as RATED_WEIGHT_UOM", \
	"JNR_WM_OUTPT_LPN___SERVICE_LEVEL as SERVICE_LEVEL", \
	"JNR_WM_OUTPT_LPN___SHIP_VIA as SHIP_VIA", \
	"JNR_WM_OUTPT_LPN___SHIPPED_DTTM as SHIPPED_DTTM", \
	"JNR_WM_OUTPT_LPN___STATIC_ROUTE_ID as STATIC_ROUTE_ID", \
	"JNR_WM_OUTPT_LPN___TC_COMPANY_ID as TC_COMPANY_ID", \
	"JNR_WM_OUTPT_LPN___TC_LPN_ID as TC_LPN_ID", \
	"JNR_WM_OUTPT_LPN___TC_ORDER_ID as TC_ORDER_ID", \
	"JNR_WM_OUTPT_LPN___TC_PARENT_LPN_ID as TC_PARENT_LPN_ID", \
	"JNR_WM_OUTPT_LPN___TC_SHIPMENT_ID as TC_SHIPMENT_ID", \
	"JNR_WM_OUTPT_LPN___TOTAL_LPN_QTY as TOTAL_LPN_QTY", \
	"JNR_WM_OUTPT_LPN___TRACKING_NBR as TRACKING_NBR", \
	"JNR_WM_OUTPT_LPN___ALT_TRACKING_NBR as ALT_TRACKING_NBR", \
	"JNR_WM_OUTPT_LPN___VERSION_NBR as VERSION_NBR", \
	"JNR_WM_OUTPT_LPN___VOLUME_UOM as VOLUME_UOM", \
	"JNR_WM_OUTPT_LPN___WEIGHT as WEIGHT", \
	"JNR_WM_OUTPT_LPN___WEIGHT_UOM as WEIGHT_UOM", \
	"JNR_WM_OUTPT_LPN___LOAD_SEQUENCE as LOAD_SEQUENCE", \
	"JNR_WM_OUTPT_LPN___TC_PURCHASE_ORDER_ID as TC_PURCHASE_ORDER_ID", \
	"JNR_WM_OUTPT_LPN___RETURN_TRACKING_NBR as RETURN_TRACKING_NBR", \
	"JNR_WM_OUTPT_LPN___XREF_OLPN as XREF_OLPN", \
	"JNR_WM_OUTPT_LPN___RETURN_REFERENCE_NUMBER as RETURN_REFERENCE_NUMBER", \
	"JNR_WM_OUTPT_LPN___EPI_PACKAGE_ID as EPI_PACKAGE_ID", \
	"JNR_WM_OUTPT_LPN___EPI_SHIPMENT_ID as EPI_SHIPMENT_ID", \
	"JNR_WM_OUTPT_LPN___REF_FIELD_2 as REF_FIELD_2", \
	"JNR_WM_OUTPT_LPN___REF_FIELD_3 as REF_FIELD_3", \
	"JNR_WM_OUTPT_LPN___REF_FIELD_4 as REF_FIELD_4", \
	"JNR_WM_OUTPT_LPN___REF_FIELD_5 as REF_FIELD_5", \
	"JNR_WM_OUTPT_LPN___REF_FIELD_6 as REF_FIELD_6", \
	"JNR_WM_OUTPT_LPN___REF_FIELD_7 as REF_FIELD_7", \
	"JNR_WM_OUTPT_LPN___REF_FIELD_8 as REF_FIELD_8", \
	"JNR_WM_OUTPT_LPN___REF_FIELD_9 as REF_FIELD_9", \
	"JNR_WM_OUTPT_LPN___REF_FIELD_10 as REF_FIELD_10", \
	"JNR_WM_OUTPT_LPN___REF_FIELD_1 as REF_FIELD_1", \
	"JNR_WM_OUTPT_LPN___i_WM_OUTPT_LPN_ID as i_WM_OUTPT_LPN_ID", \
	"JNR_WM_OUTPT_LPN___i_WM_CREATED_TSTMP as i_WM_CREATED_TSTMP", \
	"JNR_WM_OUTPT_LPN___i_WM_LAST_UPDATED_TSTMP as i_WM_LAST_UPDATED_TSTMP", \
	"JNR_WM_OUTPT_LPN___i_LOAD_TSTMP as i_LOAD_TSTMP") \
    .filter("i_WM_OUTPT_LPN_ID is Null OR (  i_WM_OUTPT_LPN_ID is not Null AND ( COALESCE(CREATED_DTTM, date'1900-01-01') != COALESCE(i_WM_CREATED_TSTMP, date'1900-01-01') \
             OR COALESCE(LAST_UPDATED_DTTM, date'1900-01-01') != COALESCE(i_WM_LAST_UPDATED_TSTMP, date'1900-01-01')))").withColumn("sys_row_id", monotonically_increasing_id())

# COMMAND ----------
# Processing node EXP_UPD_VALIDATOR, type EXPRESSION 
# COLUMN COUNT: 100

# for each involved DataFrame, append the dataframe name to each column
FIL_UNCHANGED_RECORDS_temp = FIL_UNCHANGED_RECORDS.toDF(*["FIL_UNCHANGED_RECORDS___" + col for col in FIL_UNCHANGED_RECORDS.columns])

EXP_UPD_VALIDATOR = FIL_UNCHANGED_RECORDS_temp.selectExpr( \
	"FIL_UNCHANGED_RECORDS___sys_row_id as sys_row_id", \
	"FIL_UNCHANGED_RECORDS___LOCATION_ID as LOCATION_ID", \
	"FIL_UNCHANGED_RECORDS___OUTPT_LPN_ID as OUTPT_LPN_ID", \
	"FIL_UNCHANGED_RECORDS___ACTUAL_CHARGE as ACTUAL_CHARGE", \
	"FIL_UNCHANGED_RECORDS___ACTUAL_CHARGE_CURRENCY as ACTUAL_CHARGE_CURRENCY", \
	"FIL_UNCHANGED_RECORDS___ACTUAL_MONETARY_VALUE as ACTUAL_MONETARY_VALUE", \
	"FIL_UNCHANGED_RECORDS___ACTUAL_VOLUME as ACTUAL_VOLUME", \
	"FIL_UNCHANGED_RECORDS___ADDNL_OPTION_CHARGE as ADDNL_OPTION_CHARGE", \
	"FIL_UNCHANGED_RECORDS___ADDNL_OPTION_CHARGE_CURRENCY as ADDNL_OPTION_CHARGE_CURRENCY", \
	"CASE WHEN TRIM(UPPER(FIL_UNCHANGED_RECORDS___ADF_TRANSMIT_FLAG)) = '1' THEN '1' ELSE '0' END as ADF_TRANSMIT_FLAG_EXP", \
	"FIL_UNCHANGED_RECORDS___AUDITOR_USERID as AUDITOR_USERID", \
	"FIL_UNCHANGED_RECORDS___BASE_CHARGE as BASE_CHARGE", \
	"FIL_UNCHANGED_RECORDS___BASE_CHARGE_CURRENCY as BASE_CHARGE_CURRENCY", \
	"FIL_UNCHANGED_RECORDS___BILL_OF_LADING_NUMBER as BILL_OF_LADING_NUMBER", \
	"FIL_UNCHANGED_RECORDS___C_FACILITY_ALIAS_ID as C_FACILITY_ALIAS_ID", \
	"FIL_UNCHANGED_RECORDS___COD_AMOUNT as COD_AMOUNT", \
	"FIL_UNCHANGED_RECORDS___COD_PAYMENT_METHOD as COD_PAYMENT_METHOD", \
	"FIL_UNCHANGED_RECORDS___CONTAINER_SIZE as CONTAINER_SIZE", \
	"FIL_UNCHANGED_RECORDS___CONTAINER_TYPE as CONTAINER_TYPE", \
	"FIL_UNCHANGED_RECORDS___CREATED_DTTM as CREATED_DTTM", \
	"FIL_UNCHANGED_RECORDS___CREATED_SOURCE as CREATED_SOURCE", \
	"FIL_UNCHANGED_RECORDS___CREATED_SOURCE_TYPE as CREATED_SOURCE_TYPE", \
	"FIL_UNCHANGED_RECORDS___DECLARED_MONETARY_VALUE as DECLARED_MONETARY_VALUE", \
	"FIL_UNCHANGED_RECORDS___DIST_CHARGE as DIST_CHARGE", \
	"FIL_UNCHANGED_RECORDS___DIST_CHARGE_CURRENCY as DIST_CHARGE_CURRENCY", \
	"CASE WHEN TRIM(UPPER(FIL_UNCHANGED_RECORDS___EPC_MATCH_FLAG)) IN ('1', 'Y') THEN '1' ELSE '0' END as EPC_MATCH_FLAG_EXP", \
	"FIL_UNCHANGED_RECORDS___ESTIMATED_WEIGHT as ESTIMATED_WEIGHT", \
	"FIL_UNCHANGED_RECORDS___FINAL_DEST_FACILITY_ALIAS_ID as FINAL_DEST_FACILITY_ALIAS_ID", \
	"FIL_UNCHANGED_RECORDS___FREIGHT_CHARGE as FREIGHT_CHARGE", \
	"FIL_UNCHANGED_RECORDS___FREIGHT_CHARGE_CURRENCY as FREIGHT_CHARGE_CURRENCY", \
	"FIL_UNCHANGED_RECORDS___INSUR_CHARGE as INSUR_CHARGE", \
	"FIL_UNCHANGED_RECORDS___INSUR_CHARGE_CURRENCY as INSUR_CHARGE_CURRENCY", \
	"FIL_UNCHANGED_RECORDS___INVC_BATCH_NBR as INVC_BATCH_NBR", \
	"FIL_UNCHANGED_RECORDS___LAST_UPDATED_DTTM as LAST_UPDATED_DTTM", \
	"FIL_UNCHANGED_RECORDS___LOADED_DTTM as LOADED_DTTM", \
	"FIL_UNCHANGED_RECORDS___LOADED_POSN as LOADED_POSN", \
	"FIL_UNCHANGED_RECORDS___LPN_EPC as LPN_EPC", \
	"FIL_UNCHANGED_RECORDS___LPN_NBR_X_OF_Y as LPN_NBR_X_OF_Y", \
	"FIL_UNCHANGED_RECORDS___MANIFEST_NBR as MANIFEST_NBR", \
	"FIL_UNCHANGED_RECORDS___MASTER_BOL_NBR as MASTER_BOL_NBR", \
	"FIL_UNCHANGED_RECORDS___MISC_INSTR_CODE_1 as MISC_INSTR_CODE_1", \
	"FIL_UNCHANGED_RECORDS___MISC_INSTR_CODE_2 as MISC_INSTR_CODE_2", \
	"FIL_UNCHANGED_RECORDS___MISC_INSTR_CODE_3 as MISC_INSTR_CODE_3", \
	"FIL_UNCHANGED_RECORDS___MISC_INSTR_CODE_4 as MISC_INSTR_CODE_4", \
	"FIL_UNCHANGED_RECORDS___MISC_INSTR_CODE_5 as MISC_INSTR_CODE_5", \
	"FIL_UNCHANGED_RECORDS___MISC_NUM_1 as MISC_NUM_1", \
	"FIL_UNCHANGED_RECORDS___MISC_NUM_2 as MISC_NUM_2", \
	"FIL_UNCHANGED_RECORDS___NON_INVENTORY_LPN_FLAG as NON_INVENTORY_LPN_FLAG_EXP", \
	"FIL_UNCHANGED_RECORDS___NON_MACHINEABLE as NON_MACHINEABLE", \
	"FIL_UNCHANGED_RECORDS___PACKAGE_DESCRIPTION as PACKAGE_DESCRIPTION", \
	"FIL_UNCHANGED_RECORDS___PACKER_USERID as PACKER_USERID", \
	"FIL_UNCHANGED_RECORDS___PALLET_EPC as PALLET_EPC", \
	"FIL_UNCHANGED_RECORDS___PALLET_MASTER_LPN_FLAG as PALLET_MASTER_LPN_FLAG_EXP", \
	"FIL_UNCHANGED_RECORDS___PARCEL_SERVICE_MODE as PARCEL_SERVICE_MODE", \
	"FIL_UNCHANGED_RECORDS___PARCEL_SHIPMENT_NBR as PARCEL_SHIPMENT_NBR", \
	"FIL_UNCHANGED_RECORDS___PICKER_USERID as PICKER_USERID", \
	"FIL_UNCHANGED_RECORDS___PRE_BULK_ADD_OPT_CHR as PRE_BULK_ADD_OPT_CHR", \
	"FIL_UNCHANGED_RECORDS___PRE_BULK_ADD_OPT_CHR_CURRENCY as PRE_BULK_ADD_OPT_CHR_CURRENCY", \
	"FIL_UNCHANGED_RECORDS___PRE_BULK_BASE_CHARGE as PRE_BULK_BASE_CHARGE", \
	"FIL_UNCHANGED_RECORDS___PROC_DTTM as PROC_DTTM", \
	"FIL_UNCHANGED_RECORDS___PROC_STAT_CODE as PROC_STAT_CODE", \
	"FIL_UNCHANGED_RECORDS___QTY_UOM as QTY_UOM", \
	"FIL_UNCHANGED_RECORDS___RATE_ZONE as RATE_ZONE", \
	"FIL_UNCHANGED_RECORDS___RATED_WEIGHT as RATED_WEIGHT", \
	"FIL_UNCHANGED_RECORDS___RATED_WEIGHT_UOM as RATED_WEIGHT_UOM", \
	"FIL_UNCHANGED_RECORDS___SERVICE_LEVEL as SERVICE_LEVEL", \
	"FIL_UNCHANGED_RECORDS___SHIP_VIA as SHIP_VIA", \
	"FIL_UNCHANGED_RECORDS___SHIPPED_DTTM as SHIPPED_DTTM", \
	"FIL_UNCHANGED_RECORDS___STATIC_ROUTE_ID as STATIC_ROUTE_ID", \
	"FIL_UNCHANGED_RECORDS___TC_COMPANY_ID as TC_COMPANY_ID", \
	"FIL_UNCHANGED_RECORDS___TC_LPN_ID as TC_LPN_ID", \
	"FIL_UNCHANGED_RECORDS___TC_ORDER_ID as TC_ORDER_ID", \
	"FIL_UNCHANGED_RECORDS___TC_PARENT_LPN_ID as TC_PARENT_LPN_ID", \
	"FIL_UNCHANGED_RECORDS___TC_SHIPMENT_ID as TC_SHIPMENT_ID", \
	"FIL_UNCHANGED_RECORDS___TOTAL_LPN_QTY as TOTAL_LPN_QTY", \
	"FIL_UNCHANGED_RECORDS___TRACKING_NBR as TRACKING_NBR", \
	"FIL_UNCHANGED_RECORDS___ALT_TRACKING_NBR as ALT_TRACKING_NBR", \
	"FIL_UNCHANGED_RECORDS___VERSION_NBR as VERSION_NBR", \
	"FIL_UNCHANGED_RECORDS___VOLUME_UOM as VOLUME_UOM", \
	"FIL_UNCHANGED_RECORDS___WEIGHT as WEIGHT", \
	"FIL_UNCHANGED_RECORDS___WEIGHT_UOM as WEIGHT_UOM", \
	"FIL_UNCHANGED_RECORDS___LOAD_SEQUENCE as LOAD_SEQUENCE", \
	"FIL_UNCHANGED_RECORDS___TC_PURCHASE_ORDER_ID as TC_PURCHASE_ORDER_ID", \
	"FIL_UNCHANGED_RECORDS___RETURN_TRACKING_NBR as RETURN_TRACKING_NBR", \
	"FIL_UNCHANGED_RECORDS___XREF_OLPN as XREF_OLPN", \
	"FIL_UNCHANGED_RECORDS___RETURN_REFERENCE_NUMBER as RETURN_REFERENCE_NUMBER", \
	"FIL_UNCHANGED_RECORDS___EPI_PACKAGE_ID as EPI_PACKAGE_ID", \
	"FIL_UNCHANGED_RECORDS___EPI_SHIPMENT_ID as EPI_SHIPMENT_ID", \
	"FIL_UNCHANGED_RECORDS___REF_FIELD_2 as REF_FIELD_2", \
	"FIL_UNCHANGED_RECORDS___REF_FIELD_3 as REF_FIELD_3", \
	"FIL_UNCHANGED_RECORDS___REF_FIELD_4 as REF_FIELD_4", \
	"FIL_UNCHANGED_RECORDS___REF_FIELD_5 as REF_FIELD_5", \
	"FIL_UNCHANGED_RECORDS___REF_FIELD_6 as REF_FIELD_6", \
	"FIL_UNCHANGED_RECORDS___REF_FIELD_7 as REF_FIELD_7", \
	"FIL_UNCHANGED_RECORDS___REF_FIELD_8 as REF_FIELD_8", \
	"FIL_UNCHANGED_RECORDS___REF_FIELD_9 as REF_FIELD_9", \
	"FIL_UNCHANGED_RECORDS___REF_FIELD_10 as REF_FIELD_10", \
	"FIL_UNCHANGED_RECORDS___REF_FIELD_1 as REF_FIELD_1", \
	"CURRENT_TIMESTAMP as UPDATE_TSTMP", \
	"IF(FIL_UNCHANGED_RECORDS___i_LOAD_TSTMP IS NULL, CURRENT_TIMESTAMP, FIL_UNCHANGED_RECORDS___i_LOAD_TSTMP) as LOAD_TSTMP", \
	"IF(FIL_UNCHANGED_RECORDS___i_WM_OUTPT_LPN_ID IS NULL, 1, 2) as o_UPDATE_VALIDATOR" \
)

# COMMAND ----------
# Processing node UPD_INS_UPD, type UPDATE_STRATEGY . Note: using additional SELECT to rename incoming columns
# COLUMN COUNT: 100

# for each involved DataFrame, append the dataframe name to each column
EXP_UPD_VALIDATOR_temp = EXP_UPD_VALIDATOR.toDF(*["EXP_UPD_VALIDATOR___" + col for col in EXP_UPD_VALIDATOR.columns])

UPD_INS_UPD = EXP_UPD_VALIDATOR_temp.selectExpr( \
	"EXP_UPD_VALIDATOR___LOCATION_ID as LOCATION_ID", \
	"EXP_UPD_VALIDATOR___OUTPT_LPN_ID as OUTPT_LPN_ID", \
	"EXP_UPD_VALIDATOR___ACTUAL_CHARGE as ACTUAL_CHARGE", \
	"EXP_UPD_VALIDATOR___ACTUAL_CHARGE_CURRENCY as ACTUAL_CHARGE_CURRENCY", \
	"EXP_UPD_VALIDATOR___ACTUAL_MONETARY_VALUE as ACTUAL_MONETARY_VALUE", \
	"EXP_UPD_VALIDATOR___ACTUAL_VOLUME as ACTUAL_VOLUME", \
	"EXP_UPD_VALIDATOR___ADDNL_OPTION_CHARGE as ADDNL_OPTION_CHARGE", \
	"EXP_UPD_VALIDATOR___ADDNL_OPTION_CHARGE_CURRENCY as ADDNL_OPTION_CHARGE_CURRENCY", \
	"EXP_UPD_VALIDATOR___ADF_TRANSMIT_FLAG_EXP as ADF_TRANSMIT_FLAG", \
	"EXP_UPD_VALIDATOR___AUDITOR_USERID as AUDITOR_USERID", \
	"EXP_UPD_VALIDATOR___BASE_CHARGE as BASE_CHARGE", \
	"EXP_UPD_VALIDATOR___BASE_CHARGE_CURRENCY as BASE_CHARGE_CURRENCY", \
	"EXP_UPD_VALIDATOR___BILL_OF_LADING_NUMBER as BILL_OF_LADING_NUMBER", \
	"EXP_UPD_VALIDATOR___C_FACILITY_ALIAS_ID as C_FACILITY_ALIAS_ID", \
	"EXP_UPD_VALIDATOR___COD_AMOUNT as COD_AMOUNT", \
	"EXP_UPD_VALIDATOR___COD_PAYMENT_METHOD as COD_PAYMENT_METHOD", \
	"EXP_UPD_VALIDATOR___CONTAINER_SIZE as CONTAINER_SIZE", \
	"EXP_UPD_VALIDATOR___CONTAINER_TYPE as CONTAINER_TYPE", \
	"EXP_UPD_VALIDATOR___CREATED_DTTM as CREATED_DTTM", \
	"EXP_UPD_VALIDATOR___CREATED_SOURCE as CREATED_SOURCE", \
	"EXP_UPD_VALIDATOR___CREATED_SOURCE_TYPE as CREATED_SOURCE_TYPE", \
	"EXP_UPD_VALIDATOR___DECLARED_MONETARY_VALUE as DECLARED_MONETARY_VALUE", \
	"EXP_UPD_VALIDATOR___DIST_CHARGE as DIST_CHARGE", \
	"EXP_UPD_VALIDATOR___DIST_CHARGE_CURRENCY as DIST_CHARGE_CURRENCY", \
	"EXP_UPD_VALIDATOR___EPC_MATCH_FLAG_EXP as EPC_MATCH_FLAG", \
	"EXP_UPD_VALIDATOR___ESTIMATED_WEIGHT as ESTIMATED_WEIGHT", \
	"EXP_UPD_VALIDATOR___FINAL_DEST_FACILITY_ALIAS_ID as FINAL_DEST_FACILITY_ALIAS_ID", \
	"EXP_UPD_VALIDATOR___FREIGHT_CHARGE as FREIGHT_CHARGE", \
	"EXP_UPD_VALIDATOR___FREIGHT_CHARGE_CURRENCY as FREIGHT_CHARGE_CURRENCY", \
	"EXP_UPD_VALIDATOR___INSUR_CHARGE as INSUR_CHARGE", \
	"EXP_UPD_VALIDATOR___INSUR_CHARGE_CURRENCY as INSUR_CHARGE_CURRENCY", \
	"EXP_UPD_VALIDATOR___INVC_BATCH_NBR as INVC_BATCH_NBR", \
	"EXP_UPD_VALIDATOR___LAST_UPDATED_DTTM as LAST_UPDATED_DTTM", \
	"EXP_UPD_VALIDATOR___LOADED_DTTM as LOADED_DTTM", \
	"EXP_UPD_VALIDATOR___LOADED_POSN as LOADED_POSN", \
	"EXP_UPD_VALIDATOR___LPN_EPC as LPN_EPC", \
	"EXP_UPD_VALIDATOR___LPN_NBR_X_OF_Y as LPN_NBR_X_OF_Y", \
	"EXP_UPD_VALIDATOR___MANIFEST_NBR as MANIFEST_NBR", \
	"EXP_UPD_VALIDATOR___MASTER_BOL_NBR as MASTER_BOL_NBR", \
	"EXP_UPD_VALIDATOR___MISC_INSTR_CODE_1 as MISC_INSTR_CODE_1", \
	"EXP_UPD_VALIDATOR___MISC_INSTR_CODE_2 as MISC_INSTR_CODE_2", \
	"EXP_UPD_VALIDATOR___MISC_INSTR_CODE_3 as MISC_INSTR_CODE_3", \
	"EXP_UPD_VALIDATOR___MISC_INSTR_CODE_4 as MISC_INSTR_CODE_4", \
	"EXP_UPD_VALIDATOR___MISC_INSTR_CODE_5 as MISC_INSTR_CODE_5", \
	"EXP_UPD_VALIDATOR___MISC_NUM_1 as MISC_NUM_1", \
	"EXP_UPD_VALIDATOR___MISC_NUM_2 as MISC_NUM_2", \
	"EXP_UPD_VALIDATOR___NON_INVENTORY_LPN_FLAG_EXP as NON_INVENTORY_LPN_FLAG", \
	"EXP_UPD_VALIDATOR___NON_MACHINEABLE as NON_MACHINEABLE", \
	"EXP_UPD_VALIDATOR___PACKAGE_DESCRIPTION as PACKAGE_DESCRIPTION", \
	"EXP_UPD_VALIDATOR___PACKER_USERID as PACKER_USERID", \
	"EXP_UPD_VALIDATOR___PALLET_EPC as PALLET_EPC", \
	"EXP_UPD_VALIDATOR___PALLET_MASTER_LPN_FLAG_EXP as PALLET_MASTER_LPN_FLAG", \
	"EXP_UPD_VALIDATOR___PARCEL_SERVICE_MODE as PARCEL_SERVICE_MODE", \
	"EXP_UPD_VALIDATOR___PARCEL_SHIPMENT_NBR as PARCEL_SHIPMENT_NBR", \
	"EXP_UPD_VALIDATOR___PICKER_USERID as PICKER_USERID", \
	"EXP_UPD_VALIDATOR___PRE_BULK_ADD_OPT_CHR as PRE_BULK_ADD_OPT_CHR", \
	"EXP_UPD_VALIDATOR___PRE_BULK_ADD_OPT_CHR_CURRENCY as PRE_BULK_ADD_OPT_CHR_CURRENCY", \
	"EXP_UPD_VALIDATOR___PRE_BULK_BASE_CHARGE as PRE_BULK_BASE_CHARGE", \
	"EXP_UPD_VALIDATOR___PROC_DTTM as PROC_DTTM", \
	"EXP_UPD_VALIDATOR___PROC_STAT_CODE as PROC_STAT_CODE", \
	"EXP_UPD_VALIDATOR___QTY_UOM as QTY_UOM", \
	"EXP_UPD_VALIDATOR___RATE_ZONE as RATE_ZONE", \
	"EXP_UPD_VALIDATOR___RATED_WEIGHT as RATED_WEIGHT", \
	"EXP_UPD_VALIDATOR___RATED_WEIGHT_UOM as RATED_WEIGHT_UOM", \
	"EXP_UPD_VALIDATOR___SERVICE_LEVEL as SERVICE_LEVEL", \
	"EXP_UPD_VALIDATOR___SHIP_VIA as SHIP_VIA", \
	"EXP_UPD_VALIDATOR___SHIPPED_DTTM as SHIPPED_DTTM", \
	"EXP_UPD_VALIDATOR___STATIC_ROUTE_ID as STATIC_ROUTE_ID", \
	"EXP_UPD_VALIDATOR___TC_COMPANY_ID as TC_COMPANY_ID", \
	"EXP_UPD_VALIDATOR___TC_LPN_ID as TC_LPN_ID", \
	"EXP_UPD_VALIDATOR___TC_ORDER_ID as TC_ORDER_ID", \
	"EXP_UPD_VALIDATOR___TC_PARENT_LPN_ID as TC_PARENT_LPN_ID", \
	"EXP_UPD_VALIDATOR___TC_SHIPMENT_ID as TC_SHIPMENT_ID", \
	"EXP_UPD_VALIDATOR___TOTAL_LPN_QTY as TOTAL_LPN_QTY", \
	"EXP_UPD_VALIDATOR___TRACKING_NBR as TRACKING_NBR", \
	"EXP_UPD_VALIDATOR___ALT_TRACKING_NBR as ALT_TRACKING_NBR", \
	"EXP_UPD_VALIDATOR___VERSION_NBR as VERSION_NBR", \
	"EXP_UPD_VALIDATOR___VOLUME_UOM as VOLUME_UOM", \
	"EXP_UPD_VALIDATOR___WEIGHT as WEIGHT", \
	"EXP_UPD_VALIDATOR___WEIGHT_UOM as WEIGHT_UOM", \
	"EXP_UPD_VALIDATOR___LOAD_SEQUENCE as LOAD_SEQUENCE", \
	"EXP_UPD_VALIDATOR___TC_PURCHASE_ORDER_ID as TC_PURCHASE_ORDER_ID", \
	"EXP_UPD_VALIDATOR___RETURN_TRACKING_NBR as RETURN_TRACKING_NBR", \
	"EXP_UPD_VALIDATOR___XREF_OLPN as XREF_OLPN", \
	"EXP_UPD_VALIDATOR___RETURN_REFERENCE_NUMBER as RETURN_REFERENCE_NUMBER", \
	"EXP_UPD_VALIDATOR___EPI_PACKAGE_ID as EPI_PACKAGE_ID", \
	"EXP_UPD_VALIDATOR___EPI_SHIPMENT_ID as EPI_SHIPMENT_ID", \
	"EXP_UPD_VALIDATOR___REF_FIELD_2 as REF_FIELD_2", \
	"EXP_UPD_VALIDATOR___REF_FIELD_3 as REF_FIELD_3", \
	"EXP_UPD_VALIDATOR___REF_FIELD_4 as REF_FIELD_4", \
	"EXP_UPD_VALIDATOR___REF_FIELD_5 as REF_FIELD_5", \
	"EXP_UPD_VALIDATOR___REF_FIELD_6 as REF_FIELD_6", \
	"EXP_UPD_VALIDATOR___REF_FIELD_7 as REF_FIELD_7", \
	"EXP_UPD_VALIDATOR___REF_FIELD_8 as REF_FIELD_8", \
	"EXP_UPD_VALIDATOR___REF_FIELD_9 as REF_FIELD_9", \
	"EXP_UPD_VALIDATOR___REF_FIELD_10 as REF_FIELD_10", \
	"EXP_UPD_VALIDATOR___REF_FIELD_1 as REF_FIELD_1", \
	"EXP_UPD_VALIDATOR___UPDATE_TSTMP as UPDATE_TSTMP", \
	"EXP_UPD_VALIDATOR___LOAD_TSTMP as LOAD_TSTMP", \
	"EXP_UPD_VALIDATOR___o_UPDATE_VALIDATOR as o_UPDATE_VALIDATOR") \
	.withColumn('pyspark_data_action', when(col('o_UPDATE_VALIDATOR') ==(lit(1)),lit(0)).when(col('o_UPDATE_VALIDATOR') ==(lit(2)),lit(1)))

# COMMAND ----------
# Processing node Shortcut_to_WM_OUTPT_LPN1, type TARGET 
# COLUMN COUNT: 99


Shortcut_to_WM_OUTPT_LPN1 = UPD_INS_UPD.selectExpr(
	"CAST(LOCATION_ID AS BIGINT) as LOCATION_ID",
	"CAST(OUTPT_LPN_ID AS BIGINT) as WM_OUTPT_LPN_ID",
	"CAST(TC_COMPANY_ID AS INT) as WM_TC_COMPANY_ID",
	"CAST(TC_LPN_ID AS STRING) as WM_TC_LPN_ID",
	"CAST(TC_ORDER_ID AS STRING) as WM_TC_ORDER_ID",
	"CAST(TC_PURCHASE_ORDER_ID AS STRING) as WM_TC_PURCHASE_ORDER_ID",
	"CAST(TC_PARENT_LPN_ID AS STRING) as WM_TC_PARENT_LPN_ID",
	"CAST(TC_SHIPMENT_ID AS STRING) as WM_TC_SHIPMENT_ID",
	"CAST(EPI_PACKAGE_ID AS STRING) as WM_EPI_PACKAGE_ID",
	"CAST(EPI_SHIPMENT_ID AS STRING) as WM_EPI_SHIPMENT_ID",
	"CAST(INVC_BATCH_NBR AS INT) as WM_INVC_BATCH_NBR",
	"CAST(C_FACILITY_ALIAS_ID AS STRING) as WM_C_FACILITY_ALIAS_ID",
	"CAST(FINAL_DEST_FACILITY_ALIAS_ID AS STRING) as WM_FINAL_DEST_FACILITY_ALIAS_ID",
	"CAST(RETURN_TRACKING_NBR AS STRING) as WM_RETURN_TRACKING_NBR",
	"CAST(RETURN_REFERENCE_NUMBER AS STRING) as WM_RETURN_REFERENCE_NBR",
	"CAST(XREF_OLPN AS STRING) as WM_XREF_OLPN",
	"CAST(BILL_OF_LADING_NUMBER AS STRING) as WM_BILL_OF_LADING_NBR",
	"CAST(MASTER_BOL_NBR AS STRING) as WM_MASTER_BOL_NBR",
	"CAST(MANIFEST_NBR AS STRING) as WM_MANIFEST_NBR",
	"CAST(STATIC_ROUTE_ID AS INT) as WM_STATIC_ROUTE_ID",
	"CAST(PROC_DTTM AS TIMESTAMP) as PROC_TSTMP",
	"CAST(PROC_STAT_CODE AS SMALLINT) as WM_PROC_STAT_CD",
	"CAST(LOAD_SEQUENCE AS INT) as LOAD_SEQ",
	"CAST(LOADED_DTTM AS TIMESTAMP) as LOADED_TSTMP",
	"CAST(SHIPPED_DTTM AS TIMESTAMP) as SHIPPED_TSTMP",
	"CAST(SHIP_VIA AS STRING) as SHIP_VIA",
	"CAST(TRACKING_NBR AS STRING) as TRACKING_NBR",
	"CAST(ALT_TRACKING_NBR AS STRING) as ALT_TRACKING_NBR",
	"CAST(CONTAINER_SIZE AS STRING) as WM_CONTAINER_SIZE",
	"CAST(CONTAINER_TYPE AS STRING) as WM_CONTAINER_TYPE",
	"CAST(PACKAGE_DESCRIPTION AS STRING) as WM_PACKAGE_DESC",
	"CAST(PACKER_USERID AS STRING) as WM_PACKER_USER_ID",
	"CAST(LOADED_POSN AS STRING) as WM_LOADED_POSN",
	"CAST(LPN_EPC AS STRING) as WM_LPN_EPC",
	"CAST(LPN_NBR_X_OF_Y AS INT) as WM_LPN_NBR_X_OF_Y",
	"CAST(PALLET_EPC AS STRING) as PALLET_EPC",
	"CAST(PALLET_MASTER_LPN_FLAG AS TINYINT) as PALLET_MASTER_LPN_FLAG",
	"CAST(PARCEL_SERVICE_MODE AS STRING) as PARCEL_SERVICE_MODE",
	"CAST(PARCEL_SHIPMENT_NBR AS STRING) as WM_PARCEL_SHIPMENT_NBR",
	"CAST(PICKER_USERID AS STRING) as WM_PICKER_USER_ID",
	"CAST(SERVICE_LEVEL AS STRING) as SERVICE_LEVEL",
	"CAST(PRE_BULK_ADD_OPT_CHR AS DECIMAL(9,2)) as PRE_BULK_ADD_OPT_CHR",
	"CAST(PRE_BULK_ADD_OPT_CHR_CURRENCY AS STRING) as PRE_BULK_ADD_OPT_CHR_CURRENCY",
	"CAST(PRE_BULK_BASE_CHARGE AS DECIMAL(9,2)) as PRE_BULK_BASE_CHARGE",
	"CAST(ACTUAL_CHARGE AS DECIMAL(9,2)) as ACTUAL_CHARGE",
	"CAST(ACTUAL_CHARGE_CURRENCY AS STRING) as ACTUAL_CHARGE_CURRENCY",
	"CAST(ACTUAL_MONETARY_VALUE AS DECIMAL(13,4)) as ACTUAL_MONETARY_VALUE",
	"CAST(ACTUAL_VOLUME AS DECIMAL(13,4)) as ACTUAL_VOLUME",
	"CAST(ADDNL_OPTION_CHARGE AS DECIMAL(9,2)) as ADDNL_OPTION_CHARGE",
	"CAST(ADDNL_OPTION_CHARGE_CURRENCY AS STRING) as ADDNL_OPTION_CHARGE_CURRENCY",
	"CAST(ADF_TRANSMIT_FLAG AS TINYINT) as ADF_TRANSMIT_FLAG",
	"CAST(BASE_CHARGE AS DECIMAL(13,4)) as BASE_CHARGE",
	"CAST(BASE_CHARGE_CURRENCY AS STRING) as BASE_CHARGE_CURRENCY",
	"CAST(COD_AMOUNT AS DECIMAL(13,4)) as COD_AMOUNT",
	"CAST(COD_PAYMENT_METHOD AS INT) as WM_COD_PAYMENT_METHOD",
	"CAST(DECLARED_MONETARY_VALUE AS DECIMAL(13,4)) as DECLARED_MONETARY_VALUE",
	"CAST(DIST_CHARGE AS DECIMAL(11,2)) as DIST_CHARGE",
	"CAST(DIST_CHARGE_CURRENCY AS STRING) as DIST_CHARGE_CURRENCY",
	"CAST(FREIGHT_CHARGE AS DECIMAL(11,2)) as FREIGHT_CHARGE",
	"CAST(FREIGHT_CHARGE_CURRENCY AS STRING) as FREIGHT_CHARGE_CURRENCY",
	"CAST(INSUR_CHARGE AS DECIMAL(9,2)) as INSUR_CHARGE",
	"CAST(INSUR_CHARGE_CURRENCY AS STRING) as INSUR_CHARGE_CURRENCY",
	"CAST(TOTAL_LPN_QTY AS DECIMAL(13,4)) as TOTAL_LPN_QTY",
	"CAST(QTY_UOM AS STRING) as QTY_UOM",
	"CAST(RATE_ZONE AS STRING) as RATE_ZONE",
	"CAST(RATED_WEIGHT AS DECIMAL(13,4)) as RATED_WEIGHT",
	"CAST(RATED_WEIGHT_UOM AS STRING) as RATED_WEIGHT_UOM",
	"CAST(ESTIMATED_WEIGHT AS DECIMAL(13,4)) as ESTIMATED_WEIGHT",
	"CAST(WEIGHT AS DECIMAL(16,4)) as WEIGHT",
	"CAST(WEIGHT_UOM AS STRING) as WEIGHT_UOM",
	"CAST(VOLUME_UOM AS STRING) as VOLUME_UOM",
	"CAST(EPC_MATCH_FLAG AS TINYINT) as EPC_MATCH_FLAG",
	"CAST(NON_INVENTORY_LPN_FLAG AS TINYINT) as NON_INVENTORY_LPN_FLAG",
	"CAST(NON_MACHINEABLE AS INT) as NON_MACHINEABLE",
	"CAST(REF_FIELD_1 AS STRING) as REF_FIELD_1",
	"CAST(REF_FIELD_2 AS STRING) as REF_FIELD_2",
	"CAST(REF_FIELD_3 AS STRING) as REF_FIELD_3",
	"CAST(REF_FIELD_4 AS STRING) as REF_FIELD_4",
	"CAST(REF_FIELD_5 AS STRING) as REF_FIELD_5",
	"CAST(REF_FIELD_6 AS STRING) as REF_FIELD_6",
	"CAST(REF_FIELD_7 AS STRING) as REF_FIELD_7",
	"CAST(REF_FIELD_8 AS STRING) as REF_FIELD_8",
	"CAST(REF_FIELD_9 AS STRING) as REF_FIELD_9",
	"CAST(REF_FIELD_10 AS STRING) as REF_FIELD_10",
	"CAST(MISC_INSTR_CODE_1 AS STRING) as MISC_INSTR_CD_1",
	"CAST(MISC_INSTR_CODE_2 AS STRING) as MISC_INSTR_CD_2",
	"CAST(MISC_INSTR_CODE_3 AS STRING) as MISC_INSTR_CD_3",
	"CAST(MISC_INSTR_CODE_4 AS STRING) as MISC_INSTR_CD_4",
	"CAST(MISC_INSTR_CODE_5 AS STRING) as MISC_INSTR_CD_5",
	"CAST(MISC_NUM_1 AS DECIMAL(9,2)) as MISC_NUM_1",
	"CAST(MISC_NUM_2 AS DECIMAL(9,2)) as MISC_NUM_2",
	"CAST(AUDITOR_USERID AS STRING) as WM_AUDITOR_USER_ID",
	"CAST(VERSION_NBR AS BIGINT) as WM_VERSION_NBR",
	"CAST(CREATED_SOURCE_TYPE AS SMALLINT) as WM_CREATED_SOURCE_TYPE",
	"CAST(CREATED_SOURCE AS STRING) as WM_CREATED_SOURCE",
	"CAST(CREATED_DTTM AS TIMESTAMP) as WM_CREATED_TSTMP",
	"CAST(LAST_UPDATED_DTTM AS TIMESTAMP) as WM_LAST_UPDATED_TSTMP",
	"CAST(UPDATE_TSTMP AS TIMESTAMP) as UPDATE_TSTMP",
	"CAST(LOAD_TSTMP AS TIMESTAMP) as LOAD_TSTMP" , 
    "pyspark_data_action"
)

try:
  primary_key = """source.LOCATION_ID = target.LOCATION_ID AND source.WM_OUTPT_LPN_ID = target.WM_OUTPT_LPN_ID"""
  # refined_perf_table = "WM_OUTPT_LPN"
  executeMerge(Shortcut_to_WM_OUTPT_LPN1, refined_perf_table, primary_key)
  logger.info(f"Merge with {refined_perf_table} completed]")
  logPrevRunDt("WM_OUTPT_LPN", "WM_OUTPT_LPN", "Completed", "N/A", f"{raw}.log_run_details")
except Exception as e:
  logPrevRunDt("WM_OUTPT_LPN", "WM_OUTPT_LPN","Failed",str(e), f"{raw}.log_run_details", )
  raise e
	