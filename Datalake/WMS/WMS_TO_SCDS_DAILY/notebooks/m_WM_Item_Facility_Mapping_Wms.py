#Code converted on 2023-06-21 18:43:33
import os
import argparse
from pyspark.sql import *
from pyspark.sql.functions import *
from pyspark.sql.window import Window
from pyspark.sql.types import *
from datetime import datetime
from pyspark.dbutils import DBUtils
from Datalake.utils.genericUtilities import *
from Datalake.utils.configs import *
from Datalake.utils.mergeUtils import *
from Datalake.utils.logger import *

# COMMAND ----------

parser = argparse.ArgumentParser()
spark = SparkSession.getActiveSession()
dbutils = DBUtils(spark)
parser.add_argument('env', type=str, help='Env Variable')
args = parser.parse_args()
env = args.env

if env is None or env == '':
    raise ValueError('env is not set')

refine = getEnvPrefix(env) + 'refine'
raw = getEnvPrefix(env) + 'raw'
legacy = getEnvPrefix(env) + 'legacy'

# Set global variables
starttime = datetime.now() #start timestamp of the script

refined_perf_table = f"{refine}.WM_ITEM_FACILITY_MAPPING_WMS"
raw_perf_table = f"{raw}.WM_ITEM_FACILITY_MAPPING_WMS_PRE"
site_profile_table = f"{legacy}.SITE_PROFILE"


# COMMAND ----------
# Processing node SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS, type SOURCE 
# COLUMN COUNT: 5

SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS = spark.sql(f"""SELECT
WM_ITEM_FACILITY_MAPPING_WMS.LOCATION_ID,
WM_ITEM_FACILITY_MAPPING_WMS.WM_ITEM_FACILITY_MAPPING_ID,
WM_ITEM_FACILITY_MAPPING_WMS.WM_AUDIT_CREATED_TSTMP,
WM_ITEM_FACILITY_MAPPING_WMS.WM_AUDIT_LAST_UPDATED_TSTMP,
WM_ITEM_FACILITY_MAPPING_WMS.LOAD_TSTMP
FROM {refined_perf_table}
WHERE WM_ITEM_FACILITY_MAPPING_ID IN (SELECT ITEM_FACILITY_MAPPING_ID FROM {raw_perf_table})""").withColumn("sys_row_id", monotonically_increasing_id())

# COMMAND ----------
# Processing node SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE, type SOURCE 
# COLUMN COUNT: 82

SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE = spark.sql(f"""SELECT
WM_ITEM_FACILITY_MAPPING_WMS_PRE.DC_NBR,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.ITEM_FACILITY_MAPPING_ID,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.LPN_PER_TIER,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.TIER_PER_PLT,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.CASE_SIZE_TYPE,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.PICK_RATE,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.WAGE_VALUE,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.PACK_RATE,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.SPL_PROC_RATE,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.AUTO_SUB_CASE,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.ASSIGN_DYNAMIC_ACTV_PICK_SITE,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.ASSIGN_DYNAMIC_CASE_PICK_SITE,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.PICK_LOCN_ASSIGN_TYPE,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.PUTWY_TYPE,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.DFLT_WAVE_PROC_TYPE,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.XCESS_WAVE_NEED_PROC_TYPE,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.ALLOC_TYPE,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.VIOLATE_FIFO_ALLOC_QTY_MATCH,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.QV_ITEM_GRP,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.QUAL_INSPCT_ITEM_GRP,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.MAX_UNITS_IN_DYNAMIC_ACTV,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.MAX_CASES_IN_DYNAMIC_ACTV,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.MAX_UNITS_IN_DYNAMIC_CASE_PICK,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.MAX_CASES_IN_DYNAMIC_CASE_PICK,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.CASE_CNT_DATE_TIME,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.ACTV_CNT_DATE_TIME,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.CASE_PICK_CNT_DATE_TIME,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.VENDOR_CARTON_PER_TIER,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.VENDOR_TIER_PER_PLT,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.ORD_CARTON_PER_TIER,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.ORD_TIER_PER_PLT,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.DFLT_CATCH_WT_METHOD,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.DFLT_DATE_MASK,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.CARTON_BREAK_ATTR,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.MISC_SHORT_ALPHA_1,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.MISC_SHORT_ALPHA_2,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.MISC_ALPHA_1,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.MISC_ALPHA_2,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.MISC_ALPHA_3,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.MISC_NUMERIC_1,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.MISC_NUMERIC_2,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.MISC_NUMERIC_3,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.MISC_DATE_1,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.MISC_DATE_2,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.CHUTE_ASSIGN_TYPE,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.ACTV_REPL_ORGN,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.UIN_NBR,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.FIFO_RANGE,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.PRTL_CASE_ALLOC_THRESH_UNITS,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.PRTL_CASE_PUTWY_THRESH_UNITS,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.VENDOR_TAGGED_EPC_FLAG,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.ITEM_AVG_WT,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.DFLT_MIN_FROM_PREV_LOCN_FLAG,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.SLOT_MISC_1,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.SLOT_MISC_2,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.SLOT_MISC_3,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.SLOT_MISC_4,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.SLOT_MISC_5,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.SLOT_MISC_6,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.SLOT_ROTATE_EACHES_FLAG,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.SLOT_ROTATE_INNERS_FLAG,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.SLOT_ROTATE_BINS_FLAG,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.SLOT_ROTATE_CASES_FLAG,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.SLOT_3D_SLOTTING_FLAG,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.SLOT_NEST_EACHES_FLAG,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.SLOT_INCR_HT,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.SLOT_INCR_LEN,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.SLOT_INCR_WIDTH,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.NBR_OF_DYN_ACTV_PICK_PER_ITEM,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.NBR_OF_DYN_CASE_PICK_PER_ITEM,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.AUDIT_CREATED_SOURCE,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.AUDIT_CREATED_SOURCE_TYPE,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.AUDIT_CREATED_DTTM,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.AUDIT_LAST_UPDATED_SOURCE,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.AUDIT_LAST_UPDATED_SOURCE_TYPE,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.AUDIT_LAST_UPDATED_DTTM,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.MARK_FOR_DELETION,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.ITEM_ID,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.FACILITY_ID,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.BUSINESS_PARTNER_ID,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.AVERAGE_MOVEMENT,
WM_ITEM_FACILITY_MAPPING_WMS_PRE.SHELF_DAYS
FROM {raw_perf_table}""").withColumn("sys_row_id", monotonically_increasing_id())

# COMMAND ----------
# Processing node EXP_INT_CONVERSION, type EXPRESSION 
# COLUMN COUNT: 82

# for each involved DataFrame, append the dataframe name to each column
SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE_temp = SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE.toDF(*["SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___" + col for col in SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE.columns])

EXP_INT_CONVERSION = SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE_temp.selectExpr( \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___sys_row_id as sys_row_id", \
	"cast(SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___DC_NBR as int) as o_DC_NBR", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___ITEM_FACILITY_MAPPING_ID as ITEM_FACILITY_MAPPING_ID", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___LPN_PER_TIER as LPN_PER_TIER", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___TIER_PER_PLT as TIER_PER_PLT", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___CASE_SIZE_TYPE as CASE_SIZE_TYPE", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___PICK_RATE as PICK_RATE", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___WAGE_VALUE as WAGE_VALUE", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___PACK_RATE as PACK_RATE", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___SPL_PROC_RATE as SPL_PROC_RATE", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___AUTO_SUB_CASE as AUTO_SUB_CASE", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___ASSIGN_DYNAMIC_ACTV_PICK_SITE as ASSIGN_DYNAMIC_ACTV_PICK_SITE", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___ASSIGN_DYNAMIC_CASE_PICK_SITE as ASSIGN_DYNAMIC_CASE_PICK_SITE", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___PICK_LOCN_ASSIGN_TYPE as PICK_LOCN_ASSIGN_TYPE", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___PUTWY_TYPE as PUTWY_TYPE", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___DFLT_WAVE_PROC_TYPE as DFLT_WAVE_PROC_TYPE", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___XCESS_WAVE_NEED_PROC_TYPE as XCESS_WAVE_NEED_PROC_TYPE", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___ALLOC_TYPE as ALLOC_TYPE", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___VIOLATE_FIFO_ALLOC_QTY_MATCH as VIOLATE_FIFO_ALLOC_QTY_MATCH", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___QV_ITEM_GRP as QV_ITEM_GRP", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___QUAL_INSPCT_ITEM_GRP as QUAL_INSPCT_ITEM_GRP", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___MAX_UNITS_IN_DYNAMIC_ACTV as MAX_UNITS_IN_DYNAMIC_ACTV", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___MAX_CASES_IN_DYNAMIC_ACTV as MAX_CASES_IN_DYNAMIC_ACTV", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___MAX_UNITS_IN_DYNAMIC_CASE_PICK as MAX_UNITS_IN_DYNAMIC_CASE_PICK", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___MAX_CASES_IN_DYNAMIC_CASE_PICK as MAX_CASES_IN_DYNAMIC_CASE_PICK", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___CASE_CNT_DATE_TIME as CASE_CNT_DATE_TIME", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___ACTV_CNT_DATE_TIME as ACTV_CNT_DATE_TIME", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___CASE_PICK_CNT_DATE_TIME as CASE_PICK_CNT_DATE_TIME", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___VENDOR_CARTON_PER_TIER as VENDOR_CARTON_PER_TIER", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___VENDOR_TIER_PER_PLT as VENDOR_TIER_PER_PLT", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___ORD_CARTON_PER_TIER as ORD_CARTON_PER_TIER", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___ORD_TIER_PER_PLT as ORD_TIER_PER_PLT", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___DFLT_CATCH_WT_METHOD as DFLT_CATCH_WT_METHOD", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___DFLT_DATE_MASK as DFLT_DATE_MASK", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___CARTON_BREAK_ATTR as CARTON_BREAK_ATTR", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___MISC_SHORT_ALPHA_1 as MISC_SHORT_ALPHA_1", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___MISC_SHORT_ALPHA_2 as MISC_SHORT_ALPHA_2", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___MISC_ALPHA_1 as MISC_ALPHA_1", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___MISC_ALPHA_2 as MISC_ALPHA_2", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___MISC_ALPHA_3 as MISC_ALPHA_3", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___MISC_NUMERIC_1 as MISC_NUMERIC_1", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___MISC_NUMERIC_2 as MISC_NUMERIC_2", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___MISC_NUMERIC_3 as MISC_NUMERIC_3", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___MISC_DATE_1 as MISC_DATE_1", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___MISC_DATE_2 as MISC_DATE_2", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___CHUTE_ASSIGN_TYPE as CHUTE_ASSIGN_TYPE", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___ACTV_REPL_ORGN as ACTV_REPL_ORGN", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___UIN_NBR as UIN_NBR", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___FIFO_RANGE as FIFO_RANGE", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___PRTL_CASE_ALLOC_THRESH_UNITS as PRTL_CASE_ALLOC_THRESH_UNITS", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___PRTL_CASE_PUTWY_THRESH_UNITS as PRTL_CASE_PUTWY_THRESH_UNITS", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___VENDOR_TAGGED_EPC_FLAG as VENDOR_TAGGED_EPC_FLAG", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___ITEM_AVG_WT as ITEM_AVG_WT", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___DFLT_MIN_FROM_PREV_LOCN_FLAG as DFLT_MIN_FROM_PREV_LOCN_FLAG", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___SLOT_MISC_1 as SLOT_MISC_1", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___SLOT_MISC_2 as SLOT_MISC_2", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___SLOT_MISC_3 as SLOT_MISC_3", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___SLOT_MISC_4 as SLOT_MISC_4", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___SLOT_MISC_5 as SLOT_MISC_5", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___SLOT_MISC_6 as SLOT_MISC_6", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___SLOT_ROTATE_EACHES_FLAG as SLOT_ROTATE_EACHES_FLAG", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___SLOT_ROTATE_INNERS_FLAG as SLOT_ROTATE_INNERS_FLAG", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___SLOT_ROTATE_BINS_FLAG as SLOT_ROTATE_BINS_FLAG", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___SLOT_ROTATE_CASES_FLAG as SLOT_ROTATE_CASES_FLAG", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___SLOT_3D_SLOTTING_FLAG as SLOT_3D_SLOTTING_FLAG", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___SLOT_NEST_EACHES_FLAG as SLOT_NEST_EACHES_FLAG", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___SLOT_INCR_HT as SLOT_INCR_HT", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___SLOT_INCR_LEN as SLOT_INCR_LEN", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___SLOT_INCR_WIDTH as SLOT_INCR_WIDTH", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___NBR_OF_DYN_ACTV_PICK_PER_ITEM as NBR_OF_DYN_ACTV_PICK_PER_ITEM", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___NBR_OF_DYN_CASE_PICK_PER_ITEM as NBR_OF_DYN_CASE_PICK_PER_ITEM", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___AUDIT_CREATED_SOURCE as AUDIT_CREATED_SOURCE", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___AUDIT_CREATED_SOURCE_TYPE as AUDIT_CREATED_SOURCE_TYPE", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___AUDIT_CREATED_DTTM as AUDIT_CREATED_DTTM", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___AUDIT_LAST_UPDATED_SOURCE as AUDIT_LAST_UPDATED_SOURCE", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___AUDIT_LAST_UPDATED_SOURCE_TYPE as AUDIT_LAST_UPDATED_SOURCE_TYPE", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___AUDIT_LAST_UPDATED_DTTM as AUDIT_LAST_UPDATED_DTTM", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___MARK_FOR_DELETION as MARK_FOR_DELETION", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___ITEM_ID as ITEM_ID", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___FACILITY_ID as FACILITY_ID", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___BUSINESS_PARTNER_ID as BUSINESS_PARTNER_ID", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___AVERAGE_MOVEMENT as AVERAGE_MOVEMENT", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_PRE___SHELF_DAYS as SHELF_DAYS" \
)

# COMMAND ----------
# Processing node SQ_Shortcut_to_SITE_PROFILE, type SOURCE 
# COLUMN COUNT: 2

SQ_Shortcut_to_SITE_PROFILE = spark.sql(f"""SELECT
SITE_PROFILE.LOCATION_ID,
SITE_PROFILE.STORE_NBR
FROM {site_profile_table}""").withColumn("sys_row_id", monotonically_increasing_id())

# COMMAND ----------
# Processing node JNR_SITE_PROFILE, type JOINER 
# COLUMN COUNT: 84

JNR_SITE_PROFILE = SQ_Shortcut_to_SITE_PROFILE.join(EXP_INT_CONVERSION,[SQ_Shortcut_to_SITE_PROFILE.STORE_NBR == EXP_INT_CONVERSION.o_DC_NBR],'inner')

# COMMAND ----------
# Processing node JNR_WM_ITEM_FACILITY_MAPPING_WMS, type JOINER . Note: using additional SELECT to rename incoming columns
# COLUMN COUNT: 87

# for each involved DataFrame, append the dataframe name to each column
JNR_SITE_PROFILE_temp = JNR_SITE_PROFILE.toDF(*["JNR_SITE_PROFILE___" + col for col in JNR_SITE_PROFILE.columns])
SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_temp = SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS.toDF(*["SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS___" + col for col in SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS.columns])

JNR_WM_ITEM_FACILITY_MAPPING_WMS = SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_temp.join(JNR_SITE_PROFILE_temp,[SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_temp.SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS___LOCATION_ID == JNR_SITE_PROFILE_temp.JNR_SITE_PROFILE___LOCATION_ID, SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS_temp.SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS___WM_ITEM_FACILITY_MAPPING_ID == JNR_SITE_PROFILE_temp.JNR_SITE_PROFILE___ITEM_FACILITY_MAPPING_ID],'right_outer').selectExpr( \
	"JNR_SITE_PROFILE___LOCATION_ID as LOCATION_ID", \
	"JNR_SITE_PROFILE___ITEM_FACILITY_MAPPING_ID as ITEM_FACILITY_MAPPING_ID", \
	"JNR_SITE_PROFILE___LPN_PER_TIER as LPN_PER_TIER", \
	"JNR_SITE_PROFILE___TIER_PER_PLT as TIER_PER_PLT", \
	"JNR_SITE_PROFILE___CASE_SIZE_TYPE as CASE_SIZE_TYPE", \
	"JNR_SITE_PROFILE___PICK_RATE as PICK_RATE", \
	"JNR_SITE_PROFILE___WAGE_VALUE as WAGE_VALUE", \
	"JNR_SITE_PROFILE___PACK_RATE as PACK_RATE", \
	"JNR_SITE_PROFILE___SPL_PROC_RATE as SPL_PROC_RATE", \
	"JNR_SITE_PROFILE___AUTO_SUB_CASE as AUTO_SUB_CASE", \
	"JNR_SITE_PROFILE___ASSIGN_DYNAMIC_ACTV_PICK_SITE as ASSIGN_DYNAMIC_ACTV_PICK_SITE", \
	"JNR_SITE_PROFILE___ASSIGN_DYNAMIC_CASE_PICK_SITE as ASSIGN_DYNAMIC_CASE_PICK_SITE", \
	"JNR_SITE_PROFILE___PICK_LOCN_ASSIGN_TYPE as PICK_LOCN_ASSIGN_TYPE", \
	"JNR_SITE_PROFILE___PUTWY_TYPE as PUTWY_TYPE", \
	"JNR_SITE_PROFILE___DFLT_WAVE_PROC_TYPE as DFLT_WAVE_PROC_TYPE", \
	"JNR_SITE_PROFILE___XCESS_WAVE_NEED_PROC_TYPE as XCESS_WAVE_NEED_PROC_TYPE", \
	"JNR_SITE_PROFILE___ALLOC_TYPE as ALLOC_TYPE", \
	"JNR_SITE_PROFILE___VIOLATE_FIFO_ALLOC_QTY_MATCH as VIOLATE_FIFO_ALLOC_QTY_MATCH", \
	"JNR_SITE_PROFILE___QV_ITEM_GRP as QV_ITEM_GRP", \
	"JNR_SITE_PROFILE___QUAL_INSPCT_ITEM_GRP as QUAL_INSPCT_ITEM_GRP", \
	"JNR_SITE_PROFILE___MAX_UNITS_IN_DYNAMIC_ACTV as MAX_UNITS_IN_DYNAMIC_ACTV", \
	"JNR_SITE_PROFILE___MAX_CASES_IN_DYNAMIC_ACTV as MAX_CASES_IN_DYNAMIC_ACTV", \
	"JNR_SITE_PROFILE___MAX_UNITS_IN_DYNAMIC_CASE_PICK as MAX_UNITS_IN_DYNAMIC_CASE_PICK", \
	"JNR_SITE_PROFILE___MAX_CASES_IN_DYNAMIC_CASE_PICK as MAX_CASES_IN_DYNAMIC_CASE_PICK", \
	"JNR_SITE_PROFILE___CASE_CNT_DATE_TIME as CASE_CNT_DATE_TIME", \
	"JNR_SITE_PROFILE___ACTV_CNT_DATE_TIME as ACTV_CNT_DATE_TIME", \
	"JNR_SITE_PROFILE___CASE_PICK_CNT_DATE_TIME as CASE_PICK_CNT_DATE_TIME", \
	"JNR_SITE_PROFILE___VENDOR_CARTON_PER_TIER as VENDOR_CARTON_PER_TIER", \
	"JNR_SITE_PROFILE___VENDOR_TIER_PER_PLT as VENDOR_TIER_PER_PLT", \
	"JNR_SITE_PROFILE___ORD_CARTON_PER_TIER as ORD_CARTON_PER_TIER", \
	"JNR_SITE_PROFILE___ORD_TIER_PER_PLT as ORD_TIER_PER_PLT", \
	"JNR_SITE_PROFILE___DFLT_CATCH_WT_METHOD as DFLT_CATCH_WT_METHOD", \
	"JNR_SITE_PROFILE___DFLT_DATE_MASK as DFLT_DATE_MASK", \
	"JNR_SITE_PROFILE___CARTON_BREAK_ATTR as CARTON_BREAK_ATTR", \
	"JNR_SITE_PROFILE___MISC_SHORT_ALPHA_1 as MISC_SHORT_ALPHA_1", \
	"JNR_SITE_PROFILE___MISC_SHORT_ALPHA_2 as MISC_SHORT_ALPHA_2", \
	"JNR_SITE_PROFILE___MISC_ALPHA_1 as MISC_ALPHA_1", \
	"JNR_SITE_PROFILE___MISC_ALPHA_2 as MISC_ALPHA_2", \
	"JNR_SITE_PROFILE___MISC_ALPHA_3 as MISC_ALPHA_3", \
	"JNR_SITE_PROFILE___MISC_NUMERIC_1 as MISC_NUMERIC_1", \
	"JNR_SITE_PROFILE___MISC_NUMERIC_2 as MISC_NUMERIC_2", \
	"JNR_SITE_PROFILE___MISC_NUMERIC_3 as MISC_NUMERIC_3", \
	"JNR_SITE_PROFILE___MISC_DATE_1 as MISC_DATE_1", \
	"JNR_SITE_PROFILE___MISC_DATE_2 as MISC_DATE_2", \
	"JNR_SITE_PROFILE___CHUTE_ASSIGN_TYPE as CHUTE_ASSIGN_TYPE", \
	"JNR_SITE_PROFILE___ACTV_REPL_ORGN as ACTV_REPL_ORGN", \
	"JNR_SITE_PROFILE___UIN_NBR as UIN_NBR", \
	"JNR_SITE_PROFILE___FIFO_RANGE as FIFO_RANGE", \
	"JNR_SITE_PROFILE___PRTL_CASE_ALLOC_THRESH_UNITS as PRTL_CASE_ALLOC_THRESH_UNITS", \
	"JNR_SITE_PROFILE___PRTL_CASE_PUTWY_THRESH_UNITS as PRTL_CASE_PUTWY_THRESH_UNITS", \
	"JNR_SITE_PROFILE___VENDOR_TAGGED_EPC_FLAG as VENDOR_TAGGED_EPC_FLAG", \
	"JNR_SITE_PROFILE___ITEM_AVG_WT as ITEM_AVG_WT", \
	"JNR_SITE_PROFILE___DFLT_MIN_FROM_PREV_LOCN_FLAG as DFLT_MIN_FROM_PREV_LOCN_FLAG", \
	"JNR_SITE_PROFILE___SLOT_MISC_1 as SLOT_MISC_1", \
	"JNR_SITE_PROFILE___SLOT_MISC_2 as SLOT_MISC_2", \
	"JNR_SITE_PROFILE___SLOT_MISC_3 as SLOT_MISC_3", \
	"JNR_SITE_PROFILE___SLOT_MISC_4 as SLOT_MISC_4", \
	"JNR_SITE_PROFILE___SLOT_MISC_5 as SLOT_MISC_5", \
	"JNR_SITE_PROFILE___SLOT_MISC_6 as SLOT_MISC_6", \
	"JNR_SITE_PROFILE___SLOT_ROTATE_EACHES_FLAG as SLOT_ROTATE_EACHES_FLAG", \
	"JNR_SITE_PROFILE___SLOT_ROTATE_INNERS_FLAG as SLOT_ROTATE_INNERS_FLAG", \
	"JNR_SITE_PROFILE___SLOT_ROTATE_BINS_FLAG as SLOT_ROTATE_BINS_FLAG", \
	"JNR_SITE_PROFILE___SLOT_ROTATE_CASES_FLAG as SLOT_ROTATE_CASES_FLAG", \
	"JNR_SITE_PROFILE___SLOT_3D_SLOTTING_FLAG as SLOT_3D_SLOTTING_FLAG", \
	"JNR_SITE_PROFILE___SLOT_NEST_EACHES_FLAG as SLOT_NEST_EACHES_FLAG", \
	"JNR_SITE_PROFILE___SLOT_INCR_HT as SLOT_INCR_HT", \
	"JNR_SITE_PROFILE___SLOT_INCR_LEN as SLOT_INCR_LEN", \
	"JNR_SITE_PROFILE___SLOT_INCR_WIDTH as SLOT_INCR_WIDTH", \
	"JNR_SITE_PROFILE___NBR_OF_DYN_ACTV_PICK_PER_ITEM as NBR_OF_DYN_ACTV_PICK_PER_ITEM", \
	"JNR_SITE_PROFILE___NBR_OF_DYN_CASE_PICK_PER_ITEM as NBR_OF_DYN_CASE_PICK_PER_ITEM", \
	"JNR_SITE_PROFILE___AUDIT_CREATED_SOURCE as AUDIT_CREATED_SOURCE", \
	"JNR_SITE_PROFILE___AUDIT_CREATED_SOURCE_TYPE as AUDIT_CREATED_SOURCE_TYPE", \
	"JNR_SITE_PROFILE___AUDIT_CREATED_DTTM as AUDIT_CREATED_DTTM", \
	"JNR_SITE_PROFILE___AUDIT_LAST_UPDATED_SOURCE as AUDIT_LAST_UPDATED_SOURCE", \
	"JNR_SITE_PROFILE___AUDIT_LAST_UPDATED_SOURCE_TYPE as AUDIT_LAST_UPDATED_SOURCE_TYPE", \
	"JNR_SITE_PROFILE___AUDIT_LAST_UPDATED_DTTM as AUDIT_LAST_UPDATED_DTTM", \
	"JNR_SITE_PROFILE___MARK_FOR_DELETION as MARK_FOR_DELETION", \
	"JNR_SITE_PROFILE___ITEM_ID as ITEM_ID", \
	"JNR_SITE_PROFILE___FACILITY_ID as FACILITY_ID", \
	"JNR_SITE_PROFILE___BUSINESS_PARTNER_ID as BUSINESS_PARTNER_ID", \
	"JNR_SITE_PROFILE___AVERAGE_MOVEMENT as AVERAGE_MOVEMENT", \
	"JNR_SITE_PROFILE___SHELF_DAYS as SHELF_DAYS", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS___LOCATION_ID as i_LOCATION_ID", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS___WM_ITEM_FACILITY_MAPPING_ID as i_WM_ITEM_FACILITY_MAPPING_ID", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS___WM_AUDIT_CREATED_TSTMP as i_WM_AUDIT_CREATED_TSTMP", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS___WM_AUDIT_LAST_UPDATED_TSTMP as i_WM_AUDIT_LAST_UPDATED_TSTMP", \
	"SQ_Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS___LOAD_TSTMP as i_LOAD_TSTMP")

# COMMAND ----------
# Processing node FIL_UNCHANGED_RECORDS, type FILTER 
# COLUMN COUNT: 86

# for each involved DataFrame, append the dataframe name to each column
JNR_WM_ITEM_FACILITY_MAPPING_WMS_temp = JNR_WM_ITEM_FACILITY_MAPPING_WMS.toDF(*["JNR_WM_ITEM_FACILITY_MAPPING_WMS___" + col for col in JNR_WM_ITEM_FACILITY_MAPPING_WMS.columns])

FIL_UNCHANGED_RECORDS = JNR_WM_ITEM_FACILITY_MAPPING_WMS_temp.selectExpr( \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___LOCATION_ID as LOCATION_ID", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___ITEM_FACILITY_MAPPING_ID as ITEM_FACILITY_MAPPING_ID", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___LPN_PER_TIER as LPN_PER_TIER", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___TIER_PER_PLT as TIER_PER_PLT", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___CASE_SIZE_TYPE as CASE_SIZE_TYPE", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___PICK_RATE as PICK_RATE", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___WAGE_VALUE as WAGE_VALUE", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___PACK_RATE as PACK_RATE", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___SPL_PROC_RATE as SPL_PROC_RATE", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___AUTO_SUB_CASE as AUTO_SUB_CASE", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___ASSIGN_DYNAMIC_ACTV_PICK_SITE as ASSIGN_DYNAMIC_ACTV_PICK_SITE", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___ASSIGN_DYNAMIC_CASE_PICK_SITE as ASSIGN_DYNAMIC_CASE_PICK_SITE", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___PICK_LOCN_ASSIGN_TYPE as PICK_LOCN_ASSIGN_TYPE", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___PUTWY_TYPE as PUTWY_TYPE", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___DFLT_WAVE_PROC_TYPE as DFLT_WAVE_PROC_TYPE", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___XCESS_WAVE_NEED_PROC_TYPE as XCESS_WAVE_NEED_PROC_TYPE", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___ALLOC_TYPE as ALLOC_TYPE", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___VIOLATE_FIFO_ALLOC_QTY_MATCH as VIOLATE_FIFO_ALLOC_QTY_MATCH", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___QV_ITEM_GRP as QV_ITEM_GRP", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___QUAL_INSPCT_ITEM_GRP as QUAL_INSPCT_ITEM_GRP", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___MAX_UNITS_IN_DYNAMIC_ACTV as MAX_UNITS_IN_DYNAMIC_ACTV", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___MAX_CASES_IN_DYNAMIC_ACTV as MAX_CASES_IN_DYNAMIC_ACTV", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___MAX_UNITS_IN_DYNAMIC_CASE_PICK as MAX_UNITS_IN_DYNAMIC_CASE_PICK", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___MAX_CASES_IN_DYNAMIC_CASE_PICK as MAX_CASES_IN_DYNAMIC_CASE_PICK", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___CASE_CNT_DATE_TIME as CASE_CNT_DATE_TIME", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___ACTV_CNT_DATE_TIME as ACTV_CNT_DATE_TIME", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___CASE_PICK_CNT_DATE_TIME as CASE_PICK_CNT_DATE_TIME", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___VENDOR_CARTON_PER_TIER as VENDOR_CARTON_PER_TIER", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___VENDOR_TIER_PER_PLT as VENDOR_TIER_PER_PLT", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___ORD_CARTON_PER_TIER as ORD_CARTON_PER_TIER", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___ORD_TIER_PER_PLT as ORD_TIER_PER_PLT", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___DFLT_CATCH_WT_METHOD as DFLT_CATCH_WT_METHOD", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___DFLT_DATE_MASK as DFLT_DATE_MASK", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___CARTON_BREAK_ATTR as CARTON_BREAK_ATTR", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___MISC_SHORT_ALPHA_1 as MISC_SHORT_ALPHA_1", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___MISC_SHORT_ALPHA_2 as MISC_SHORT_ALPHA_2", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___MISC_ALPHA_1 as MISC_ALPHA_1", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___MISC_ALPHA_2 as MISC_ALPHA_2", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___MISC_ALPHA_3 as MISC_ALPHA_3", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___MISC_NUMERIC_1 as MISC_NUMERIC_1", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___MISC_NUMERIC_2 as MISC_NUMERIC_2", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___MISC_NUMERIC_3 as MISC_NUMERIC_3", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___MISC_DATE_1 as MISC_DATE_1", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___MISC_DATE_2 as MISC_DATE_2", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___CHUTE_ASSIGN_TYPE as CHUTE_ASSIGN_TYPE", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___ACTV_REPL_ORGN as ACTV_REPL_ORGN", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___UIN_NBR as UIN_NBR", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___FIFO_RANGE as FIFO_RANGE", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___PRTL_CASE_ALLOC_THRESH_UNITS as PRTL_CASE_ALLOC_THRESH_UNITS", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___PRTL_CASE_PUTWY_THRESH_UNITS as PRTL_CASE_PUTWY_THRESH_UNITS", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___VENDOR_TAGGED_EPC_FLAG as VENDOR_TAGGED_EPC_FLAG", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___ITEM_AVG_WT as ITEM_AVG_WT", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___DFLT_MIN_FROM_PREV_LOCN_FLAG as DFLT_MIN_FROM_PREV_LOCN_FLAG", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___SLOT_MISC_1 as SLOT_MISC_1", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___SLOT_MISC_2 as SLOT_MISC_2", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___SLOT_MISC_3 as SLOT_MISC_3", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___SLOT_MISC_4 as SLOT_MISC_4", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___SLOT_MISC_5 as SLOT_MISC_5", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___SLOT_MISC_6 as SLOT_MISC_6", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___SLOT_ROTATE_EACHES_FLAG as SLOT_ROTATE_EACHES_FLAG", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___SLOT_ROTATE_INNERS_FLAG as SLOT_ROTATE_INNERS_FLAG", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___SLOT_ROTATE_BINS_FLAG as SLOT_ROTATE_BINS_FLAG", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___SLOT_ROTATE_CASES_FLAG as SLOT_ROTATE_CASES_FLAG", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___SLOT_3D_SLOTTING_FLAG as SLOT_3D_SLOTTING_FLAG", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___SLOT_NEST_EACHES_FLAG as SLOT_NEST_EACHES_FLAG", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___SLOT_INCR_HT as SLOT_INCR_HT", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___SLOT_INCR_LEN as SLOT_INCR_LEN", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___SLOT_INCR_WIDTH as SLOT_INCR_WIDTH", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___NBR_OF_DYN_ACTV_PICK_PER_ITEM as NBR_OF_DYN_ACTV_PICK_PER_ITEM", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___NBR_OF_DYN_CASE_PICK_PER_ITEM as NBR_OF_DYN_CASE_PICK_PER_ITEM", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___AUDIT_CREATED_SOURCE as AUDIT_CREATED_SOURCE", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___AUDIT_CREATED_SOURCE_TYPE as AUDIT_CREATED_SOURCE_TYPE", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___AUDIT_CREATED_DTTM as AUDIT_CREATED_DTTM", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___AUDIT_LAST_UPDATED_SOURCE as AUDIT_LAST_UPDATED_SOURCE", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___AUDIT_LAST_UPDATED_SOURCE_TYPE as AUDIT_LAST_UPDATED_SOURCE_TYPE", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___AUDIT_LAST_UPDATED_DTTM as AUDIT_LAST_UPDATED_DTTM", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___MARK_FOR_DELETION as MARK_FOR_DELETION", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___ITEM_ID as ITEM_ID", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___FACILITY_ID as FACILITY_ID", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___BUSINESS_PARTNER_ID as BUSINESS_PARTNER_ID", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___AVERAGE_MOVEMENT as AVERAGE_MOVEMENT", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___SHELF_DAYS as SHELF_DAYS", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___i_WM_ITEM_FACILITY_MAPPING_ID as i_WM_ITEM_FACILITY_MAPPING_ID", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___i_WM_AUDIT_CREATED_TSTMP as i_WM_AUDIT_CREATED_TSTMP", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___i_WM_AUDIT_LAST_UPDATED_TSTMP as i_WM_AUDIT_LAST_UPDATED_TSTMP", \
	"JNR_WM_ITEM_FACILITY_MAPPING_WMS___i_LOAD_TSTMP as i_LOAD_TSTMP")\
    .filter("i_WM_ITEM_FACILITY_MAPPING_ID is Null OR ( i_WM_ITEM_FACILITY_MAPPING_ID is not Null AND\
     ( COALESCE(AUDIT_CREATED_DTTM, date'1900-01-01') != COALESCE(i_WM_AUDIT_CREATED_TSTMP, date'1900-01-01') \
    OR COALESCE(AUDIT_LAST_UPDATED_DTTM, date'1900-01-01') != COALESCE(i_WM_AUDIT_LAST_UPDATED_TSTMP, date'1900-01-01')))").withColumn("sys_row_id", monotonically_increasing_id())


# COMMAND ----------
# Processing node EXP_UPD_VALIDATOR, type EXPRESSION 
# COLUMN COUNT: 85

# for each involved DataFrame, append the dataframe name to each column
FIL_UNCHANGED_RECORDS_temp = FIL_UNCHANGED_RECORDS.toDF(*["FIL_UNCHANGED_RECORDS___" + col for col in FIL_UNCHANGED_RECORDS.columns])

EXP_UPD_VALIDATOR = FIL_UNCHANGED_RECORDS_temp.selectExpr( \
	"FIL_UNCHANGED_RECORDS___sys_row_id as sys_row_id", \
	"FIL_UNCHANGED_RECORDS___LOCATION_ID as LOCATION_ID", \
	"FIL_UNCHANGED_RECORDS___ITEM_FACILITY_MAPPING_ID as ITEM_FACILITY_MAPPING_ID", \
	"FIL_UNCHANGED_RECORDS___LPN_PER_TIER as LPN_PER_TIER", \
	"FIL_UNCHANGED_RECORDS___TIER_PER_PLT as TIER_PER_PLT", \
	"FIL_UNCHANGED_RECORDS___CASE_SIZE_TYPE as CASE_SIZE_TYPE", \
	"FIL_UNCHANGED_RECORDS___PICK_RATE as PICK_RATE", \
	"FIL_UNCHANGED_RECORDS___WAGE_VALUE as WAGE_VALUE", \
	"FIL_UNCHANGED_RECORDS___PACK_RATE as PACK_RATE", \
	"FIL_UNCHANGED_RECORDS___SPL_PROC_RATE as SPL_PROC_RATE", \
	"FIL_UNCHANGED_RECORDS___AUTO_SUB_CASE as AUTO_SUB_CASE", \
	"DECIMAL(FIL_UNCHANGED_RECORDS___ASSIGN_DYNAMIC_ACTV_PICK_SITE) as ASSIGN_DYNAMIC_ACTV_PICK_SITE_EXP", \
	"DECIMAL(FIL_UNCHANGED_RECORDS___ASSIGN_DYNAMIC_CASE_PICK_SITE) as ASSIGN_DYNAMIC_CASE_PICK_SITE_EXP", \
	"FIL_UNCHANGED_RECORDS___PICK_LOCN_ASSIGN_TYPE as PICK_LOCN_ASSIGN_TYPE", \
	"FIL_UNCHANGED_RECORDS___PUTWY_TYPE as PUTWY_TYPE", \
	"FIL_UNCHANGED_RECORDS___DFLT_WAVE_PROC_TYPE as DFLT_WAVE_PROC_TYPE", \
	"FIL_UNCHANGED_RECORDS___XCESS_WAVE_NEED_PROC_TYPE as XCESS_WAVE_NEED_PROC_TYPE", \
	"FIL_UNCHANGED_RECORDS___ALLOC_TYPE as ALLOC_TYPE", \
	"decode ( ltrim ( rtrim ( upper ( FIL_UNCHANGED_RECORDS___VIOLATE_FIFO_ALLOC_QTY_MATCH ) ) ) , '1','1' , 'Y','1','0' ) as VIOLATE_FIFO_ALLOC_QTY_MATCH_EXP", \
	"FIL_UNCHANGED_RECORDS___QV_ITEM_GRP as QV_ITEM_GRP", \
	"FIL_UNCHANGED_RECORDS___QUAL_INSPCT_ITEM_GRP as QUAL_INSPCT_ITEM_GRP", \
	"FIL_UNCHANGED_RECORDS___MAX_UNITS_IN_DYNAMIC_ACTV as MAX_UNITS_IN_DYNAMIC_ACTV", \
	"FIL_UNCHANGED_RECORDS___MAX_CASES_IN_DYNAMIC_ACTV as MAX_CASES_IN_DYNAMIC_ACTV", \
	"FIL_UNCHANGED_RECORDS___MAX_UNITS_IN_DYNAMIC_CASE_PICK as MAX_UNITS_IN_DYNAMIC_CASE_PICK", \
	"FIL_UNCHANGED_RECORDS___MAX_CASES_IN_DYNAMIC_CASE_PICK as MAX_CASES_IN_DYNAMIC_CASE_PICK", \
	"FIL_UNCHANGED_RECORDS___CASE_CNT_DATE_TIME as CASE_CNT_DATE_TIME", \
	"FIL_UNCHANGED_RECORDS___ACTV_CNT_DATE_TIME as ACTV_CNT_DATE_TIME", \
	"FIL_UNCHANGED_RECORDS___CASE_PICK_CNT_DATE_TIME as CASE_PICK_CNT_DATE_TIME", \
	"FIL_UNCHANGED_RECORDS___VENDOR_CARTON_PER_TIER as VENDOR_CARTON_PER_TIER", \
	"FIL_UNCHANGED_RECORDS___VENDOR_TIER_PER_PLT as VENDOR_TIER_PER_PLT", \
	"FIL_UNCHANGED_RECORDS___ORD_CARTON_PER_TIER as ORD_CARTON_PER_TIER", \
	"FIL_UNCHANGED_RECORDS___ORD_TIER_PER_PLT as ORD_TIER_PER_PLT", \
	"FIL_UNCHANGED_RECORDS___DFLT_CATCH_WT_METHOD as DFLT_CATCH_WT_METHOD", \
	"FIL_UNCHANGED_RECORDS___DFLT_DATE_MASK as DFLT_DATE_MASK", \
	"FIL_UNCHANGED_RECORDS___CARTON_BREAK_ATTR as CARTON_BREAK_ATTR", \
	"FIL_UNCHANGED_RECORDS___MISC_SHORT_ALPHA_1 as MISC_SHORT_ALPHA_1", \
	"FIL_UNCHANGED_RECORDS___MISC_SHORT_ALPHA_2 as MISC_SHORT_ALPHA_2", \
	"FIL_UNCHANGED_RECORDS___MISC_ALPHA_1 as MISC_ALPHA_1", \
	"FIL_UNCHANGED_RECORDS___MISC_ALPHA_2 as MISC_ALPHA_2", \
	"FIL_UNCHANGED_RECORDS___MISC_ALPHA_3 as MISC_ALPHA_3", \
	"FIL_UNCHANGED_RECORDS___MISC_NUMERIC_1 as MISC_NUMERIC_1", \
	"FIL_UNCHANGED_RECORDS___MISC_NUMERIC_2 as MISC_NUMERIC_2", \
	"FIL_UNCHANGED_RECORDS___MISC_NUMERIC_3 as MISC_NUMERIC_3", \
	"FIL_UNCHANGED_RECORDS___MISC_DATE_1 as MISC_DATE_1", \
	"FIL_UNCHANGED_RECORDS___MISC_DATE_2 as MISC_DATE_2", \
	"FIL_UNCHANGED_RECORDS___CHUTE_ASSIGN_TYPE as CHUTE_ASSIGN_TYPE", \
	"FIL_UNCHANGED_RECORDS___ACTV_REPL_ORGN as ACTV_REPL_ORGN", \
	"FIL_UNCHANGED_RECORDS___UIN_NBR as UIN_NBR", \
	"FIL_UNCHANGED_RECORDS___FIFO_RANGE as FIFO_RANGE", \
	"FIL_UNCHANGED_RECORDS___PRTL_CASE_ALLOC_THRESH_UNITS as PRTL_CASE_ALLOC_THRESH_UNITS", \
	"FIL_UNCHANGED_RECORDS___PRTL_CASE_PUTWY_THRESH_UNITS as PRTL_CASE_PUTWY_THRESH_UNITS", \
	"decode ( ltrim ( rtrim ( upper ( FIL_UNCHANGED_RECORDS___VENDOR_TAGGED_EPC_FLAG ) ) ) , '1','1' , 'Y','1','0' ) as VENDOR_TAGGED_EPC_FLAG_EXP", \
	"FIL_UNCHANGED_RECORDS___ITEM_AVG_WT as ITEM_AVG_WT", \
	"decode ( ltrim ( rtrim ( upper ( FIL_UNCHANGED_RECORDS___DFLT_MIN_FROM_PREV_LOCN_FLAG ) ) ) , '1','1' , 'Y','1','0' ) as DFLT_MIN_FROM_PREV_LOCN_FLAG_EXP", \
	"FIL_UNCHANGED_RECORDS___SLOT_MISC_1 as SLOT_MISC_1", \
	"FIL_UNCHANGED_RECORDS___SLOT_MISC_2 as SLOT_MISC_2", \
	"FIL_UNCHANGED_RECORDS___SLOT_MISC_3 as SLOT_MISC_3", \
	"FIL_UNCHANGED_RECORDS___SLOT_MISC_4 as SLOT_MISC_4", \
	"FIL_UNCHANGED_RECORDS___SLOT_MISC_5 as SLOT_MISC_5", \
	"FIL_UNCHANGED_RECORDS___SLOT_MISC_6 as SLOT_MISC_6", \
	"decode ( ltrim ( rtrim ( upper ( FIL_UNCHANGED_RECORDS___SLOT_ROTATE_EACHES_FLAG ) ) ) , '1','1' , 'Y','1','0' ) as SLOT_ROTATE_EACHES_FLAG_EXP", \
	"decode ( ltrim ( rtrim ( upper ( FIL_UNCHANGED_RECORDS___SLOT_ROTATE_INNERS_FLAG ) ) ) , '1','1' , 'Y','1','0' ) as SLOT_ROTATE_INNERS_FLAG_EXP", \
	"decode ( ltrim ( rtrim ( upper ( FIL_UNCHANGED_RECORDS___SLOT_ROTATE_BINS_FLAG ) ) ) , '1','1' , 'Y','1','0' ) as SLOT_ROTATE_BINS_FLAG_EXP", \
	"decode ( ltrim ( rtrim ( upper ( FIL_UNCHANGED_RECORDS___SLOT_ROTATE_CASES_FLAG ) ) ) , '1','1' , 'Y','1','0' ) as SLOT_ROTATE_CASES_FLAG_EXP", \
	"decode ( ltrim ( rtrim ( upper ( FIL_UNCHANGED_RECORDS___SLOT_3D_SLOTTING_FLAG ) ) ) , '1','1' , 'Y','1','0' ) as SLOT_3D_SLOTTING_FLAG_EXP", \
	"decode ( ltrim ( rtrim ( upper ( FIL_UNCHANGED_RECORDS___SLOT_NEST_EACHES_FLAG ) ) ) , '1','1' , 'Y','1','0' ) as SLOT_NEST_EACHES_FLAG_EXP", \
	"FIL_UNCHANGED_RECORDS___SLOT_INCR_HT as SLOT_INCR_HT", \
	"FIL_UNCHANGED_RECORDS___SLOT_INCR_LEN as SLOT_INCR_LEN", \
	"FIL_UNCHANGED_RECORDS___SLOT_INCR_WIDTH as SLOT_INCR_WIDTH", \
	"FIL_UNCHANGED_RECORDS___NBR_OF_DYN_ACTV_PICK_PER_ITEM as NBR_OF_DYN_ACTV_PICK_PER_ITEM", \
	"FIL_UNCHANGED_RECORDS___NBR_OF_DYN_CASE_PICK_PER_ITEM as NBR_OF_DYN_CASE_PICK_PER_ITEM", \
	"FIL_UNCHANGED_RECORDS___AUDIT_CREATED_SOURCE as AUDIT_CREATED_SOURCE", \
	"FIL_UNCHANGED_RECORDS___AUDIT_CREATED_SOURCE_TYPE as AUDIT_CREATED_SOURCE_TYPE", \
	"FIL_UNCHANGED_RECORDS___AUDIT_CREATED_DTTM as AUDIT_CREATED_DTTM", \
	"FIL_UNCHANGED_RECORDS___AUDIT_LAST_UPDATED_SOURCE as AUDIT_LAST_UPDATED_SOURCE", \
	"FIL_UNCHANGED_RECORDS___AUDIT_LAST_UPDATED_SOURCE_TYPE as AUDIT_LAST_UPDATED_SOURCE_TYPE", \
	"FIL_UNCHANGED_RECORDS___AUDIT_LAST_UPDATED_DTTM as AUDIT_LAST_UPDATED_DTTM", \
	"FIL_UNCHANGED_RECORDS___MARK_FOR_DELETION as MARK_FOR_DELETION", \
	"FIL_UNCHANGED_RECORDS___ITEM_ID as ITEM_ID", \
	"FIL_UNCHANGED_RECORDS___FACILITY_ID as FACILITY_ID", \
	"FIL_UNCHANGED_RECORDS___BUSINESS_PARTNER_ID as BUSINESS_PARTNER_ID", \
	"FIL_UNCHANGED_RECORDS___AVERAGE_MOVEMENT as AVERAGE_MOVEMENT", \
	"FIL_UNCHANGED_RECORDS___SHELF_DAYS as SHELF_DAYS", \
	"CURRENT_TIMESTAMP as UPDATE_TSTMP", \
	"IF (FIL_UNCHANGED_RECORDS___i_LOAD_TSTMP IS NULL, CURRENT_TIMESTAMP, FIL_UNCHANGED_RECORDS___i_LOAD_TSTMP) as LOAD_TSTMP", \
	"IF (FIL_UNCHANGED_RECORDS___i_WM_ITEM_FACILITY_MAPPING_ID IS NULL, 1, 2) as o_UPDATE_VALIDATOR" \
)

# COMMAND ----------
# Processing node UPD_INS_UPD, type UPDATE_STRATEGY . Note: using additional SELECT to rename incoming columns
# COLUMN COUNT: 85

# for each involved DataFrame, append the dataframe name to each column
EXP_UPD_VALIDATOR_temp = EXP_UPD_VALIDATOR.toDF(*["EXP_UPD_VALIDATOR___" + col for col in EXP_UPD_VALIDATOR.columns])

UPD_INS_UPD = EXP_UPD_VALIDATOR_temp.selectExpr( \
	"EXP_UPD_VALIDATOR___LOCATION_ID as LOCATION_ID", \
	"EXP_UPD_VALIDATOR___ITEM_FACILITY_MAPPING_ID as ITEM_FACILITY_MAPPING_ID", \
	"EXP_UPD_VALIDATOR___LPN_PER_TIER as LPN_PER_TIER", \
	"EXP_UPD_VALIDATOR___TIER_PER_PLT as TIER_PER_PLT", \
	"EXP_UPD_VALIDATOR___CASE_SIZE_TYPE as CASE_SIZE_TYPE", \
	"EXP_UPD_VALIDATOR___PICK_RATE as PICK_RATE", \
	"EXP_UPD_VALIDATOR___WAGE_VALUE as WAGE_VALUE", \
	"EXP_UPD_VALIDATOR___PACK_RATE as PACK_RATE", \
	"EXP_UPD_VALIDATOR___SPL_PROC_RATE as SPL_PROC_RATE", \
	"EXP_UPD_VALIDATOR___AUTO_SUB_CASE as AUTO_SUB_CASE", \
	"EXP_UPD_VALIDATOR___ASSIGN_DYNAMIC_ACTV_PICK_SITE_EXP as ASSIGN_DYNAMIC_ACTV_PICK_SITE", \
	"EXP_UPD_VALIDATOR___ASSIGN_DYNAMIC_CASE_PICK_SITE_EXP as ASSIGN_DYNAMIC_CASE_PICK_SITE", \
	"EXP_UPD_VALIDATOR___PICK_LOCN_ASSIGN_TYPE as PICK_LOCN_ASSIGN_TYPE", \
	"EXP_UPD_VALIDATOR___PUTWY_TYPE as PUTWY_TYPE", \
	"EXP_UPD_VALIDATOR___DFLT_WAVE_PROC_TYPE as DFLT_WAVE_PROC_TYPE", \
	"EXP_UPD_VALIDATOR___XCESS_WAVE_NEED_PROC_TYPE as XCESS_WAVE_NEED_PROC_TYPE", \
	"EXP_UPD_VALIDATOR___ALLOC_TYPE as ALLOC_TYPE", \
	"EXP_UPD_VALIDATOR___VIOLATE_FIFO_ALLOC_QTY_MATCH_EXP as VIOLATE_FIFO_ALLOC_QTY_MATCH", \
	"EXP_UPD_VALIDATOR___QV_ITEM_GRP as QV_ITEM_GRP", \
	"EXP_UPD_VALIDATOR___QUAL_INSPCT_ITEM_GRP as QUAL_INSPCT_ITEM_GRP", \
	"EXP_UPD_VALIDATOR___MAX_UNITS_IN_DYNAMIC_ACTV as MAX_UNITS_IN_DYNAMIC_ACTV", \
	"EXP_UPD_VALIDATOR___MAX_CASES_IN_DYNAMIC_ACTV as MAX_CASES_IN_DYNAMIC_ACTV", \
	"EXP_UPD_VALIDATOR___MAX_UNITS_IN_DYNAMIC_CASE_PICK as MAX_UNITS_IN_DYNAMIC_CASE_PICK", \
	"EXP_UPD_VALIDATOR___MAX_CASES_IN_DYNAMIC_CASE_PICK as MAX_CASES_IN_DYNAMIC_CASE_PICK", \
	"EXP_UPD_VALIDATOR___CASE_CNT_DATE_TIME as CASE_CNT_DATE_TIME", \
	"EXP_UPD_VALIDATOR___ACTV_CNT_DATE_TIME as ACTV_CNT_DATE_TIME", \
	"EXP_UPD_VALIDATOR___CASE_PICK_CNT_DATE_TIME as CASE_PICK_CNT_DATE_TIME", \
	"EXP_UPD_VALIDATOR___VENDOR_CARTON_PER_TIER as VENDOR_CARTON_PER_TIER", \
	"EXP_UPD_VALIDATOR___VENDOR_TIER_PER_PLT as VENDOR_TIER_PER_PLT", \
	"EXP_UPD_VALIDATOR___ORD_CARTON_PER_TIER as ORD_CARTON_PER_TIER", \
	"EXP_UPD_VALIDATOR___ORD_TIER_PER_PLT as ORD_TIER_PER_PLT", \
	"EXP_UPD_VALIDATOR___DFLT_CATCH_WT_METHOD as DFLT_CATCH_WT_METHOD", \
	"EXP_UPD_VALIDATOR___DFLT_DATE_MASK as DFLT_DATE_MASK", \
	"EXP_UPD_VALIDATOR___CARTON_BREAK_ATTR as CARTON_BREAK_ATTR", \
	"EXP_UPD_VALIDATOR___MISC_SHORT_ALPHA_1 as MISC_SHORT_ALPHA_1", \
	"EXP_UPD_VALIDATOR___MISC_SHORT_ALPHA_2 as MISC_SHORT_ALPHA_2", \
	"EXP_UPD_VALIDATOR___MISC_ALPHA_1 as MISC_ALPHA_1", \
	"EXP_UPD_VALIDATOR___MISC_ALPHA_2 as MISC_ALPHA_2", \
	"EXP_UPD_VALIDATOR___MISC_ALPHA_3 as MISC_ALPHA_3", \
	"EXP_UPD_VALIDATOR___MISC_NUMERIC_1 as MISC_NUMERIC_1", \
	"EXP_UPD_VALIDATOR___MISC_NUMERIC_2 as MISC_NUMERIC_2", \
	"EXP_UPD_VALIDATOR___MISC_NUMERIC_3 as MISC_NUMERIC_3", \
	"EXP_UPD_VALIDATOR___MISC_DATE_1 as MISC_DATE_1", \
	"EXP_UPD_VALIDATOR___MISC_DATE_2 as MISC_DATE_2", \
	"EXP_UPD_VALIDATOR___CHUTE_ASSIGN_TYPE as CHUTE_ASSIGN_TYPE", \
	"EXP_UPD_VALIDATOR___ACTV_REPL_ORGN as ACTV_REPL_ORGN", \
	"EXP_UPD_VALIDATOR___UIN_NBR as UIN_NBR", \
	"EXP_UPD_VALIDATOR___FIFO_RANGE as FIFO_RANGE", \
	"EXP_UPD_VALIDATOR___PRTL_CASE_ALLOC_THRESH_UNITS as PRTL_CASE_ALLOC_THRESH_UNITS", \
	"EXP_UPD_VALIDATOR___PRTL_CASE_PUTWY_THRESH_UNITS as PRTL_CASE_PUTWY_THRESH_UNITS", \
	"EXP_UPD_VALIDATOR___VENDOR_TAGGED_EPC_FLAG_EXP as VENDOR_TAGGED_EPC_FLAG", \
	"EXP_UPD_VALIDATOR___ITEM_AVG_WT as ITEM_AVG_WT", \
	"EXP_UPD_VALIDATOR___DFLT_MIN_FROM_PREV_LOCN_FLAG_EXP as DFLT_MIN_FROM_PREV_LOCN_FLAG", \
	"EXP_UPD_VALIDATOR___SLOT_MISC_1 as SLOT_MISC_1", \
	"EXP_UPD_VALIDATOR___SLOT_MISC_2 as SLOT_MISC_2", \
	"EXP_UPD_VALIDATOR___SLOT_MISC_3 as SLOT_MISC_3", \
	"EXP_UPD_VALIDATOR___SLOT_MISC_4 as SLOT_MISC_4", \
	"EXP_UPD_VALIDATOR___SLOT_MISC_5 as SLOT_MISC_5", \
	"EXP_UPD_VALIDATOR___SLOT_MISC_6 as SLOT_MISC_6", \
	"EXP_UPD_VALIDATOR___SLOT_ROTATE_EACHES_FLAG_EXP as SLOT_ROTATE_EACHES_FLAG", \
	"EXP_UPD_VALIDATOR___SLOT_ROTATE_INNERS_FLAG_EXP as SLOT_ROTATE_INNERS_FLAG", \
	"EXP_UPD_VALIDATOR___SLOT_ROTATE_BINS_FLAG_EXP as SLOT_ROTATE_BINS_FLAG", \
	"EXP_UPD_VALIDATOR___SLOT_ROTATE_CASES_FLAG_EXP as SLOT_ROTATE_CASES_FLAG", \
	"EXP_UPD_VALIDATOR___SLOT_3D_SLOTTING_FLAG_EXP as SLOT_3D_SLOTTING_FLAG", \
	"EXP_UPD_VALIDATOR___SLOT_NEST_EACHES_FLAG_EXP as SLOT_NEST_EACHES_FLAG", \
	"EXP_UPD_VALIDATOR___SLOT_INCR_HT as SLOT_INCR_HT", \
	"EXP_UPD_VALIDATOR___SLOT_INCR_LEN as SLOT_INCR_LEN", \
	"EXP_UPD_VALIDATOR___SLOT_INCR_WIDTH as SLOT_INCR_WIDTH", \
	"EXP_UPD_VALIDATOR___NBR_OF_DYN_ACTV_PICK_PER_ITEM as NBR_OF_DYN_ACTV_PICK_PER_ITEM", \
	"EXP_UPD_VALIDATOR___NBR_OF_DYN_CASE_PICK_PER_ITEM as NBR_OF_DYN_CASE_PICK_PER_ITEM", \
	"EXP_UPD_VALIDATOR___AUDIT_CREATED_SOURCE as AUDIT_CREATED_SOURCE", \
	"EXP_UPD_VALIDATOR___AUDIT_CREATED_SOURCE_TYPE as AUDIT_CREATED_SOURCE_TYPE", \
	"EXP_UPD_VALIDATOR___AUDIT_CREATED_DTTM as AUDIT_CREATED_DTTM", \
	"EXP_UPD_VALIDATOR___AUDIT_LAST_UPDATED_SOURCE as AUDIT_LAST_UPDATED_SOURCE", \
	"EXP_UPD_VALIDATOR___AUDIT_LAST_UPDATED_SOURCE_TYPE as AUDIT_LAST_UPDATED_SOURCE_TYPE", \
	"EXP_UPD_VALIDATOR___AUDIT_LAST_UPDATED_DTTM as AUDIT_LAST_UPDATED_DTTM", \
	"EXP_UPD_VALIDATOR___MARK_FOR_DELETION as MARK_FOR_DELETION", \
	"EXP_UPD_VALIDATOR___ITEM_ID as ITEM_ID", \
	"EXP_UPD_VALIDATOR___FACILITY_ID as FACILITY_ID", \
	"EXP_UPD_VALIDATOR___BUSINESS_PARTNER_ID as BUSINESS_PARTNER_ID", \
	"EXP_UPD_VALIDATOR___AVERAGE_MOVEMENT as AVERAGE_MOVEMENT", \
	"EXP_UPD_VALIDATOR___SHELF_DAYS as SHELF_DAYS", \
	"EXP_UPD_VALIDATOR___UPDATE_TSTMP as UPDATE_TSTMP", \
	"EXP_UPD_VALIDATOR___LOAD_TSTMP as LOAD_TSTMP", \
	"EXP_UPD_VALIDATOR___o_UPDATE_VALIDATOR as o_UPDATE_VALIDATOR") \
	.withColumn('pyspark_data_action', when(EXP_UPD_VALIDATOR.o_UPDATE_VALIDATOR ==(lit(1)) , lit(0)).when(EXP_UPD_VALIDATOR.o_UPDATE_VALIDATOR ==(lit(2)) , lit(1)))

# COMMAND ----------
# Processing node Shortcut_to_WM_ITEM_FACILITY_MAPPING_WMS1, type TARGET 
# COLUMN COUNT: 84

try:
  primary_key = """source.LOCATION_ID = target.LOCATION_ID AND source.WM_ITEM_FACILITY_MAPPING_ID = target.WM_ITEM_FACILITY_MAPPING_ID"""
#   refined_perf_table = "WM_ITEM_FACILITY_MAPPING_WMS"
  executeMerge(UPD_INS_UPD, refined_perf_table, primary_key)
  logger.info(f"Merge with {refined_perf_table} completed]")
  logPrevRunDt("WM_ITEM_FACILITY_MAPPING_WMS", "WM_ITEM_FACILITY_MAPPING_WMS", "Completed", "N/A", f"{raw}.log_run_details")
except Exception as e:
  logPrevRunDt("WM_ITEM_FACILITY_MAPPING_WMS", "WM_ITEM_FACILITY_MAPPING_WMS","Failed",str(e), f"{raw}.log_run_details", )
  raise e
	