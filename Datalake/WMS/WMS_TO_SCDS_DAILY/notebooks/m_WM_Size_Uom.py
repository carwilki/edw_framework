#Code converted on 2023-06-22 21:00:01
import os
import argparse
from pyspark.sql import *
from pyspark.sql.functions import *
from pyspark.sql.window import Window
from pyspark.sql.types import *
from datetime import datetime
from pyspark.dbutils import DBUtils
from utils.genericUtilities import *
from utils.configs import *
from utils.mergeUtils import *
from utils.logger import *
# COMMAND ----------

parser = argparse.ArgumentParser()
spark = SparkSession.getActiveSession()
dbutils = DBUtils(spark)

parser.add_argument('env', type=str, help='Env Variable')
args = parser.parse_args()
env = args.env

if env is None or env == '':
    raise ValueError('env is not set')

refine = getEnvPrefix(env) + 'refine'
raw = getEnvPrefix(env) + 'raw'
legacy = getEnvPrefix(env) + 'legacy'

# Set global variables
starttime = datetime.now() #start timestamp of the script

# Read in relation source variables
# (username, password, connection_string) = getConfig(DC_NBR, env)

# COMMAND ----------
# Processing node SQ_Shortcut_to_WM_SIZE_UOM_PRE, type SOURCE 
# COLUMN COUNT: 26

SQ_Shortcut_to_WM_SIZE_UOM_PRE = spark.sql(f"""SELECT
WM_SIZE_UOM_PRE.DC_NBR,
WM_SIZE_UOM_PRE.SIZE_UOM_ID,
WM_SIZE_UOM_PRE.TC_COMPANY_ID,
WM_SIZE_UOM_PRE.SIZE_UOM,
WM_SIZE_UOM_PRE.DESCRIPTION,
WM_SIZE_UOM_PRE.CONSOLIDATION_CODE,
WM_SIZE_UOM_PRE.DO_NOT_INHERIT_TO_ORDER,
WM_SIZE_UOM_PRE.SIZE_MAPPING,
WM_SIZE_UOM_PRE.STANDARD_UOM,
WM_SIZE_UOM_PRE.STANDARD_UNITS,
WM_SIZE_UOM_PRE.SPLITTER_CONS_CODE,
WM_SIZE_UOM_PRE.APPLY_TO_VENDOR,
WM_SIZE_UOM_PRE.MARK_FOR_DELETION,
WM_SIZE_UOM_PRE.DISCRETE,
WM_SIZE_UOM_PRE.ADJUSTMENT,
WM_SIZE_UOM_PRE.ADJUSTMENT_SIZE_UOM_ID,
WM_SIZE_UOM_PRE.HIBERNATE_VERSION,
WM_SIZE_UOM_PRE.AUDIT_CREATED_SOURCE,
WM_SIZE_UOM_PRE.AUDIT_CREATED_SOURCE_TYPE,
WM_SIZE_UOM_PRE.AUDIT_CREATED_DTTM,
WM_SIZE_UOM_PRE.AUDIT_LAST_UPDATED_SOURCE,
WM_SIZE_UOM_PRE.AUDIT_LAST_UPDATED_SOURCE_TYPE,
WM_SIZE_UOM_PRE.AUDIT_LAST_UPDATED_DTTM,
WM_SIZE_UOM_PRE.CREATED_DTTM,
WM_SIZE_UOM_PRE.LAST_UPDATED_DTTM,
WM_SIZE_UOM_PRE.LOAD_TSTMP
FROM WM_SIZE_UOM_PRE""").withColumn("sys_row_id", monotonically_increasing_id())

# COMMAND ----------
# Processing node SQ_Shortcut_to_WM_SIZE_UOM, type SOURCE 
# COLUMN COUNT: 26

SQ_Shortcut_to_WM_SIZE_UOM = spark.sql(f"""SELECT
WM_SIZE_UOM.LOCATION_ID,
WM_SIZE_UOM.WM_SIZE_UOM_ID,
WM_SIZE_UOM.WM_TC_COMPANY_ID,
WM_SIZE_UOM.WM_SIZE_UOM,
WM_SIZE_UOM.WM_SIZE_UOM_DESC,
WM_SIZE_UOM.WM_SIZE_MAPPING,
WM_SIZE_UOM.WM_STANDARD_UOM_ID,
WM_SIZE_UOM.WM_STANDARD_UNITS,
WM_SIZE_UOM.WM_CONSOLIDATION_CD,
WM_SIZE_UOM.WM_SPLITTER_CONS_CD,
WM_SIZE_UOM.DO_NOT_INHERIT_TO_ORDER_FLAG,
WM_SIZE_UOM.APPLY_TO_VENDOR_FLAG,
WM_SIZE_UOM.DISCRETE_FLAG,
WM_SIZE_UOM.WM_ADJUSTMENT_SIZE,
WM_SIZE_UOM.WM_ADJUSTMENT_SIZE_UOM_ID,
WM_SIZE_UOM.WM_AUDIT_CREATED_SOURCE_TYPE,
WM_SIZE_UOM.WM_AUDIT_CREATED_SOURCE,
WM_SIZE_UOM.WM_AUDIT_CREATED_TSTMP,
WM_SIZE_UOM.WM_AUDIT_LAST_UPDATED_SOURCE_TYPE,
WM_SIZE_UOM.WM_AUDIT_LAST_UPDATED_SOURCE,
WM_SIZE_UOM.WM_AUDIT_LAST_UPDATED_TSTMP,
WM_SIZE_UOM.WM_HIBERNATE_VERSION,
WM_SIZE_UOM.MARK_FOR_DELETION_FLAG,
WM_SIZE_UOM.WM_CREATED_TSTMP,
WM_SIZE_UOM.WM_LAST_UPDATED_TSTMP,
WM_SIZE_UOM.LOAD_TSTMP
FROM WM_SIZE_UOM
WHERE WM_SIZE_UOM_ID IN (SELECT SIZE_UOM_ID FROM WM_SIZE_UOM_PRE )""").withColumn("sys_row_id", monotonically_increasing_id())

# COMMAND ----------
# Processing node EXPTRANS, type EXPRESSION 
# COLUMN COUNT: 26

# for each involved DataFrame, append the dataframe name to each column
SQ_Shortcut_to_WM_SIZE_UOM_PRE_temp = SQ_Shortcut_to_WM_SIZE_UOM_PRE.toDF(*["SQ_Shortcut_to_WM_SIZE_UOM_PRE___" + col for col in SQ_Shortcut_to_WM_SIZE_UOM_PRE.columns])

EXPTRANS = SQ_Shortcut_to_WM_SIZE_UOM_PRE_temp.selectExpr( 
	"SQ_Shortcut_to_WM_SIZE_UOM_PRE___sys_row_id as sys_row_id", 
	"cast(SQ_Shortcut_to_WM_SIZE_UOM_PRE___DC_NBR as int) as DC_NBR_EXP", 
	"SQ_Shortcut_to_WM_SIZE_UOM_PRE___SIZE_UOM_ID as SIZE_UOM_ID", 
	"SQ_Shortcut_to_WM_SIZE_UOM_PRE___TC_COMPANY_ID as TC_COMPANY_ID", 
	"SQ_Shortcut_to_WM_SIZE_UOM_PRE___SIZE_UOM as SIZE_UOM", 
	"SQ_Shortcut_to_WM_SIZE_UOM_PRE___DESCRIPTION as DESCRIPTION", 
	"SQ_Shortcut_to_WM_SIZE_UOM_PRE___CONSOLIDATION_CODE as CONSOLIDATION_CODE", 
	"SQ_Shortcut_to_WM_SIZE_UOM_PRE___DO_NOT_INHERIT_TO_ORDER as DO_NOT_INHERIT_TO_ORDER", 
	"SQ_Shortcut_to_WM_SIZE_UOM_PRE___SIZE_MAPPING as SIZE_MAPPING", 
	"SQ_Shortcut_to_WM_SIZE_UOM_PRE___STANDARD_UOM as STANDARD_UOM", 
	"SQ_Shortcut_to_WM_SIZE_UOM_PRE___STANDARD_UNITS as STANDARD_UNITS", 
	"SQ_Shortcut_to_WM_SIZE_UOM_PRE___SPLITTER_CONS_CODE as SPLITTER_CONS_CODE", 
	"SQ_Shortcut_to_WM_SIZE_UOM_PRE___APPLY_TO_VENDOR as APPLY_TO_VENDOR", 
	"SQ_Shortcut_to_WM_SIZE_UOM_PRE___MARK_FOR_DELETION as MARK_FOR_DELETION", 
	"SQ_Shortcut_to_WM_SIZE_UOM_PRE___DISCRETE as DISCRETE", 
	"SQ_Shortcut_to_WM_SIZE_UOM_PRE___ADJUSTMENT as ADJUSTMENT", 
	"SQ_Shortcut_to_WM_SIZE_UOM_PRE___ADJUSTMENT_SIZE_UOM_ID as ADJUSTMENT_SIZE_UOM_ID", 
	"SQ_Shortcut_to_WM_SIZE_UOM_PRE___HIBERNATE_VERSION as HIBERNATE_VERSION", 
	"SQ_Shortcut_to_WM_SIZE_UOM_PRE___AUDIT_CREATED_SOURCE as AUDIT_CREATED_SOURCE", 
	"SQ_Shortcut_to_WM_SIZE_UOM_PRE___AUDIT_CREATED_SOURCE_TYPE as AUDIT_CREATED_SOURCE_TYPE", 
	"SQ_Shortcut_to_WM_SIZE_UOM_PRE___AUDIT_CREATED_DTTM as AUDIT_CREATED_DTTM", 
	"SQ_Shortcut_to_WM_SIZE_UOM_PRE___AUDIT_LAST_UPDATED_SOURCE as AUDIT_LAST_UPDATED_SOURCE", 
	"SQ_Shortcut_to_WM_SIZE_UOM_PRE___AUDIT_LAST_UPDATED_SOURCE_TYPE as AUDIT_LAST_UPDATED_SOURCE_TYPE", 
	"SQ_Shortcut_to_WM_SIZE_UOM_PRE___AUDIT_LAST_UPDATED_DTTM as AUDIT_LAST_UPDATED_DTTM", 
	"SQ_Shortcut_to_WM_SIZE_UOM_PRE___CREATED_DTTM as CREATED_DTTM", 
	"SQ_Shortcut_to_WM_SIZE_UOM_PRE___LAST_UPDATED_DTTM as LAST_UPDATED_DTTM", 
	"SQ_Shortcut_to_WM_SIZE_UOM_PRE___LOAD_TSTMP as LOAD_TSTMP" 
)

# COMMAND ----------
# Processing node SQ_Shortcut_to_SITE_PROFILE, type SOURCE 
# COLUMN COUNT: 2

SQ_Shortcut_to_SITE_PROFILE = spark.sql(f"""SELECT
SITE_PROFILE.LOCATION_ID,
SITE_PROFILE.STORE_NBR
FROM SITE_PROFILE""").withColumn("sys_row_id", monotonically_increasing_id())

# COMMAND ----------
# Processing node JNR_SITE_PROFILE, type JOINER 
# COLUMN COUNT: 28

JNR_SITE_PROFILE = EXPTRANS.join(SQ_Shortcut_to_SITE_PROFILE,[EXPTRANS.DC_NBR_EXP == SQ_Shortcut_to_SITE_PROFILE.STORE_NBR],'inner')

# COMMAND ----------
# Processing node JNR_WM_SIZE_UOM, type JOINER . Note: using additional SELECT to rename incoming columns
# COLUMN COUNT: 51

# for each involved DataFrame, append the dataframe name to each column
SQ_Shortcut_to_WM_SIZE_UOM_temp = SQ_Shortcut_to_WM_SIZE_UOM.toDF(*["SQ_Shortcut_to_WM_SIZE_UOM___" + col for col in SQ_Shortcut_to_WM_SIZE_UOM.columns])
JNR_SITE_PROFILE_temp = JNR_SITE_PROFILE.toDF(*["JNR_SITE_PROFILE___" + col for col in JNR_SITE_PROFILE.columns])

JNR_WM_SIZE_UOM = SQ_Shortcut_to_WM_SIZE_UOM_temp.join(JNR_SITE_PROFILE_temp,[SQ_Shortcut_to_WM_SIZE_UOM_temp.SQ_Shortcut_to_WM_SIZE_UOM___LOCATION_ID == JNR_SITE_PROFILE_temp.JNR_SITE_PROFILE___LOCATION_ID, SQ_Shortcut_to_WM_SIZE_UOM_temp.SQ_Shortcut_to_WM_SIZE_UOM___WM_SIZE_UOM_ID == JNR_SITE_PROFILE_temp.JNR_SITE_PROFILE___SIZE_UOM_ID],'right_outer').selectExpr( 
	"JNR_SITE_PROFILE___LOCATION_ID as LOCATION_ID", 
	"JNR_SITE_PROFILE___SIZE_UOM_ID as SIZE_UOM_ID", 
	"JNR_SITE_PROFILE___TC_COMPANY_ID as TC_COMPANY_ID", 
	"JNR_SITE_PROFILE___SIZE_UOM as SIZE_UOM", 
	"JNR_SITE_PROFILE___DESCRIPTION as DESCRIPTION", 
	"JNR_SITE_PROFILE___CONSOLIDATION_CODE as CONSOLIDATION_CODE", 
	"JNR_SITE_PROFILE___DO_NOT_INHERIT_TO_ORDER as DO_NOT_INHERIT_TO_ORDER", 
	"JNR_SITE_PROFILE___SIZE_MAPPING as SIZE_MAPPING", 
	"JNR_SITE_PROFILE___STANDARD_UOM as STANDARD_UOM", 
	"JNR_SITE_PROFILE___STANDARD_UNITS as STANDARD_UNITS", 
	"JNR_SITE_PROFILE___SPLITTER_CONS_CODE as SPLITTER_CONS_CODE", 
	"JNR_SITE_PROFILE___APPLY_TO_VENDOR as APPLY_TO_VENDOR", 
	"JNR_SITE_PROFILE___MARK_FOR_DELETION as MARK_FOR_DELETION", 
	"JNR_SITE_PROFILE___DISCRETE as DISCRETE", 
	"JNR_SITE_PROFILE___ADJUSTMENT as ADJUSTMENT", 
	"JNR_SITE_PROFILE___ADJUSTMENT_SIZE_UOM_ID as ADJUSTMENT_SIZE_UOM_ID", 
	"JNR_SITE_PROFILE___HIBERNATE_VERSION as HIBERNATE_VERSION", 
	"JNR_SITE_PROFILE___AUDIT_CREATED_SOURCE as AUDIT_CREATED_SOURCE", 
	"JNR_SITE_PROFILE___AUDIT_CREATED_SOURCE_TYPE as AUDIT_CREATED_SOURCE_TYPE", 
	"JNR_SITE_PROFILE___AUDIT_CREATED_DTTM as AUDIT_CREATED_DTTM", 
	"JNR_SITE_PROFILE___AUDIT_LAST_UPDATED_SOURCE as AUDIT_LAST_UPDATED_SOURCE", 
	"JNR_SITE_PROFILE___AUDIT_LAST_UPDATED_SOURCE_TYPE as AUDIT_LAST_UPDATED_SOURCE_TYPE", 
	"JNR_SITE_PROFILE___AUDIT_LAST_UPDATED_DTTM as AUDIT_LAST_UPDATED_DTTM", 
	"JNR_SITE_PROFILE___CREATED_DTTM as CREATED_DTTM", 
	"JNR_SITE_PROFILE___LAST_UPDATED_DTTM as LAST_UPDATED_DTTM", 
	"SQ_Shortcut_to_WM_SIZE_UOM___LOCATION_ID as in_LOCATION_ID", 
	"SQ_Shortcut_to_WM_SIZE_UOM___WM_SIZE_UOM_ID as WM_SIZE_UOM_ID", 
	"SQ_Shortcut_to_WM_SIZE_UOM___WM_TC_COMPANY_ID as WM_TC_COMPANY_ID", 
	"SQ_Shortcut_to_WM_SIZE_UOM___WM_SIZE_UOM as WM_SIZE_UOM", 
	"SQ_Shortcut_to_WM_SIZE_UOM___WM_SIZE_UOM_DESC as WM_SIZE_UOM_DESC", 
	"SQ_Shortcut_to_WM_SIZE_UOM___WM_SIZE_MAPPING as WM_SIZE_MAPPING", 
	"SQ_Shortcut_to_WM_SIZE_UOM___WM_STANDARD_UOM_ID as WM_STANDARD_UOM_ID", 
	"SQ_Shortcut_to_WM_SIZE_UOM___WM_STANDARD_UNITS as WM_STANDARD_UNITS", 
	"SQ_Shortcut_to_WM_SIZE_UOM___WM_CONSOLIDATION_CD as WM_CONSOLIDATION_CD", 
	"SQ_Shortcut_to_WM_SIZE_UOM___WM_SPLITTER_CONS_CD as WM_SPLITTER_CONS_CD", 
	"SQ_Shortcut_to_WM_SIZE_UOM___DO_NOT_INHERIT_TO_ORDER_FLAG as DO_NOT_INHERIT_TO_ORDER_FLAG", 
	"SQ_Shortcut_to_WM_SIZE_UOM___APPLY_TO_VENDOR_FLAG as APPLY_TO_VENDOR_FLAG", 
	"SQ_Shortcut_to_WM_SIZE_UOM___DISCRETE_FLAG as DISCRETE_FLAG", 
	"SQ_Shortcut_to_WM_SIZE_UOM___WM_ADJUSTMENT_SIZE as WM_ADJUSTMENT_SIZE", 
	"SQ_Shortcut_to_WM_SIZE_UOM___WM_ADJUSTMENT_SIZE_UOM_ID as WM_ADJUSTMENT_SIZE_UOM_ID", 
	"SQ_Shortcut_to_WM_SIZE_UOM___WM_AUDIT_CREATED_SOURCE_TYPE as WM_AUDIT_CREATED_SOURCE_TYPE", 
	"SQ_Shortcut_to_WM_SIZE_UOM___WM_AUDIT_CREATED_SOURCE as WM_AUDIT_CREATED_SOURCE", 
	"SQ_Shortcut_to_WM_SIZE_UOM___WM_AUDIT_CREATED_TSTMP as WM_AUDIT_CREATED_TSTMP", 
	"SQ_Shortcut_to_WM_SIZE_UOM___WM_AUDIT_LAST_UPDATED_SOURCE_TYPE as WM_AUDIT_LAST_UPDATED_SOURCE_TYPE", 
	"SQ_Shortcut_to_WM_SIZE_UOM___WM_AUDIT_LAST_UPDATED_SOURCE as WM_AUDIT_LAST_UPDATED_SOURCE", 
	"SQ_Shortcut_to_WM_SIZE_UOM___WM_AUDIT_LAST_UPDATED_TSTMP as WM_AUDIT_LAST_UPDATED_TSTMP", 
	"SQ_Shortcut_to_WM_SIZE_UOM___WM_HIBERNATE_VERSION as WM_HIBERNATE_VERSION", 
	"SQ_Shortcut_to_WM_SIZE_UOM___MARK_FOR_DELETION_FLAG as MARK_FOR_DELETION_FLAG", 
	"SQ_Shortcut_to_WM_SIZE_UOM___WM_CREATED_TSTMP as WM_CREATED_TSTMP", 
	"SQ_Shortcut_to_WM_SIZE_UOM___WM_LAST_UPDATED_TSTMP as WM_LAST_UPDATED_TSTMP", 
	"SQ_Shortcut_to_WM_SIZE_UOM___LOAD_TSTMP as in_LOAD_TSTMP")

# COMMAND ----------
# Processing node FIL_UNCHANGED_REC, type FILTER 
# COLUMN COUNT: 51

# for each involved DataFrame, append the dataframe name to each column
JNR_WM_SIZE_UOM_temp = JNR_WM_SIZE_UOM.toDF(*["JNR_WM_SIZE_UOM___" + col for col in JNR_WM_SIZE_UOM.columns])

FIL_UNCHANGED_REC = JNR_WM_SIZE_UOM_temp.selectExpr( 
	"JNR_WM_SIZE_UOM___LOCATION_ID as LOCATION_ID", 
	"JNR_WM_SIZE_UOM___SIZE_UOM_ID as SIZE_UOM_ID", 
	"JNR_WM_SIZE_UOM___TC_COMPANY_ID as TC_COMPANY_ID", 
	"JNR_WM_SIZE_UOM___SIZE_UOM as SIZE_UOM", 
	"JNR_WM_SIZE_UOM___DESCRIPTION as DESCRIPTION", 
	"JNR_WM_SIZE_UOM___CONSOLIDATION_CODE as CONSOLIDATION_CODE", 
	"JNR_WM_SIZE_UOM___DO_NOT_INHERIT_TO_ORDER as DO_NOT_INHERIT_TO_ORDER", 
	"JNR_WM_SIZE_UOM___SIZE_MAPPING as SIZE_MAPPING", 
	"JNR_WM_SIZE_UOM___STANDARD_UOM as STANDARD_UOM", 
	"JNR_WM_SIZE_UOM___STANDARD_UNITS as STANDARD_UNITS", 
	"JNR_WM_SIZE_UOM___SPLITTER_CONS_CODE as SPLITTER_CONS_CODE", 
	"JNR_WM_SIZE_UOM___APPLY_TO_VENDOR as APPLY_TO_VENDOR", 
	"JNR_WM_SIZE_UOM___MARK_FOR_DELETION as MARK_FOR_DELETION", 
	"JNR_WM_SIZE_UOM___DISCRETE as DISCRETE", 
	"JNR_WM_SIZE_UOM___ADJUSTMENT as ADJUSTMENT", 
	"JNR_WM_SIZE_UOM___ADJUSTMENT_SIZE_UOM_ID as ADJUSTMENT_SIZE_UOM_ID", 
	"JNR_WM_SIZE_UOM___HIBERNATE_VERSION as HIBERNATE_VERSION", 
	"JNR_WM_SIZE_UOM___AUDIT_CREATED_SOURCE as AUDIT_CREATED_SOURCE", 
	"JNR_WM_SIZE_UOM___AUDIT_CREATED_SOURCE_TYPE as AUDIT_CREATED_SOURCE_TYPE", 
	"JNR_WM_SIZE_UOM___AUDIT_CREATED_DTTM as AUDIT_CREATED_DTTM", 
	"JNR_WM_SIZE_UOM___AUDIT_LAST_UPDATED_SOURCE as AUDIT_LAST_UPDATED_SOURCE", 
	"JNR_WM_SIZE_UOM___AUDIT_LAST_UPDATED_SOURCE_TYPE as AUDIT_LAST_UPDATED_SOURCE_TYPE", 
	"JNR_WM_SIZE_UOM___AUDIT_LAST_UPDATED_DTTM as AUDIT_LAST_UPDATED_DTTM", 
	"JNR_WM_SIZE_UOM___CREATED_DTTM as CREATED_DTTM", 
	"JNR_WM_SIZE_UOM___LAST_UPDATED_DTTM as LAST_UPDATED_DTTM", 
	"JNR_WM_SIZE_UOM___in_LOCATION_ID as in_LOCATION_ID", 
	"JNR_WM_SIZE_UOM___WM_SIZE_UOM_ID as WM_SIZE_UOM_ID", 
	"JNR_WM_SIZE_UOM___WM_TC_COMPANY_ID as WM_TC_COMPANY_ID", 
	"JNR_WM_SIZE_UOM___WM_SIZE_UOM as WM_SIZE_UOM", 
	"JNR_WM_SIZE_UOM___WM_SIZE_UOM_DESC as WM_SIZE_UOM_DESC", 
	"JNR_WM_SIZE_UOM___WM_SIZE_MAPPING as WM_SIZE_MAPPING", 
	"JNR_WM_SIZE_UOM___WM_STANDARD_UOM_ID as WM_STANDARD_UOM_ID", 
	"JNR_WM_SIZE_UOM___WM_STANDARD_UNITS as WM_STANDARD_UNITS", 
	"JNR_WM_SIZE_UOM___WM_CONSOLIDATION_CD as WM_CONSOLIDATION_CD", 
	"JNR_WM_SIZE_UOM___WM_SPLITTER_CONS_CD as WM_SPLITTER_CONS_CD", 
	"JNR_WM_SIZE_UOM___DO_NOT_INHERIT_TO_ORDER_FLAG as DO_NOT_INHERIT_TO_ORDER_FLAG", 
	"JNR_WM_SIZE_UOM___APPLY_TO_VENDOR_FLAG as APPLY_TO_VENDOR_FLAG", 
	"JNR_WM_SIZE_UOM___DISCRETE_FLAG as DISCRETE_FLAG", 
	"JNR_WM_SIZE_UOM___WM_ADJUSTMENT_SIZE as WM_ADJUSTMENT_SIZE", 
	"JNR_WM_SIZE_UOM___WM_ADJUSTMENT_SIZE_UOM_ID as WM_ADJUSTMENT_SIZE_UOM_ID", 
	"JNR_WM_SIZE_UOM___WM_AUDIT_CREATED_SOURCE_TYPE as WM_AUDIT_CREATED_SOURCE_TYPE", 
	"JNR_WM_SIZE_UOM___WM_AUDIT_CREATED_SOURCE as WM_AUDIT_CREATED_SOURCE", 
	"JNR_WM_SIZE_UOM___WM_AUDIT_CREATED_TSTMP as WM_AUDIT_CREATED_TSTMP", 
	"JNR_WM_SIZE_UOM___WM_AUDIT_LAST_UPDATED_SOURCE_TYPE as WM_AUDIT_LAST_UPDATED_SOURCE_TYPE", 
	"JNR_WM_SIZE_UOM___WM_AUDIT_LAST_UPDATED_SOURCE as WM_AUDIT_LAST_UPDATED_SOURCE", 
	"JNR_WM_SIZE_UOM___WM_AUDIT_LAST_UPDATED_TSTMP as WM_AUDIT_LAST_UPDATED_TSTMP", 
	"JNR_WM_SIZE_UOM___WM_HIBERNATE_VERSION as WM_HIBERNATE_VERSION", 
	"JNR_WM_SIZE_UOM___MARK_FOR_DELETION_FLAG as MARK_FOR_DELETION_FLAG", 
	"JNR_WM_SIZE_UOM___WM_CREATED_TSTMP as WM_CREATED_TSTMP", 
	"JNR_WM_SIZE_UOM___WM_LAST_UPDATED_TSTMP as WM_LAST_UPDATED_TSTMP", 
	"JNR_WM_SIZE_UOM___in_LOAD_TSTMP as in_LOAD_TSTMP").filter(expr("WM_SIZE_UOM_ID IS NULL OR (NOT WM_SIZE_UOM_ID IS NULL AND (COALESCE(CREATED_DTTM, date'1900-01-01') != COALESCE(WM_CREATED_TSTMP, date'1900-01-01')) OR (COALESCE(LAST_UPDATED_DTTM, date'1900-01-01') != COALESCE(WM_LAST_UPDATED_TSTMP, date'1900-01-01')))")).withColumn("sys_row_id", monotonically_increasing_id())

# COMMAND ----------
# Processing node EXP_UPD_VALIDATOR, type EXPRESSION 
# COLUMN COUNT: 54

# for each involved DataFrame, append the dataframe name to each column
FIL_UNCHANGED_REC_temp = FIL_UNCHANGED_REC.toDF(*["FIL_UNCHANGED_REC___" + col for col in FIL_UNCHANGED_REC.columns])

EXP_UPD_VALIDATOR = FIL_UNCHANGED_REC_temp.selectExpr( 
	"FIL_UNCHANGED_REC___sys_row_id as sys_row_id", 
	"FIL_UNCHANGED_REC___LOCATION_ID as LOCATION_ID", 
	"FIL_UNCHANGED_REC___SIZE_UOM_ID as SIZE_UOM_ID", 
	"FIL_UNCHANGED_REC___TC_COMPANY_ID as TC_COMPANY_ID", 
	"FIL_UNCHANGED_REC___SIZE_UOM as SIZE_UOM", 
	"FIL_UNCHANGED_REC___DESCRIPTION as DESCRIPTION", 
	"FIL_UNCHANGED_REC___CONSOLIDATION_CODE as CONSOLIDATION_CODE", 
	"FIL_UNCHANGED_REC___DO_NOT_INHERIT_TO_ORDER as DO_NOT_INHERIT_TO_ORDER", 
	"FIL_UNCHANGED_REC___SIZE_MAPPING as SIZE_MAPPING", 
	"FIL_UNCHANGED_REC___STANDARD_UOM as STANDARD_UOM", 
	"FIL_UNCHANGED_REC___STANDARD_UNITS as STANDARD_UNITS", 
	"FIL_UNCHANGED_REC___SPLITTER_CONS_CODE as SPLITTER_CONS_CODE", 
	"FIL_UNCHANGED_REC___APPLY_TO_VENDOR as APPLY_TO_VENDOR", 
	"FIL_UNCHANGED_REC___MARK_FOR_DELETION as MARK_FOR_DELETION", 
	"FIL_UNCHANGED_REC___DISCRETE as DISCRETE", 
	"FIL_UNCHANGED_REC___ADJUSTMENT as ADJUSTMENT", 
	"FIL_UNCHANGED_REC___ADJUSTMENT_SIZE_UOM_ID as ADJUSTMENT_SIZE_UOM_ID", 
	"FIL_UNCHANGED_REC___HIBERNATE_VERSION as HIBERNATE_VERSION", 
	"FIL_UNCHANGED_REC___AUDIT_CREATED_SOURCE as AUDIT_CREATED_SOURCE", 
	"FIL_UNCHANGED_REC___AUDIT_CREATED_SOURCE_TYPE as AUDIT_CREATED_SOURCE_TYPE", 
	"FIL_UNCHANGED_REC___AUDIT_CREATED_DTTM as AUDIT_CREATED_DTTM", 
	"FIL_UNCHANGED_REC___AUDIT_LAST_UPDATED_SOURCE as AUDIT_LAST_UPDATED_SOURCE", 
	"FIL_UNCHANGED_REC___AUDIT_LAST_UPDATED_SOURCE_TYPE as AUDIT_LAST_UPDATED_SOURCE_TYPE", 
	"FIL_UNCHANGED_REC___AUDIT_LAST_UPDATED_DTTM as AUDIT_LAST_UPDATED_DTTM", 
	"FIL_UNCHANGED_REC___CREATED_DTTM as CREATED_DTTM", 
	"FIL_UNCHANGED_REC___LAST_UPDATED_DTTM as LAST_UPDATED_DTTM", 
	"FIL_UNCHANGED_REC___in_LOCATION_ID as in_LOCATION_ID", 
	"FIL_UNCHANGED_REC___WM_SIZE_UOM_ID as WM_SIZE_UOM_ID", 
	"FIL_UNCHANGED_REC___WM_TC_COMPANY_ID as WM_TC_COMPANY_ID", 
	"FIL_UNCHANGED_REC___WM_SIZE_UOM as WM_SIZE_UOM", 
	"FIL_UNCHANGED_REC___WM_SIZE_UOM_DESC as WM_SIZE_UOM_DESC", 
	"FIL_UNCHANGED_REC___WM_SIZE_MAPPING as WM_SIZE_MAPPING", 
	"FIL_UNCHANGED_REC___WM_STANDARD_UOM_ID as WM_STANDARD_UOM_ID", 
	"FIL_UNCHANGED_REC___WM_STANDARD_UNITS as WM_STANDARD_UNITS", 
	"FIL_UNCHANGED_REC___WM_CONSOLIDATION_CD as WM_CONSOLIDATION_CD", 
	"FIL_UNCHANGED_REC___WM_SPLITTER_CONS_CD as WM_SPLITTER_CONS_CD", 
	"FIL_UNCHANGED_REC___DO_NOT_INHERIT_TO_ORDER_FLAG as DO_NOT_INHERIT_TO_ORDER_FLAG", 
	"FIL_UNCHANGED_REC___APPLY_TO_VENDOR_FLAG as APPLY_TO_VENDOR_FLAG", 
	"FIL_UNCHANGED_REC___DISCRETE_FLAG as DISCRETE_FLAG", 
	"FIL_UNCHANGED_REC___WM_ADJUSTMENT_SIZE as WM_ADJUSTMENT_SIZE", 
	"FIL_UNCHANGED_REC___WM_ADJUSTMENT_SIZE_UOM_ID as WM_ADJUSTMENT_SIZE_UOM_ID", 
	"FIL_UNCHANGED_REC___WM_AUDIT_CREATED_SOURCE_TYPE as WM_AUDIT_CREATED_SOURCE_TYPE", 
	"FIL_UNCHANGED_REC___WM_AUDIT_CREATED_SOURCE as WM_AUDIT_CREATED_SOURCE", 
	"FIL_UNCHANGED_REC___WM_AUDIT_CREATED_TSTMP as WM_AUDIT_CREATED_TSTMP", 
	"FIL_UNCHANGED_REC___WM_AUDIT_LAST_UPDATED_SOURCE_TYPE as WM_AUDIT_LAST_UPDATED_SOURCE_TYPE", 
	"FIL_UNCHANGED_REC___WM_AUDIT_LAST_UPDATED_SOURCE as WM_AUDIT_LAST_UPDATED_SOURCE", 
	"FIL_UNCHANGED_REC___WM_AUDIT_LAST_UPDATED_TSTMP as WM_AUDIT_LAST_UPDATED_TSTMP", 
	"FIL_UNCHANGED_REC___WM_HIBERNATE_VERSION as WM_HIBERNATE_VERSION", 
	"FIL_UNCHANGED_REC___MARK_FOR_DELETION_FLAG as MARK_FOR_DELETION_FLAG", 
	"FIL_UNCHANGED_REC___WM_CREATED_TSTMP as WM_CREATED_TSTMP", 
	"FIL_UNCHANGED_REC___WM_LAST_UPDATED_TSTMP as WM_LAST_UPDATED_TSTMP", 
	"FIL_UNCHANGED_REC___in_LOAD_TSTMP as in_LOAD_TSTMP", 
	"CURRENT_TIMESTAMP as UPDATE_TSTMP", 
	"IF (FIL_UNCHANGED_REC___in_LOAD_TSTMP IS NULL, CURRENT_TIMESTAMP, FIL_UNCHANGED_REC___in_LOAD_TSTMP) as LOAD_TSTMP", 
	"IF (FIL_UNCHANGED_REC___WM_SIZE_UOM_ID IS NULL, 1, 2) as o_UPD_VALIDATOR" 
)

# COMMAND ----------
# Processing node UPD_INS_UPD, type UPDATE_STRATEGY 
# COLUMN COUNT: 28

# for each involved DataFrame, append the dataframe name to each column
EXP_UPD_VALIDATOR_temp = EXP_UPD_VALIDATOR.toDF(*["EXP_UPD_VALIDATOR___" + col for col in EXP_UPD_VALIDATOR.columns])

UPD_INS_UPD = EXP_UPD_VALIDATOR_temp.selectExpr( 
	"EXP_UPD_VALIDATOR___LOCATION_ID as LOCATION_ID", 
	"EXP_UPD_VALIDATOR___SIZE_UOM_ID as SIZE_UOM_ID", 
	"EXP_UPD_VALIDATOR___TC_COMPANY_ID as TC_COMPANY_ID", 
	"EXP_UPD_VALIDATOR___SIZE_UOM as SIZE_UOM", 
	"EXP_UPD_VALIDATOR___DESCRIPTION as DESCRIPTION", 
	"EXP_UPD_VALIDATOR___SIZE_MAPPING as SIZE_MAPPING", 
	"EXP_UPD_VALIDATOR___STANDARD_UOM as STANDARD_UOM", 
	"EXP_UPD_VALIDATOR___STANDARD_UNITS as STANDARD_UNITS", 
	"EXP_UPD_VALIDATOR___CONSOLIDATION_CODE as CONSOLIDATION_CODE", 
	"EXP_UPD_VALIDATOR___SPLITTER_CONS_CODE as SPLITTER_CONS_CODE", 
	"EXP_UPD_VALIDATOR___DO_NOT_INHERIT_TO_ORDER as DO_NOT_INHERIT_TO_ORDER", 
	"EXP_UPD_VALIDATOR___APPLY_TO_VENDOR as APPLY_TO_VENDOR", 
	"EXP_UPD_VALIDATOR___DISCRETE as DISCRETE", 
	"EXP_UPD_VALIDATOR___ADJUSTMENT as ADJUSTMENT", 
	"EXP_UPD_VALIDATOR___ADJUSTMENT_SIZE_UOM_ID as ADJUSTMENT_SIZE_UOM_ID", 
	"EXP_UPD_VALIDATOR___AUDIT_CREATED_SOURCE_TYPE as AUDIT_CREATED_SOURCE_TYPE", 
	"EXP_UPD_VALIDATOR___AUDIT_CREATED_SOURCE as AUDIT_CREATED_SOURCE", 
	"EXP_UPD_VALIDATOR___AUDIT_CREATED_DTTM as AUDIT_CREATED_DTTM", 
	"EXP_UPD_VALIDATOR___AUDIT_LAST_UPDATED_SOURCE_TYPE as AUDIT_LAST_UPDATED_SOURCE_TYPE", 
	"EXP_UPD_VALIDATOR___AUDIT_LAST_UPDATED_SOURCE as AUDIT_LAST_UPDATED_SOURCE", 
	"EXP_UPD_VALIDATOR___AUDIT_LAST_UPDATED_DTTM as AUDIT_LAST_UPDATED_DTTM", 
	"EXP_UPD_VALIDATOR___HIBERNATE_VERSION as HIBERNATE_VERSION", 
	"EXP_UPD_VALIDATOR___MARK_FOR_DELETION as MARK_FOR_DELETION", 
	"EXP_UPD_VALIDATOR___CREATED_DTTM as CREATED_DTTM", 
	"EXP_UPD_VALIDATOR___LAST_UPDATED_DTTM as LAST_UPDATED_DTTM", 
	"EXP_UPD_VALIDATOR___UPDATE_TSTMP as UPDATE_TSTMP", 
	"EXP_UPD_VALIDATOR___LOAD_TSTMP as LOAD_TSTMP", 
	"EXP_UPD_VALIDATOR___o_UPD_VALIDATOR as o_UPD_VALIDATOR")\
	.withColumn('pyspark_data_action', when(EXP_UPD_VALIDATOR.o_UPD_VALIDATOR ==(lit(1)) , lit(0)).when(EXP_UPD_VALIDATOR.o_UPD_VALIDATOR ==(lit(2)) , lit(1)))

# COMMAND ----------
# Processing node Shortcut_to_WM_SIZE_UOM1, type TARGET 
# COLUMN COUNT: 27

try:
  primary_key = """source.LOCATION_ID = target.LOCATION_ID AND source.WM_SIZE_UOM_ID = target.WM_SIZE_UOM_ID"""
  refined_perf_table = "WM_SIZE_UOM"
  executeMerge(UPD_INS_UPD, refined_perf_table, primary_key)
  logger.info(f"Merge with {refined_perf_table} completed]")
  logPrevRunDt("WM_SIZE_UOM", "WM_SIZE_UOM", "Completed", "N/A", f"{raw}.log_run_details")
except Exception as e:
  logPrevRunDt("WM_SIZE_UOM", "WM_SIZE_UOM","Failed",str(e), f"{raw}.log_run_details", )
  raise e
	