#Code converted on 2023-06-20 17:40:21
import os
import argparse
from pyspark.sql import *
from pyspark.sql.functions import *
from pyspark.sql.window import Window
from pyspark.sql.types import *
from datetime import datetime
from pyspark.dbutils import DBUtils
from Datalake.utils.genericUtilities import *
from Datalake.utils.configs import *
from Datalake.utils.mergeUtils import *
from Datalake.utils.logger import *

# COMMAND ----------

parser = argparse.ArgumentParser()
spark = SparkSession.getActiveSession()
dbutils = DBUtils(spark)

parser.add_argument('env', type=str, help='Env Variable')
args = parser.parse_args()
env = args.env

if env is None or env == '':
    raise ValueError('env is not set')

refine = getEnvPrefix(env) + 'refine'
raw = getEnvPrefix(env) + 'raw'
legacy = getEnvPrefix(env) + 'legacy'

# Set global variables
starttime = datetime.now() #start timestamp of the script
raw_perf_table = f"{raw}.WM_E_MSRMNT_RULE_CONDITION_PRE"
refined_perf_table = f"{refine}.WM_E_MSRMNT_RULE_CONDITION"
site_profile_table = f"{legacy}.SITE_PROFILE"

Prev_Run_Dt=genPrevRunDt(refined_perf_table, refine,raw)
Del_Logic=args.Del_Logic

# COMMAND ----------
# Processing node SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION, type SOURCE 
# COLUMN COUNT: 24

SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION = spark.sql(f"""SELECT
LOCATION_ID,
WM_MSRMNT_ID,
WM_RULE_NBR,
RULE_SEQ_NBR,
WM_MSRMNT_RULE_CONDITION_DESC,
OPEN_PARAN,
AND_OR,
FIELD_NAME,
OPERATOR,
RULE_COMPARE_VALUE,
CLOSE_PARAN,
FREE_FORM_TEXT,
MISC,
MISC_TXT_1,
MISC_TXT_2,
MISC_NUM_1,
MISC_NUM_2,
WM_USER_ID,
WM_VERSION_ID,
WM_CREATE_TSTMP,
WM_MOD_TSTMP,
DELETE_FLAG,
UPDATE_TSTMP,
LOAD_TSTMP
FROM {refined_perf_table}
WHERE {Del_Logic} 1=0 and 
DELETE_FLAG = 0""").withColumn("sys_row_id", monotonically_increasing_id()).withColumn("sys_row_id", monotonically_increasing_id())

# COMMAND ----------
# Processing node SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION_PRE, type SOURCE 
# COLUMN COUNT: 22

SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION_PRE = spark.sql(f"""SELECT
DC_NBR,
MSRMNT_ID,
RULE_NBR,
RULE_SEQ_NBR,
OPEN_PARAN,
AND_OR,
FIELD_NAME,
OPERATOR,
RULE_COMPARE_VALUE,
CLOSE_PARAN,
FREE_FORM_TEXT,
DESCRIPTION,
MISC,
CREATE_DATE_TIME,
MOD_DATE_TIME,
USER_ID,
MISC_TXT_1,
MISC_TXT_2,
MISC_NUM_1,
MISC_NUM_2,
VERSION_ID,
LOAD_TSTMP
FROM {raw_perf_table}""").withColumn("sys_row_id", monotonically_increasing_id())

# COMMAND ----------
# Processing node EXP_INT_CONV, type EXPRESSION 
# COLUMN COUNT: 22

# for each involved DataFrame, append the dataframe name to each column
SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION_PRE_temp = SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION_PRE.toDF(*["SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION_PRE___" + col for col in SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION_PRE.columns])

EXP_INT_CONV = SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION_PRE_temp.selectExpr( \
	"SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION_PRE___sys_row_id as sys_row_id", \
	"cast(SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION_PRE___DC_NBR as int) as o_DC_NBR", \
	"SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION_PRE___MSRMNT_ID as MSRMNT_ID", \
	"SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION_PRE___RULE_NBR as RULE_NBR", \
	"SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION_PRE___RULE_SEQ_NBR as RULE_SEQ_NBR", \
	"SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION_PRE___OPEN_PARAN as OPEN_PARAN", \
	"SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION_PRE___AND_OR as AND_OR", \
	"SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION_PRE___FIELD_NAME as FIELD_NAME", \
	"SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION_PRE___OPERATOR as OPERATOR", \
	"SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION_PRE___RULE_COMPARE_VALUE as RULE_COMPARE_VALUE", \
	"SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION_PRE___CLOSE_PARAN as CLOSE_PARAN", \
	"SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION_PRE___FREE_FORM_TEXT as FREE_FORM_TEXT", \
	"SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION_PRE___DESCRIPTION as DESCRIPTION", \
	"SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION_PRE___MISC as MISC", \
	"SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION_PRE___CREATE_DATE_TIME as CREATE_DATE_TIME", \
	"SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION_PRE___MOD_DATE_TIME as MOD_DATE_TIME", \
	"SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION_PRE___USER_ID as USER_ID", \
	"SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION_PRE___MISC_TXT_1 as MISC_TXT_1", \
	"SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION_PRE___MISC_TXT_2 as MISC_TXT_2", \
	"SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION_PRE___MISC_NUM_1 as MISC_NUM_1", \
	"SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION_PRE___MISC_NUM_2 as MISC_NUM_2", \
	"SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION_PRE___VERSION_ID as VERSION_ID", \
	"SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION_PRE___LOAD_TSTMP as LOAD_TSTMP" \
)

# COMMAND ----------
# Processing node SQ_Shortcut_to_SITE_PROFILE, type SOURCE 
# COLUMN COUNT: 2

SQ_Shortcut_to_SITE_PROFILE = spark.sql(f"""SELECT LOCATION_ID, STORE_NBR FROM {site_profile_table}""").withColumn("sys_row_id", monotonically_increasing_id())

# COMMAND ----------
# Processing node JNR_SITE_PROFILE, type JOINER 
# COLUMN COUNT: 24

JNR_SITE_PROFILE = SQ_Shortcut_to_SITE_PROFILE.join(EXP_INT_CONV,[SQ_Shortcut_to_SITE_PROFILE.STORE_NBR == EXP_INT_CONV.o_DC_NBR],'inner')

# COMMAND ----------
# Processing node JNR_WM_Msrmnt_Rule_Condition, type JOINER . Note: using additional SELECT to rename incoming columns
# COLUMN COUNT: 45

# for each involved DataFrame, append the dataframe name to each column
SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION_temp = SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION.toDF(*["SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION___" + col for col in SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION.columns])
JNR_SITE_PROFILE_temp = JNR_SITE_PROFILE.toDF(*["JNR_SITE_PROFILE___" + col for col in JNR_SITE_PROFILE.columns])

JNR_WM_Msrmnt_Rule_Condition = SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION_temp.join(JNR_SITE_PROFILE_temp,[SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION_temp.SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION___LOCATION_ID == JNR_SITE_PROFILE_temp.JNR_SITE_PROFILE___LOCATION_ID, SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION_temp.SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION___WM_MSRMNT_ID == JNR_SITE_PROFILE_temp.JNR_SITE_PROFILE___MSRMNT_ID, SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION_temp.SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION___WM_RULE_NBR == JNR_SITE_PROFILE_temp.JNR_SITE_PROFILE___RULE_NBR, SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION_temp.SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION___RULE_SEQ_NBR == JNR_SITE_PROFILE_temp.JNR_SITE_PROFILE___RULE_SEQ_NBR],'fullouter').selectExpr( \
	"JNR_SITE_PROFILE___MSRMNT_ID as MSRMNT_ID", \
	"JNR_SITE_PROFILE___RULE_NBR as RULE_NBR", \
	"JNR_SITE_PROFILE___RULE_SEQ_NBR as RULE_SEQ_NBR", \
	"JNR_SITE_PROFILE___OPEN_PARAN as OPEN_PARAN", \
	"JNR_SITE_PROFILE___AND_OR as AND_OR", \
	"JNR_SITE_PROFILE___FIELD_NAME as FIELD_NAME", \
	"JNR_SITE_PROFILE___OPERATOR as OPERATOR", \
	"JNR_SITE_PROFILE___RULE_COMPARE_VALUE as RULE_COMPARE_VALUE", \
	"JNR_SITE_PROFILE___CLOSE_PARAN as CLOSE_PARAN", \
	"JNR_SITE_PROFILE___FREE_FORM_TEXT as FREE_FORM_TEXT", \
	"JNR_SITE_PROFILE___DESCRIPTION as DESCRIPTION", \
	"JNR_SITE_PROFILE___MISC as MISC", \
	"JNR_SITE_PROFILE___CREATE_DATE_TIME as CREATE_DATE_TIME", \
	"JNR_SITE_PROFILE___MOD_DATE_TIME as MOD_DATE_TIME", \
	"JNR_SITE_PROFILE___USER_ID as USER_ID", \
	"JNR_SITE_PROFILE___MISC_TXT_1 as MISC_TXT_1", \
	"JNR_SITE_PROFILE___MISC_TXT_2 as MISC_TXT_2", \
	"JNR_SITE_PROFILE___MISC_NUM_1 as MISC_NUM_1", \
	"JNR_SITE_PROFILE___MISC_NUM_2 as MISC_NUM_2", \
	"JNR_SITE_PROFILE___VERSION_ID as VERSION_ID", \
	"JNR_SITE_PROFILE___LOCATION_ID as LOCATION_ID", \
	"SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION___LOCATION_ID as in_LOCATION_ID", \
	"SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION___WM_MSRMNT_ID as WM_MSRMNT_ID", \
	"SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION___WM_RULE_NBR as WM_RULE_NBR", \
	"SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION___RULE_SEQ_NBR as in_RULE_SEQ_NBR", \
	"SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION___WM_MSRMNT_RULE_CONDITION_DESC as WM_MSRMNT_RULE_CONDITION_DESC", \
	"SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION___OPEN_PARAN as in_OPEN_PARAN", \
	"SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION___AND_OR as in_AND_OR", \
	"SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION___FIELD_NAME as in_FIELD_NAME", \
	"SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION___OPERATOR as in_OPERATOR", \
	"SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION___RULE_COMPARE_VALUE as in_RULE_COMPARE_VALUE", \
	"SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION___CLOSE_PARAN as in_CLOSE_PARAN", \
	"SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION___FREE_FORM_TEXT as in_FREE_FORM_TEXT", \
	"SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION___MISC as in_MISC", \
	"SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION___MISC_TXT_1 as in_MISC_TXT_1", \
	"SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION___MISC_TXT_2 as in_MISC_TXT_2", \
	"SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION___MISC_NUM_1 as in_MISC_NUM_1", \
	"SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION___MISC_NUM_2 as in_MISC_NUM_2", \
	"SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION___WM_USER_ID as WM_USER_ID", \
	"SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION___WM_VERSION_ID as WM_VERSION_ID", \
	"SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION___WM_CREATE_TSTMP as WM_CREATE_TSTMP", \
	"SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION___WM_MOD_TSTMP as WM_MOD_TSTMP", \
	"SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION___DELETE_FLAG as in_DELETE_FLAG", \
	"SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION___UPDATE_TSTMP as in_UPDATE_TSTMP", \
	"SQ_Shortcut_to_WM_E_MSRMNT_RULE_CONDITION___LOAD_TSTMP as in_LOAD_TSTMP")

# COMMAND ----------
# Processing node FIL_UNCHANGED_RECORDS, type FILTER 
# COLUMN COUNT: 45

# for each involved DataFrame, append the dataframe name to each column
JNR_WM_Msrmnt_Rule_Condition_temp = JNR_WM_Msrmnt_Rule_Condition.toDF(*["JNR_WM_Msrmnt_Rule_Condition___" + col for col in JNR_WM_Msrmnt_Rule_Condition.columns])

FIL_UNCHANGED_RECORDS = JNR_WM_Msrmnt_Rule_Condition_temp.selectExpr( \
	"JNR_WM_Msrmnt_Rule_Condition___MSRMNT_ID as MSRMNT_ID", \
	"JNR_WM_Msrmnt_Rule_Condition___RULE_NBR as RULE_NBR", \
	"JNR_WM_Msrmnt_Rule_Condition___RULE_SEQ_NBR as RULE_SEQ_NBR", \
	"JNR_WM_Msrmnt_Rule_Condition___OPEN_PARAN as OPEN_PARAN", \
	"JNR_WM_Msrmnt_Rule_Condition___AND_OR as AND_OR", \
	"JNR_WM_Msrmnt_Rule_Condition___FIELD_NAME as FIELD_NAME", \
	"JNR_WM_Msrmnt_Rule_Condition___OPERATOR as OPERATOR", \
	"JNR_WM_Msrmnt_Rule_Condition___RULE_COMPARE_VALUE as RULE_COMPARE_VALUE", \
	"JNR_WM_Msrmnt_Rule_Condition___CLOSE_PARAN as CLOSE_PARAN", \
	"JNR_WM_Msrmnt_Rule_Condition___FREE_FORM_TEXT as FREE_FORM_TEXT", \
	"JNR_WM_Msrmnt_Rule_Condition___DESCRIPTION as DESCRIPTION", \
	"JNR_WM_Msrmnt_Rule_Condition___MISC as MISC", \
	"JNR_WM_Msrmnt_Rule_Condition___CREATE_DATE_TIME as CREATE_DATE_TIME", \
	"JNR_WM_Msrmnt_Rule_Condition___MOD_DATE_TIME as MOD_DATE_TIME", \
	"JNR_WM_Msrmnt_Rule_Condition___USER_ID as USER_ID", \
	"JNR_WM_Msrmnt_Rule_Condition___MISC_TXT_1 as MISC_TXT_1", \
	"JNR_WM_Msrmnt_Rule_Condition___MISC_TXT_2 as MISC_TXT_2", \
	"JNR_WM_Msrmnt_Rule_Condition___MISC_NUM_1 as MISC_NUM_1", \
	"JNR_WM_Msrmnt_Rule_Condition___MISC_NUM_2 as MISC_NUM_2", \
	"JNR_WM_Msrmnt_Rule_Condition___VERSION_ID as VERSION_ID", \
	"JNR_WM_Msrmnt_Rule_Condition___LOCATION_ID as LOCATION_ID", \
	"JNR_WM_Msrmnt_Rule_Condition___in_LOCATION_ID as in_LOCATION_ID", \
	"JNR_WM_Msrmnt_Rule_Condition___WM_MSRMNT_ID as WM_MSRMNT_ID", \
	"JNR_WM_Msrmnt_Rule_Condition___WM_RULE_NBR as WM_RULE_NBR", \
	"JNR_WM_Msrmnt_Rule_Condition___in_RULE_SEQ_NBR as in_RULE_SEQ_NBR", \
	"JNR_WM_Msrmnt_Rule_Condition___WM_MSRMNT_RULE_CONDITION_DESC as WM_MSRMNT_RULE_CONDITION_DESC", \
	"JNR_WM_Msrmnt_Rule_Condition___in_OPEN_PARAN as in_OPEN_PARAN", \
	"JNR_WM_Msrmnt_Rule_Condition___in_AND_OR as in_AND_OR", \
	"JNR_WM_Msrmnt_Rule_Condition___in_FIELD_NAME as in_FIELD_NAME", \
	"JNR_WM_Msrmnt_Rule_Condition___in_OPERATOR as in_OPERATOR", \
	"JNR_WM_Msrmnt_Rule_Condition___in_RULE_COMPARE_VALUE as in_RULE_COMPARE_VALUE", \
	"JNR_WM_Msrmnt_Rule_Condition___in_CLOSE_PARAN as in_CLOSE_PARAN", \
	"JNR_WM_Msrmnt_Rule_Condition___in_FREE_FORM_TEXT as in_FREE_FORM_TEXT", \
	"JNR_WM_Msrmnt_Rule_Condition___in_MISC as in_MISC", \
	"JNR_WM_Msrmnt_Rule_Condition___in_MISC_TXT_1 as in_MISC_TXT_1", \
	"JNR_WM_Msrmnt_Rule_Condition___in_MISC_TXT_2 as in_MISC_TXT_2", \
	"JNR_WM_Msrmnt_Rule_Condition___in_MISC_NUM_1 as in_MISC_NUM_1", \
	"JNR_WM_Msrmnt_Rule_Condition___in_MISC_NUM_2 as in_MISC_NUM_2", \
	"JNR_WM_Msrmnt_Rule_Condition___WM_USER_ID as WM_USER_ID", \
	"JNR_WM_Msrmnt_Rule_Condition___WM_VERSION_ID as WM_VERSION_ID", \
	"JNR_WM_Msrmnt_Rule_Condition___WM_CREATE_TSTMP as WM_CREATE_TSTMP", \
	"JNR_WM_Msrmnt_Rule_Condition___WM_MOD_TSTMP as WM_MOD_TSTMP", \
	"JNR_WM_Msrmnt_Rule_Condition___in_DELETE_FLAG as in_DELETE_FLAG", \
	"JNR_WM_Msrmnt_Rule_Condition___in_UPDATE_TSTMP as in_UPDATE_TSTMP", \
	"JNR_WM_Msrmnt_Rule_Condition___in_LOAD_TSTMP as in_LOAD_TSTMP") \
    .filter("MSRMNT_ID is Null OR WM_MSRMNT_ID is Null OR ( WM_MSRMNT_ID is not Null AND \
     ( COALESCE(CREATE_DATE_TIME, date'1900-01-01') != COALESCE(WM_CREATE_TSTMP, date'1900-01-01') \
             OR COALESCE(MOD_DATE_TIME, date'1900-01-01') != COALESCE(WM_MOD_TSTMP, date'1900-01-01')))").withColumn("sys_row_id", monotonically_increasing_id())



# COMMAND ----------
# Processing node EXP_UPD_VALIDATOR, type EXPRESSION 
# COLUMN COUNT: 49

# for each involved DataFrame, append the dataframe name to each column
FIL_UNCHANGED_RECORDS_temp = FIL_UNCHANGED_RECORDS.toDF(*["FIL_UNCHANGED_RECORDS___" + col for col in FIL_UNCHANGED_RECORDS.columns]) \
.withColumn("v_CREATE_DATE_TIME", expr("""IF(CREATE_DATE_TIME IS NULL, date'1900-01-01', CREATE_DATE_TIME)""")) \
	.withColumn("v_MOD_DATE_TIME", expr("""IF(MOD_DATE_TIME IS NULL, date'1900-01-01', MOD_DATE_TIME)""")) \
	.withColumn("v_WM_CREATE_TSTMP", expr("""IF(WM_CREATE_TSTMP IS NULL, date'1900-01-01', WM_CREATE_TSTMP)""")) \
	.withColumn("v_WM_MOD_TSTMP", expr("""IF(WM_MOD_TSTMP IS NULL, date'1900-01-01', WM_MOD_TSTMP)"""))

EXP_UPD_VALIDATOR = FIL_UNCHANGED_RECORDS_temp.selectExpr( \
	"FIL_UNCHANGED_RECORDS___sys_row_id as sys_row_id", \
	"FIL_UNCHANGED_RECORDS___MSRMNT_ID as MSRMNT_ID", \
	"FIL_UNCHANGED_RECORDS___RULE_NBR as RULE_NBR", \
	"FIL_UNCHANGED_RECORDS___RULE_SEQ_NBR as RULE_SEQ_NBR", \
	"FIL_UNCHANGED_RECORDS___OPEN_PARAN as OPEN_PARAN", \
	"FIL_UNCHANGED_RECORDS___AND_OR as AND_OR", \
	"FIL_UNCHANGED_RECORDS___FIELD_NAME as FIELD_NAME", \
	"FIL_UNCHANGED_RECORDS___OPERATOR as OPERATOR", \
	"FIL_UNCHANGED_RECORDS___RULE_COMPARE_VALUE as RULE_COMPARE_VALUE", \
	"FIL_UNCHANGED_RECORDS___CLOSE_PARAN as CLOSE_PARAN", \
	"FIL_UNCHANGED_RECORDS___FREE_FORM_TEXT as FREE_FORM_TEXT", \
	"FIL_UNCHANGED_RECORDS___DESCRIPTION as DESCRIPTION", \
	"FIL_UNCHANGED_RECORDS___MISC as MISC", \
	"FIL_UNCHANGED_RECORDS___CREATE_DATE_TIME as CREATE_DATE_TIME", \
	"FIL_UNCHANGED_RECORDS___MOD_DATE_TIME as MOD_DATE_TIME", \
	"FIL_UNCHANGED_RECORDS___USER_ID as USER_ID", \
	"FIL_UNCHANGED_RECORDS___MISC_TXT_1 as MISC_TXT_1", \
	"FIL_UNCHANGED_RECORDS___MISC_TXT_2 as MISC_TXT_2", \
	"FIL_UNCHANGED_RECORDS___MISC_NUM_1 as MISC_NUM_1", \
	"FIL_UNCHANGED_RECORDS___MISC_NUM_2 as MISC_NUM_2", \
	"FIL_UNCHANGED_RECORDS___VERSION_ID as VERSION_ID", \
	"FIL_UNCHANGED_RECORDS___LOCATION_ID as LOCATION_ID", \
	"FIL_UNCHANGED_RECORDS___in_LOCATION_ID as in_LOCATION_ID", \
	"FIL_UNCHANGED_RECORDS___WM_MSRMNT_ID as WM_MSRMNT_ID", \
	"FIL_UNCHANGED_RECORDS___WM_RULE_NBR as WM_RULE_NBR", \
	"FIL_UNCHANGED_RECORDS___in_RULE_SEQ_NBR as in_RULE_SEQ_NBR", \
	"FIL_UNCHANGED_RECORDS___WM_MSRMNT_RULE_CONDITION_DESC as WM_MSRMNT_RULE_CONDITION_DESC", \
	"FIL_UNCHANGED_RECORDS___in_OPEN_PARAN as in_OPEN_PARAN", \
	"FIL_UNCHANGED_RECORDS___in_AND_OR as in_AND_OR", \
	"FIL_UNCHANGED_RECORDS___in_FIELD_NAME as in_FIELD_NAME", \
	"FIL_UNCHANGED_RECORDS___in_OPERATOR as in_OPERATOR", \
	"FIL_UNCHANGED_RECORDS___in_RULE_COMPARE_VALUE as in_RULE_COMPARE_VALUE", \
	"FIL_UNCHANGED_RECORDS___in_CLOSE_PARAN as in_CLOSE_PARAN", \
	"FIL_UNCHANGED_RECORDS___in_FREE_FORM_TEXT as in_FREE_FORM_TEXT", \
	"FIL_UNCHANGED_RECORDS___in_MISC as in_MISC", \
	"FIL_UNCHANGED_RECORDS___in_MISC_TXT_1 as in_MISC_TXT_1", \
	"FIL_UNCHANGED_RECORDS___in_MISC_TXT_2 as in_MISC_TXT_2", \
	"FIL_UNCHANGED_RECORDS___in_MISC_NUM_1 as in_MISC_NUM_1", \
	"FIL_UNCHANGED_RECORDS___in_MISC_NUM_2 as in_MISC_NUM_2", \
	"FIL_UNCHANGED_RECORDS___WM_USER_ID as WM_USER_ID", \
	"FIL_UNCHANGED_RECORDS___WM_VERSION_ID as WM_VERSION_ID", \
	"FIL_UNCHANGED_RECORDS___WM_CREATE_TSTMP as WM_CREATE_TSTMP", \
	"FIL_UNCHANGED_RECORDS___WM_MOD_TSTMP as WM_MOD_TSTMP", \
	"FIL_UNCHANGED_RECORDS___in_DELETE_FLAG as in_DELETE_FLAG", \
	"FIL_UNCHANGED_RECORDS___in_UPDATE_TSTMP as in_UPDATE_TSTMP", \
	"FIL_UNCHANGED_RECORDS___in_LOAD_TSTMP as in_LOAD_TSTMP", \
	"IF(FIL_UNCHANGED_RECORDS___MSRMNT_ID IS NULL AND FIL_UNCHANGED_RECORDS___WM_MSRMNT_ID IS NOT NULL, 1, 0) as DELETE_FLAG", \
	"CURRENT_TIMESTAMP as UPDATE_TSTMP", \
	"IF(FIL_UNCHANGED_RECORDS___in_LOAD_TSTMP IS NULL, CURRENT_TIMESTAMP, FIL_UNCHANGED_RECORDS___in_LOAD_TSTMP) as LOAD_TSTMP", \
	"IF(FIL_UNCHANGED_RECORDS___MSRMNT_ID IS NOT NULL AND FIL_UNCHANGED_RECORDS___WM_MSRMNT_ID IS NULL, 'INSERT', IF(FIL_UNCHANGED_RECORDS___MSRMNT_ID IS NULL AND FIL_UNCHANGED_RECORDS___WM_MSRMNT_ID IS NOT NULL AND ( FIL_UNCHANGED_RECORDS___v_WM_CREATE_TSTMP >= DATE_ADD(- 14, {Prev_Run_Dt}) OR FIL_UNCHANGED_RECORDS___v_WM_MOD_TSTMP >= DATE_ADD(- 14, {Prev_Run_Dt}) ), 'DELETE', IF(FIL_UNCHANGED_RECORDS___MSRMNT_ID IS NOT NULL AND FIL_UNCHANGED_RECORDS___WM_MSRMNT_ID IS NOT NULL AND ( FIL_UNCHANGED_RECORDS___v_WM_CREATE_TSTMP <> FIL_UNCHANGED_RECORDS___v_CREATE_DATE_TIME OR FIL_UNCHANGED_RECORDS___v_WM_MOD_TSTMP <> FIL_UNCHANGED_RECORDS___v_MOD_DATE_TIME ), 'UPDATE', NULL))) as o_UPDATE_VALIDATOR" \
)

# COMMAND ----------
# Processing node RTR_DELETE, type ROUTER 
# COLUMN COUNT: 49


# Creating output dataframe for RTR_DELETE, output group DELETE
RTR_DELETE_DELETE = EXP_UPD_VALIDATOR.select(EXP_UPD_VALIDATOR.sys_row_id.alias('sys_row_id'), \
	EXP_UPD_VALIDATOR.MSRMNT_ID.alias('MSRMNT_ID3'), \
	EXP_UPD_VALIDATOR.RULE_NBR.alias('RULE_NBR3'), \
	EXP_UPD_VALIDATOR.RULE_SEQ_NBR.alias('RULE_SEQ_NBR3'), \
	EXP_UPD_VALIDATOR.OPEN_PARAN.alias('OPEN_PARAN3'), \
	EXP_UPD_VALIDATOR.AND_OR.alias('AND_OR3'), \
	EXP_UPD_VALIDATOR.FIELD_NAME.alias('FIELD_NAME3'), \
	EXP_UPD_VALIDATOR.OPERATOR.alias('OPERATOR3'), \
	EXP_UPD_VALIDATOR.RULE_COMPARE_VALUE.alias('RULE_COMPARE_VALUE3'), \
	EXP_UPD_VALIDATOR.CLOSE_PARAN.alias('CLOSE_PARAN3'), \
	EXP_UPD_VALIDATOR.FREE_FORM_TEXT.alias('FREE_FORM_TEXT3'), \
	EXP_UPD_VALIDATOR.DESCRIPTION.alias('DESCRIPTION3'), \
	EXP_UPD_VALIDATOR.MISC.alias('MISC3'), \
	EXP_UPD_VALIDATOR.CREATE_DATE_TIME.alias('CREATE_DATE_TIME3'), \
	EXP_UPD_VALIDATOR.MOD_DATE_TIME.alias('MOD_DATE_TIME3'), \
	EXP_UPD_VALIDATOR.USER_ID.alias('USER_ID3'), \
	EXP_UPD_VALIDATOR.MISC_TXT_1.alias('MISC_TXT_13'), \
	EXP_UPD_VALIDATOR.MISC_TXT_2.alias('MISC_TXT_23'), \
	EXP_UPD_VALIDATOR.MISC_NUM_1.alias('MISC_NUM_13'), \
	EXP_UPD_VALIDATOR.MISC_NUM_2.alias('MISC_NUM_23'), \
	EXP_UPD_VALIDATOR.VERSION_ID.alias('VERSION_ID3'), \
	EXP_UPD_VALIDATOR.LOCATION_ID.alias('LOCATION_ID3'), \
	EXP_UPD_VALIDATOR.in_LOCATION_ID.alias('in_LOCATION_ID3'), \
	EXP_UPD_VALIDATOR.WM_MSRMNT_ID.alias('WM_MSRMNT_ID3'), \
	EXP_UPD_VALIDATOR.WM_RULE_NBR.alias('WM_RULE_NBR3'), \
	EXP_UPD_VALIDATOR.in_RULE_SEQ_NBR.alias('in_RULE_SEQ_NBR3'), \
	EXP_UPD_VALIDATOR.WM_MSRMNT_RULE_CONDITION_DESC.alias('WM_MSRMNT_RULE_CONDITION_DESC3'), \
	EXP_UPD_VALIDATOR.in_OPEN_PARAN.alias('in_OPEN_PARAN3'), \
	EXP_UPD_VALIDATOR.in_AND_OR.alias('in_AND_OR3'), \
	EXP_UPD_VALIDATOR.in_FIELD_NAME.alias('in_FIELD_NAME3'), \
	EXP_UPD_VALIDATOR.in_OPERATOR.alias('in_OPERATOR3'), \
	EXP_UPD_VALIDATOR.in_RULE_COMPARE_VALUE.alias('in_RULE_COMPARE_VALUE3'), \
	EXP_UPD_VALIDATOR.in_CLOSE_PARAN.alias('in_CLOSE_PARAN3'), \
	EXP_UPD_VALIDATOR.in_FREE_FORM_TEXT.alias('in_FREE_FORM_TEXT3'), \
	EXP_UPD_VALIDATOR.in_MISC.alias('in_MISC3'), \
	EXP_UPD_VALIDATOR.in_MISC_TXT_1.alias('in_MISC_TXT_13'), \
	EXP_UPD_VALIDATOR.in_MISC_TXT_2.alias('in_MISC_TXT_23'), \
	EXP_UPD_VALIDATOR.in_MISC_NUM_1.alias('in_MISC_NUM_13'), \
	EXP_UPD_VALIDATOR.in_MISC_NUM_2.alias('in_MISC_NUM_23'), \
	EXP_UPD_VALIDATOR.WM_USER_ID.alias('WM_USER_ID3'), \
	EXP_UPD_VALIDATOR.WM_VERSION_ID.alias('WM_VERSION_ID3'), \
	EXP_UPD_VALIDATOR.WM_CREATE_TSTMP.alias('WM_CREATE_TSTMP3'), \
	EXP_UPD_VALIDATOR.WM_MOD_TSTMP.alias('WM_MOD_TSTMP3'), \
	EXP_UPD_VALIDATOR.in_DELETE_FLAG.alias('in_DELETE_FLAG3'), \
	EXP_UPD_VALIDATOR.in_UPDATE_TSTMP.alias('in_UPDATE_TSTMP3'), \
	EXP_UPD_VALIDATOR.in_LOAD_TSTMP.alias('in_LOAD_TSTMP3'), \
	EXP_UPD_VALIDATOR.DELETE_FLAG.alias('DELETE_FLAG3'), \
	EXP_UPD_VALIDATOR.UPDATE_TSTMP.alias('UPDATE_TSTMP3'), \
	EXP_UPD_VALIDATOR.LOAD_TSTMP.alias('LOAD_TSTMP3'), \
	EXP_UPD_VALIDATOR.o_UPDATE_VALIDATOR.alias('o_UPDATE_VALIDATOR3')).filter("o_UPDATE_VALIDATOR = 'DELETE'")

# Creating output dataframe for RTR_DELETE, output group INSERT_UPDATE
RTR_DELETE_INSERT_UPDATE = EXP_UPD_VALIDATOR.select(EXP_UPD_VALIDATOR.sys_row_id.alias('sys_row_id'), \
	EXP_UPD_VALIDATOR.MSRMNT_ID.alias('MSRMNT_ID1'), \
	EXP_UPD_VALIDATOR.RULE_NBR.alias('RULE_NBR1'), \
	EXP_UPD_VALIDATOR.RULE_SEQ_NBR.alias('RULE_SEQ_NBR1'), \
	EXP_UPD_VALIDATOR.OPEN_PARAN.alias('OPEN_PARAN1'), \
	EXP_UPD_VALIDATOR.AND_OR.alias('AND_OR1'), \
	EXP_UPD_VALIDATOR.FIELD_NAME.alias('FIELD_NAME1'), \
	EXP_UPD_VALIDATOR.OPERATOR.alias('OPERATOR1'), \
	EXP_UPD_VALIDATOR.RULE_COMPARE_VALUE.alias('RULE_COMPARE_VALUE1'), \
	EXP_UPD_VALIDATOR.CLOSE_PARAN.alias('CLOSE_PARAN1'), \
	EXP_UPD_VALIDATOR.FREE_FORM_TEXT.alias('FREE_FORM_TEXT1'), \
	EXP_UPD_VALIDATOR.DESCRIPTION.alias('DESCRIPTION1'), \
	EXP_UPD_VALIDATOR.MISC.alias('MISC1'), \
	EXP_UPD_VALIDATOR.CREATE_DATE_TIME.alias('CREATE_DATE_TIME1'), \
	EXP_UPD_VALIDATOR.MOD_DATE_TIME.alias('MOD_DATE_TIME1'), \
	EXP_UPD_VALIDATOR.USER_ID.alias('USER_ID1'), \
	EXP_UPD_VALIDATOR.MISC_TXT_1.alias('MISC_TXT_11'), \
	EXP_UPD_VALIDATOR.MISC_TXT_2.alias('MISC_TXT_21'), \
	EXP_UPD_VALIDATOR.MISC_NUM_1.alias('MISC_NUM_11'), \
	EXP_UPD_VALIDATOR.MISC_NUM_2.alias('MISC_NUM_21'), \
	EXP_UPD_VALIDATOR.VERSION_ID.alias('VERSION_ID1'), \
	EXP_UPD_VALIDATOR.LOCATION_ID.alias('LOCATION_ID1'), \
	EXP_UPD_VALIDATOR.in_LOCATION_ID.alias('in_LOCATION_ID1'), \
	EXP_UPD_VALIDATOR.WM_MSRMNT_ID.alias('WM_MSRMNT_ID1'), \
	EXP_UPD_VALIDATOR.WM_RULE_NBR.alias('WM_RULE_NBR1'), \
	EXP_UPD_VALIDATOR.in_RULE_SEQ_NBR.alias('in_RULE_SEQ_NBR1'), \
	EXP_UPD_VALIDATOR.WM_MSRMNT_RULE_CONDITION_DESC.alias('WM_MSRMNT_RULE_CONDITION_DESC1'), \
	EXP_UPD_VALIDATOR.in_OPEN_PARAN.alias('in_OPEN_PARAN1'), \
	EXP_UPD_VALIDATOR.in_AND_OR.alias('in_AND_OR1'), \
	EXP_UPD_VALIDATOR.in_FIELD_NAME.alias('in_FIELD_NAME1'), \
	EXP_UPD_VALIDATOR.in_OPERATOR.alias('in_OPERATOR1'), \
	EXP_UPD_VALIDATOR.in_RULE_COMPARE_VALUE.alias('in_RULE_COMPARE_VALUE1'), \
	EXP_UPD_VALIDATOR.in_CLOSE_PARAN.alias('in_CLOSE_PARAN1'), \
	EXP_UPD_VALIDATOR.in_FREE_FORM_TEXT.alias('in_FREE_FORM_TEXT1'), \
	EXP_UPD_VALIDATOR.in_MISC.alias('in_MISC1'), \
	EXP_UPD_VALIDATOR.in_MISC_TXT_1.alias('in_MISC_TXT_11'), \
	EXP_UPD_VALIDATOR.in_MISC_TXT_2.alias('in_MISC_TXT_21'), \
	EXP_UPD_VALIDATOR.in_MISC_NUM_1.alias('in_MISC_NUM_11'), \
	EXP_UPD_VALIDATOR.in_MISC_NUM_2.alias('in_MISC_NUM_21'), \
	EXP_UPD_VALIDATOR.WM_USER_ID.alias('WM_USER_ID1'), \
	EXP_UPD_VALIDATOR.WM_VERSION_ID.alias('WM_VERSION_ID1'), \
	EXP_UPD_VALIDATOR.WM_CREATE_TSTMP.alias('WM_CREATE_TSTMP1'), \
	EXP_UPD_VALIDATOR.WM_MOD_TSTMP.alias('WM_MOD_TSTMP1'), \
	EXP_UPD_VALIDATOR.in_DELETE_FLAG.alias('in_DELETE_FLAG1'), \
	EXP_UPD_VALIDATOR.in_UPDATE_TSTMP.alias('in_UPDATE_TSTMP1'), \
	EXP_UPD_VALIDATOR.in_LOAD_TSTMP.alias('in_LOAD_TSTMP1'), \
	EXP_UPD_VALIDATOR.DELETE_FLAG.alias('DELETE_FLAG1'), \
	EXP_UPD_VALIDATOR.UPDATE_TSTMP.alias('UPDATE_TSTMP1'), \
	EXP_UPD_VALIDATOR.LOAD_TSTMP.alias('LOAD_TSTMP1'), \
	EXP_UPD_VALIDATOR.o_UPDATE_VALIDATOR.alias('o_UPDATE_VALIDATOR1')).filter("o_UPDATE_VALIDATOR = 'INSERT' OR o_UPDATE_VALIDATOR = 'UPDATE'")


# COMMAND ----------
# Processing node UPD_DELETE, type UPDATE_STRATEGY 
# COLUMN COUNT: 28

# for each involved DataFrame, append the dataframe name to each column
RTR_DELETE_DELETE_temp = RTR_DELETE_DELETE.toDF(*["RTR_DELETE_DELETE___" + col for col in RTR_DELETE_DELETE.columns])

UPD_DELETE = RTR_DELETE_DELETE_temp.selectExpr( \
	"RTR_DELETE_DELETE___in_LOCATION_ID3 as in_LOCATION_ID3", \
	"RTR_DELETE_DELETE___WM_MSRMNT_ID3 as WM_MSRMNT_ID3", \
	"RTR_DELETE_DELETE___WM_RULE_NBR3 as WM_RULE_NBR3", \
	"RTR_DELETE_DELETE___in_RULE_SEQ_NBR3 as in_RULE_SEQ_NBR3", \
	"RTR_DELETE_DELETE___WM_MSRMNT_RULE_CONDITION_DESC3 as WM_MSRMNT_RULE_CONDITION_DESC3", \
	"RTR_DELETE_DELETE___in_OPEN_PARAN3 as in_OPEN_PARAN3", \
	"RTR_DELETE_DELETE___in_AND_OR3 as in_AND_OR3", \
	"RTR_DELETE_DELETE___in_FIELD_NAME3 as in_FIELD_NAME3", \
	"RTR_DELETE_DELETE___in_OPERATOR3 as in_OPERATOR3", \
	"RTR_DELETE_DELETE___in_RULE_COMPARE_VALUE3 as in_RULE_COMPARE_VALUE3", \
	"RTR_DELETE_DELETE___in_CLOSE_PARAN3 as in_CLOSE_PARAN3", \
	"RTR_DELETE_DELETE___in_FREE_FORM_TEXT3 as in_FREE_FORM_TEXT3", \
	"RTR_DELETE_DELETE___in_MISC3 as in_MISC3", \
	"RTR_DELETE_DELETE___in_MISC_TXT_13 as in_MISC_TXT_13", \
	"RTR_DELETE_DELETE___in_MISC_TXT_23 as in_MISC_TXT_23", \
	"RTR_DELETE_DELETE___in_MISC_NUM_13 as in_MISC_NUM_13", \
	"RTR_DELETE_DELETE___in_MISC_NUM_23 as in_MISC_NUM_23", \
	"RTR_DELETE_DELETE___WM_USER_ID3 as WM_USER_ID3", \
	"RTR_DELETE_DELETE___WM_VERSION_ID3 as WM_VERSION_ID3", \
	"RTR_DELETE_DELETE___WM_CREATE_TSTMP3 as WM_CREATE_TSTMP3", \
	"RTR_DELETE_DELETE___WM_MOD_TSTMP3 as WM_MOD_TSTMP3", \
	"RTR_DELETE_DELETE___in_DELETE_FLAG3 as in_DELETE_FLAG3", \
	"RTR_DELETE_DELETE___in_UPDATE_TSTMP3 as in_UPDATE_TSTMP3", \
	"RTR_DELETE_DELETE___in_LOAD_TSTMP3 as in_LOAD_TSTMP3", \
	"RTR_DELETE_DELETE___DELETE_FLAG3 as DELETE_FLAG3", \
	"RTR_DELETE_DELETE___UPDATE_TSTMP3 as UPDATE_TSTMP3", \
	"RTR_DELETE_DELETE___LOAD_TSTMP3 as LOAD_TSTMP3", \
	"RTR_DELETE_DELETE___o_UPDATE_VALIDATOR3 as o_UPDATE_VALIDATOR3") \
	.withColumn('pyspark_data_action', lit(1))

# COMMAND ----------
# Processing node UPD_INSERT_UPDATE, type UPDATE_STRATEGY 
# COLUMN COUNT: 25

# for each involved DataFrame, append the dataframe name to each column
RTR_DELETE_INSERT_UPDATE_temp = RTR_DELETE_INSERT_UPDATE.toDF(*["RTR_DELETE_INSERT_UPDATE___" + col for col in RTR_DELETE_INSERT_UPDATE.columns])

UPD_INSERT_UPDATE = RTR_DELETE_INSERT_UPDATE_temp.selectExpr( \
	"RTR_DELETE_INSERT_UPDATE___LOCATION_ID1 as LOCATION_ID1", \
	"RTR_DELETE_INSERT_UPDATE___MSRMNT_ID1 as MSRMNT_ID1", \
	"RTR_DELETE_INSERT_UPDATE___RULE_NBR1 as RULE_NBR1", \
	"RTR_DELETE_INSERT_UPDATE___RULE_SEQ_NBR1 as RULE_SEQ_NBR1", \
	"RTR_DELETE_INSERT_UPDATE___DESCRIPTION1 as DESCRIPTION1", \
	"RTR_DELETE_INSERT_UPDATE___OPEN_PARAN1 as OPEN_PARAN1", \
	"RTR_DELETE_INSERT_UPDATE___AND_OR1 as AND_OR1", \
	"RTR_DELETE_INSERT_UPDATE___FIELD_NAME1 as FIELD_NAME1", \
	"RTR_DELETE_INSERT_UPDATE___OPERATOR1 as OPERATOR1", \
	"RTR_DELETE_INSERT_UPDATE___RULE_COMPARE_VALUE1 as RULE_COMPARE_VALUE1", \
	"RTR_DELETE_INSERT_UPDATE___CLOSE_PARAN1 as CLOSE_PARAN1", \
	"RTR_DELETE_INSERT_UPDATE___FREE_FORM_TEXT1 as FREE_FORM_TEXT1", \
	"RTR_DELETE_INSERT_UPDATE___MISC1 as MISC1", \
	"RTR_DELETE_INSERT_UPDATE___MISC_TXT_11 as MISC_TXT_11", \
	"RTR_DELETE_INSERT_UPDATE___MISC_TXT_21 as MISC_TXT_21", \
	"RTR_DELETE_INSERT_UPDATE___MISC_NUM_11 as MISC_NUM_11", \
	"RTR_DELETE_INSERT_UPDATE___MISC_NUM_21 as MISC_NUM_21", \
	"RTR_DELETE_INSERT_UPDATE___USER_ID1 as USER_ID1", \
	"RTR_DELETE_INSERT_UPDATE___VERSION_ID1 as VERSION_ID1", \
	"RTR_DELETE_INSERT_UPDATE___CREATE_DATE_TIME1 as CREATE_DATE_TIME1", \
	"RTR_DELETE_INSERT_UPDATE___MOD_DATE_TIME1 as MOD_DATE_TIME1", \
	"RTR_DELETE_INSERT_UPDATE___DELETE_FLAG1 as DELETE_FLAG1", \
	"RTR_DELETE_INSERT_UPDATE___UPDATE_TSTMP1 as UPDATE_TSTMP1", \
	"RTR_DELETE_INSERT_UPDATE___LOAD_TSTMP1 as LOAD_TSTMP1", \
	"RTR_DELETE_INSERT_UPDATE___o_UPDATE_VALIDATOR1 as o_UPDATE_VALIDATOR1") \
	.withColumn('pyspark_data_action', when(RTR_DELETE_INSERT_UPDATE.o_UPDATE_VALIDATOR1 ==(lit('INSERT')), lit(0)).when(RTR_DELETE_INSERT_UPDATE.o_UPDATE_VALIDATOR1 ==(lit('UPDATE')), lit(1)))

# COMMAND ----------
# Processing node Shortcut_to_WM_E_MSRMNT_RULE_CONDITION2, type TARGET 
# COLUMN COUNT: 24


# Shortcut_to_WM_E_MSRMNT_RULE_CONDITION2 = UPD_DELETE.selectExpr( \
# 	"CAST(in_LOCATION_ID3 AS BIGINT) as LOCATION_ID", \
# 	"CAST(WM_MSRMNT_ID3 AS BIGINT) as WM_MSRMNT_ID", \
# 	"CAST(WM_RULE_NBR3 AS BIGINT) as WM_RULE_NBR", \
# 	"CAST(in_RULE_SEQ_NBR3 AS BIGINT) as RULE_SEQ_NBR", \
# 	"CAST(NULL AS STRING) as WM_MSRMNT_RULE_CONDITION_DESC", \
# 	"CAST(NULL AS STRING) as OPEN_PARAN", \
# 	"CAST(NULL AS STRING) as AND_OR", \
# 	"CAST(NULL AS STRING) as FIELD_NAME", \
# 	"CAST(NULL AS STRING) as OPERATOR", \
# 	"CAST(NULL AS STRING) as RULE_COMPARE_VALUE", \
# 	"CAST(NULL AS STRING) as CLOSE_PARAN", \
# 	"CAST(NULL AS STRING) as FREE_FORM_TEXT", \
# 	"CAST(NULL AS STRING) as MISC", \
# 	"CAST(NULL AS STRING) as MISC_TXT_1", \
# 	"CAST(NULL AS STRING) as MISC_TXT_2", \
# 	"CAST(NULL AS BIGINT) as MISC_NUM_1", \
# 	"CAST(NULL AS BIGINT) as MISC_NUM_2", \
# 	"CAST(NULL AS STRING) as WM_USER_ID", \
# 	"CAST(NULL AS BIGINT) as WM_VERSION_ID", \
# 	"CAST(NULL AS TIMESTAMP) as WM_CREATE_TSTMP", \
# 	"CAST(NULL AS TIMESTAMP) as WM_MOD_TSTMP", \
# 	"CAST(DELETE_FLAG3 AS BIGINT) as DELETE_FLAG", \
# 	"CAST(UPDATE_TSTMP3 AS TIMESTAMP) as UPDATE_TSTMP", \
# 	"CAST(NULL AS TIMESTAMP) as LOAD_TSTMP" \
# )
# Shortcut_to_WM_E_MSRMNT_RULE_CONDITION2.write.saveAsTable(f'{raw}.WM_E_MSRMNT_RULE_CONDITION', mode = 'append')

# COMMAND ----------
# Processing node Shortcut_to_WM_E_MSRMNT_RULE_CONDITION1, type TARGET 
# COLUMN COUNT: 24

Shortcut_to_WM_E_MSRMNT_RULE_CONDITION1 = UPD_INSERT_UPDATE.selectExpr( 
	"CAST(LOCATION_ID1 AS BIGINT) as LOCATION_ID", 
	"CAST(MSRMNT_ID1 AS BIGINT) as WM_MSRMNT_ID", 
	"CAST(RULE_NBR1 AS BIGINT) as WM_RULE_NBR", 
	"CAST(RULE_SEQ_NBR1 AS BIGINT) as RULE_SEQ_NBR", 
	"CAST(DESCRIPTION1 AS STRING) as WM_MSRMNT_RULE_CONDITION_DESC", 
	"CAST(OPEN_PARAN1 AS STRING) as OPEN_PARAN", 
	"CAST(AND_OR1 AS STRING) as AND_OR", 
	"CAST(FIELD_NAME1 AS STRING) as FIELD_NAME", 
	"CAST(OPERATOR1 AS STRING) as OPERATOR", 
	"CAST(RULE_COMPARE_VALUE1 AS STRING) as RULE_COMPARE_VALUE", 
	"CAST(CLOSE_PARAN1 AS STRING) as CLOSE_PARAN", 
	"CAST(FREE_FORM_TEXT1 AS STRING) as FREE_FORM_TEXT", 
	"CAST(MISC1 AS STRING) as MISC", 
	"CAST(MISC_TXT_11 AS STRING) as MISC_TXT_1", 
	"CAST(MISC_TXT_21 AS STRING) as MISC_TXT_2", 
	"CAST(MISC_NUM_11 AS BIGINT) as MISC_NUM_1", 
	"CAST(MISC_NUM_21 AS BIGINT) as MISC_NUM_2", 
	"CAST(USER_ID1 AS STRING) as WM_USER_ID", 
	"CAST(VERSION_ID1 AS BIGINT) as WM_VERSION_ID", 
	"CAST(CREATE_DATE_TIME1 AS TIMESTAMP) as WM_CREATE_TSTMP", 
	"CAST(MOD_DATE_TIME1 AS TIMESTAMP) as WM_MOD_TSTMP", 
	"CAST(DELETE_FLAG1 AS BIGINT) as DELETE_FLAG", 
	"CAST(UPDATE_TSTMP1 AS TIMESTAMP) as UPDATE_TSTMP", 
	"CAST(LOAD_TSTMP1 AS TIMESTAMP) as LOAD_TSTMP", 
    "pyspark_data_action" 
)

try:
  primary_key = """source.LOCATION_ID = target.LOCATION_ID AND source.WM_MSRMNT_ID = target.WM_MSRMNT_ID AND source.WM_RULE_NBR = target.WM_RULE_NBR AND source.RULE_SEQ_NBR = target.RULE_SEQ_NBR"""
#   refined_perf_table = "WM_E_MSRMNT_RULE_CONDITION"
  executeMerge(Shortcut_to_WM_E_MSRMNT_RULE_CONDITION1, refined_perf_table, primary_key)
  logger.info(f"Merge with {refined_perf_table} completed]")
  logPrevRunDt("WM_E_MSRMNT_RULE_CONDITION", "WM_E_MSRMNT_RULE_CONDITION", "Completed", "N/A", f"{raw}.log_run_details")
except Exception as e:
  logPrevRunDt("WM_E_MSRMNT_RULE_CONDITION", "WM_E_MSRMNT_RULE_CONDITION","Failed",str(e), f"{raw}.log_run_details", )
  raise e
	