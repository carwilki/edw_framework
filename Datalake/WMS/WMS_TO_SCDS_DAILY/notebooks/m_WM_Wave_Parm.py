#Code converted on 2023-06-22 21:04:12
import os
import argparse
from pyspark.sql import *
from pyspark.sql.functions import *
from pyspark.sql.window import Window
from pyspark.sql.types import *
from datetime import datetime
from pyspark.dbutils import DBUtils
from Datalake.utils.genericUtilities import *
from Datalake.utils.configs import *
from Datalake.utils.mergeUtils import *
from Datalake.utils.logger import *
# COMMAND ----------

parser = argparse.ArgumentParser()
spark = SparkSession.getActiveSession()
dbutils = DBUtils(spark)

parser.add_argument('env', type=str, help='Env Variable')
args = parser.parse_args()
env = args.env

if env is None or env == '':
    raise ValueError('env is not set')

refine = getEnvPrefix(env) + 'refine'
raw = getEnvPrefix(env) + 'raw'
legacy = getEnvPrefix(env) + 'legacy'

# Set global variables
starttime = datetime.now() #start timestamp of the script
refined_perf_table = f"{refine}.WM_WAVE_PARM"
raw_perf_table = f"{raw}.WM_WAVE_PARM_PRE"
site_profile_table = f"{legacy}.SITE_PROFILE"


# COMMAND ----------
# Processing node SQ_Shortcut_to_WM_WAVE_PARM_PRE, type SOURCE 
# COLUMN COUNT: 195

SQ_Shortcut_to_WM_WAVE_PARM_PRE = spark.sql(f"""SELECT
DC_NBR,
WAVE_PARM_ID,
WHSE,
DAY_OF_WEEK,
SHIFT_NBR,
REC_TYPE,
WAVE_NBR,
WAVE_DESC,
MAX_UNITS,
MAX_ORDERS,
WAVE_CMPL_STAT_CODE,
WAVE_STAT_CODE,
WAVE_STAT_DATE_TIME,
PICK_STAT_CODE,
PACK_STAT_CODE,
REPL_STAT_CODE,
INDUC_STAT_CODE,
MISC_STAT_CODE_1,
MISC_STAT_CODE_2,
SCHED_DLVRY_DATE,
SCHED_WAVE,
NBR_OF_PKTS,
NBR_OF_CARTONS,
NBR_OF_LOCN,
NBR_OF_CHUTE,
NBR_OF_PLT_POSN,
ASSIGN_PLT_POSN,
WAVE_PROC_TYPE,
WAVE_PARM_TEMPLATE_ID,
FORCE_WPT,
REPL_TRIG,
RTE_W_WAVE,
CHG_PKT_QTY,
LABEL_PRTR_REQSTR,
RPT_PRTR_REQSTR,
CARTON_BREAK_ON_AREA_CHG,
CARTON_BREAK_ON_ZONE_CHG,
CARTON_BREAK_ON_AISLE_CHG,
PKT_CONSOL_REJECT_RULE,
ASSIGN_PRO_NBR,
SHIP_VIA,
SWC_NBR,
MANIF_NBR,
BOL,
SHPMT_NBR,
SWC_NBR_FLAG,
MANIF_FLAG,
BOL_FLAG,
SHPMT_FLAG,
CLEAR_SPUR_LOCN,
SPUR,
XCEED_CAPCTY_FLAG,
FILL_CAPCTY_STRK,
CONSL_LOCN_CLEAR_METHD,
PERP_PLT_POSN,
NBR_OF_LABELS_PER_SPOOL,
NBR_OF_LABELS_PER_ROW,
PKT_CONSOL_PROF,
PKT_CONSOL_DETRM_TYPE,
SKU_CNSTR,
SKU_SUB,
USE_INBD_LPN_AS_OUTBD_LPN,
CARTON_TYPE,
NBR_OF_PIKRS_PAKRS,
AVG_PIKS_PER_PIKR,
AVG_TMU_PER_PIKR,
PICK_LOCN_ASSIGN_TYPE,
DIFF_PIKR_ON_AREA_CHG,
DIFF_PIKR_ON_ZONE_CHG,
DIFF_PIKR_ON_AISLE_CHG,
DIFF_PIKR_ON_BAY_CHG,
DIFF_PIKR_ON_LVL_CHG,
DIFF_PIKR_ON_POSN_CHG,
SAME_PIKR_FOR_AREA,
SAME_PIKR_FOR_ZONE,
SAME_PIKR_FOR_AISLE,
SAME_PIKR_FOR_BAY,
SAME_PIKR_FOR_LVL,
SAME_PIKR_FOR_POSN,
OK_TO_PICK,
OK_TO_PACK,
OK_TO_REPL,
OK_TO_INDUC,
OK_TO_MISC_1,
OK_TO_MISC_2,
START_PICK_DATE_TIME,
END_PICK_DATE_TIME,
START_PACK_DATE_TIME,
END_PACK_DATE_TIME,
START_REPL_DATE_TIME,
END_REPL_DATE_TIME,
START_INDUC_DATE_TIME,
END_INDUC_DATE_TIME,
START_MISC_1_DATE_TIME,
END_MISC_1_DATE_TIME,
START_MISC_2_DATE_TIME,
END_MISC_2_DATE_TIME,
CMPLTD_DATE_TIME,
GRP_PKT_BY_SWC_NBR,
PULL_ALL_SWC,
ZONE_PICK_METHOD,
WAVE_TYPE_INDIC,
REJECT_DISTRO_RULE,
RETAIL_MAX_UNITS,
RETAIL_UNIT_PCNT_OVER,
RETAIL_MAX_SKUS,
RETAIL_MAX_STORES,
RETAIL_MAX_ROUTES,
BULK_WAVE_BAL_FROM_ACTV,
PROC_ATTR_1,
PROC_ATTR_2,
PROC_ATTR_3,
PROC_ATTR_4,
PROC_ATTR_5,
SPL_INSTR_CODE_1,
SPL_INSTR_CODE_2,
SPL_INSTR_CODE_3,
SPL_INSTR_CODE_4,
SPL_INSTR_CODE_5,
CREATE_DATE_TIME,
MOD_DATE_TIME,
USER_ID,
PRT_CS_LABELS_W_WAVE,
CREATE_SHPMT,
CREATE_LOAD,
CHG_WO_QTY,
PACK_CMPL_W_WAVE,
DLVRY_WIN_RANGE_CODE,
DFLT_PLT_TYPE,
PACK_WAVE_PARM_ID,
CAT_PARM_ID,
DESEL_SNGL_FLAG,
ALLOC_TYPE,
FORCE_ALLOC_TYPE,
FORCE_PICK_LOCN_ASSIGN_TYPE,
BULK_PICK_ZONE,
CONSOL_PLTZ_CARTONS_FLAG,
ACTV_REPL_ORGN,
MAX_CARTONS,
MAX_PICK_WAVES,
HOLD_PRINT,
SUPPR_PR40_REPL,
COMB_4050_REPL,
SUPPR_PR60_REPL,
LOAD_PLAN,
ASSIGN_NEW_LOAD,
RESV_BAL,
RESV_BALANCE_INT,
ORDER_RND_FLAG,
ALLOC_REMAIN,
MHE_FLAG,
MHE_ONE_SEND_FLAG,
MHE_PICK_DEST_LEVEL,
SHIP_DATE_TIME,
COLLATE_PRTR_REQSTR,
MAX_DYNAMIC_LOCN_OPTN,
FORCE_SHIP_DATE_FLAG,
MAX_WT,
MAX_VOL,
BULK_PICK_ASSIGN_TYPE,
REPL_WAVE,
RESEQ_ACTIV_LOC,
VOCO_GRP_CARTONS_TO_TASK,
VOCO_MAX_CARTON_ON_TASK,
WM_VERSION_ID,
TC_COMPANY_ID,
MAX_ORDER_LINES,
CHASE_WAVE,
DEFAULT_QUEUE_PRTY,
ALLOC_LOGGING,
CREATED_DTTM,
LAST_UPDATED_DTTM,
CARTON_BREAK_ON_LOCN_CLASS,
DESELECT_UNALLOCATED_SINGLES,
CARTON_TYPE_EVENT_ID,
CHUTE_ASSIGN_TYPE_EVENT_ID,
LPN_BRK_ATTRIB_EVENT_ID,
IGNORE_SINGLES_PROCESSING,
HLD_RLS_FLAG,
MAX_NBR_PACK_WAVES_TO_RLS,
REPLEN_BUMP_UP,
RETAIN_PALLET_ID,
ORDER_SEL_LOGGING,
AGG_LOGGING,
CUB_LOGGING,
PCK_WAVE_LOGGING,
TSK_GEN_LOGGING,
LABEL_PRNT_LOGGING,
ORDER_SEQ_LOGGING,
ORDER_CNSOL_LOGGING,
RELEASE_ALL_TASK,
FORCE_ORDER_STREAMING,
CUBING_ACTION_FOR_FAILED_ORDER,
NBR_ALLOCATION_THREAD,
LOAD_TSTMP
FROM {raw_perf_table}""").withColumn("sys_row_id", monotonically_increasing_id())

# COMMAND ----------
# Processing node SQ_Shortcut_to_WM_WAVE_PARM, type SOURCE 
# COLUMN COUNT: 7

SQ_Shortcut_to_WM_WAVE_PARM = spark.sql(f"""SELECT
LOCATION_ID,
WM_WAVE_PARM_ID,
WM_CREATED_TSTMP,
WM_LAST_UPDATED_TSTMP,
WM_CREATE_TSTMP,
WM_MOD_TSTMP,
LOAD_TSTMP
FROM {refined_perf_table}
WHERE WM_WAVE_PARM_ID IN (SELECT WAVE_PARM_ID FROM {raw_perf_table})""").withColumn("sys_row_id", monotonically_increasing_id())

# COMMAND ----------
# Processing node SQ_Shortcut_to_SITE_PROFILE, type SOURCE 
# COLUMN COUNT: 2

SQ_Shortcut_to_SITE_PROFILE = spark.sql(f"""SELECT LOCATION_ID, STORE_NBR FROM {site_profile_table}""").withColumn("sys_row_id", monotonically_increasing_id())

# COMMAND ----------
# Processing node EXP_TRANS, type EXPRESSION 
# COLUMN COUNT: 196

# for each involved DataFrame, append the dataframe name to each column
SQ_Shortcut_to_WM_WAVE_PARM_PRE_temp = SQ_Shortcut_to_WM_WAVE_PARM_PRE.toDF(*["SQ_Shortcut_to_WM_WAVE_PARM_PRE___" + col for col in SQ_Shortcut_to_WM_WAVE_PARM_PRE.columns])

EXP_TRANS = SQ_Shortcut_to_WM_WAVE_PARM_PRE_temp.selectExpr( 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___sys_row_id as sys_row_id", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___DC_NBR as DC_NBR", 
	"cast(SQ_Shortcut_to_WM_WAVE_PARM_PRE___DC_NBR as int) as o_DC_NBR", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___WAVE_PARM_ID as WAVE_PARM_ID", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___WHSE as WHSE", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___DAY_OF_WEEK as DAY_OF_WEEK", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___SHIFT_NBR as SHIFT_NBR", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___REC_TYPE as REC_TYPE", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___WAVE_NBR as WAVE_NBR", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___WAVE_DESC as WAVE_DESC", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___MAX_UNITS as MAX_UNITS", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___MAX_ORDERS as MAX_ORDERS", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___WAVE_CMPL_STAT_CODE as WAVE_CMPL_STAT_CODE", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___WAVE_STAT_CODE as WAVE_STAT_CODE", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___WAVE_STAT_DATE_TIME as WAVE_STAT_DATE_TIME", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___PICK_STAT_CODE as PICK_STAT_CODE", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___PACK_STAT_CODE as PACK_STAT_CODE", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___REPL_STAT_CODE as REPL_STAT_CODE", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___INDUC_STAT_CODE as INDUC_STAT_CODE", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___MISC_STAT_CODE_1 as MISC_STAT_CODE_1", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___MISC_STAT_CODE_2 as MISC_STAT_CODE_2", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___SCHED_DLVRY_DATE as SCHED_DLVRY_DATE", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___SCHED_WAVE as SCHED_WAVE", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___NBR_OF_PKTS as NBR_OF_PKTS", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___NBR_OF_CARTONS as NBR_OF_CARTONS", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___NBR_OF_LOCN as NBR_OF_LOCN", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___NBR_OF_CHUTE as NBR_OF_CHUTE", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___NBR_OF_PLT_POSN as NBR_OF_PLT_POSN", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___ASSIGN_PLT_POSN as ASSIGN_PLT_POSN", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___WAVE_PROC_TYPE as WAVE_PROC_TYPE", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___WAVE_PARM_TEMPLATE_ID as WAVE_PARM_TEMPLATE_ID", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___FORCE_WPT as FORCE_WPT", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___REPL_TRIG as REPL_TRIG", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___RTE_W_WAVE as RTE_W_WAVE", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___CHG_PKT_QTY as CHG_PKT_QTY", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___LABEL_PRTR_REQSTR as LABEL_PRTR_REQSTR", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___RPT_PRTR_REQSTR as RPT_PRTR_REQSTR", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___CARTON_BREAK_ON_AREA_CHG as CARTON_BREAK_ON_AREA_CHG", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___CARTON_BREAK_ON_ZONE_CHG as CARTON_BREAK_ON_ZONE_CHG", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___CARTON_BREAK_ON_AISLE_CHG as CARTON_BREAK_ON_AISLE_CHG", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___PKT_CONSOL_REJECT_RULE as PKT_CONSOL_REJECT_RULE", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___ASSIGN_PRO_NBR as ASSIGN_PRO_NBR", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___SHIP_VIA as SHIP_VIA", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___SWC_NBR as SWC_NBR", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___MANIF_NBR as MANIF_NBR", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___BOL as BOL", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___SHPMT_NBR as SHPMT_NBR", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___SWC_NBR_FLAG as SWC_NBR_FLAG", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___MANIF_FLAG as MANIF_FLAG", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___BOL_FLAG as BOL_FLAG", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___SHPMT_FLAG as SHPMT_FLAG", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___CLEAR_SPUR_LOCN as CLEAR_SPUR_LOCN", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___SPUR as SPUR", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___XCEED_CAPCTY_FLAG as XCEED_CAPCTY_FLAG", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___FILL_CAPCTY_STRK as FILL_CAPCTY_STRK", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___CONSL_LOCN_CLEAR_METHD as CONSL_LOCN_CLEAR_METHD", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___PERP_PLT_POSN as PERP_PLT_POSN", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___NBR_OF_LABELS_PER_SPOOL as NBR_OF_LABELS_PER_SPOOL", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___NBR_OF_LABELS_PER_ROW as NBR_OF_LABELS_PER_ROW", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___PKT_CONSOL_PROF as PKT_CONSOL_PROF", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___PKT_CONSOL_DETRM_TYPE as PKT_CONSOL_DETRM_TYPE", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___SKU_CNSTR as SKU_CNSTR", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___SKU_SUB as SKU_SUB", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___USE_INBD_LPN_AS_OUTBD_LPN as USE_INBD_LPN_AS_OUTBD_LPN", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___CARTON_TYPE as CARTON_TYPE", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___NBR_OF_PIKRS_PAKRS as NBR_OF_PIKRS_PAKRS", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___AVG_PIKS_PER_PIKR as AVG_PIKS_PER_PIKR", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___AVG_TMU_PER_PIKR as AVG_TMU_PER_PIKR", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___PICK_LOCN_ASSIGN_TYPE as PICK_LOCN_ASSIGN_TYPE", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___DIFF_PIKR_ON_AREA_CHG as DIFF_PIKR_ON_AREA_CHG", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___DIFF_PIKR_ON_ZONE_CHG as DIFF_PIKR_ON_ZONE_CHG", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___DIFF_PIKR_ON_AISLE_CHG as DIFF_PIKR_ON_AISLE_CHG", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___DIFF_PIKR_ON_BAY_CHG as DIFF_PIKR_ON_BAY_CHG", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___DIFF_PIKR_ON_LVL_CHG as DIFF_PIKR_ON_LVL_CHG", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___DIFF_PIKR_ON_POSN_CHG as DIFF_PIKR_ON_POSN_CHG", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___SAME_PIKR_FOR_AREA as SAME_PIKR_FOR_AREA", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___SAME_PIKR_FOR_ZONE as SAME_PIKR_FOR_ZONE", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___SAME_PIKR_FOR_AISLE as SAME_PIKR_FOR_AISLE", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___SAME_PIKR_FOR_BAY as SAME_PIKR_FOR_BAY", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___SAME_PIKR_FOR_LVL as SAME_PIKR_FOR_LVL", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___SAME_PIKR_FOR_POSN as SAME_PIKR_FOR_POSN", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___OK_TO_PICK as OK_TO_PICK", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___OK_TO_PACK as OK_TO_PACK", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___OK_TO_REPL as OK_TO_REPL", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___OK_TO_INDUC as OK_TO_INDUC", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___OK_TO_MISC_1 as OK_TO_MISC_1", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___OK_TO_MISC_2 as OK_TO_MISC_2", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___START_PICK_DATE_TIME as START_PICK_DATE_TIME", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___END_PICK_DATE_TIME as END_PICK_DATE_TIME", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___START_PACK_DATE_TIME as START_PACK_DATE_TIME", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___END_PACK_DATE_TIME as END_PACK_DATE_TIME", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___START_REPL_DATE_TIME as START_REPL_DATE_TIME", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___END_REPL_DATE_TIME as END_REPL_DATE_TIME", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___START_INDUC_DATE_TIME as START_INDUC_DATE_TIME", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___END_INDUC_DATE_TIME as END_INDUC_DATE_TIME", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___START_MISC_1_DATE_TIME as START_MISC_1_DATE_TIME", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___END_MISC_1_DATE_TIME as END_MISC_1_DATE_TIME", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___START_MISC_2_DATE_TIME as START_MISC_2_DATE_TIME", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___END_MISC_2_DATE_TIME as END_MISC_2_DATE_TIME", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___CMPLTD_DATE_TIME as CMPLTD_DATE_TIME", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___GRP_PKT_BY_SWC_NBR as GRP_PKT_BY_SWC_NBR", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___PULL_ALL_SWC as PULL_ALL_SWC", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___ZONE_PICK_METHOD as ZONE_PICK_METHOD", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___WAVE_TYPE_INDIC as WAVE_TYPE_INDIC", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___REJECT_DISTRO_RULE as REJECT_DISTRO_RULE", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___RETAIL_MAX_UNITS as RETAIL_MAX_UNITS", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___RETAIL_UNIT_PCNT_OVER as RETAIL_UNIT_PCNT_OVER", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___RETAIL_MAX_SKUS as RETAIL_MAX_SKUS", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___RETAIL_MAX_STORES as RETAIL_MAX_STORES", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___RETAIL_MAX_ROUTES as RETAIL_MAX_ROUTES", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___BULK_WAVE_BAL_FROM_ACTV as BULK_WAVE_BAL_FROM_ACTV", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___PROC_ATTR_1 as PROC_ATTR_1", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___PROC_ATTR_2 as PROC_ATTR_2", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___PROC_ATTR_3 as PROC_ATTR_3", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___PROC_ATTR_4 as PROC_ATTR_4", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___PROC_ATTR_5 as PROC_ATTR_5", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___SPL_INSTR_CODE_1 as SPL_INSTR_CODE_1", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___SPL_INSTR_CODE_2 as SPL_INSTR_CODE_2", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___SPL_INSTR_CODE_3 as SPL_INSTR_CODE_3", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___SPL_INSTR_CODE_4 as SPL_INSTR_CODE_4", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___SPL_INSTR_CODE_5 as SPL_INSTR_CODE_5", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___CREATE_DATE_TIME as CREATE_DATE_TIME", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___MOD_DATE_TIME as MOD_DATE_TIME", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___USER_ID as USER_ID", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___PRT_CS_LABELS_W_WAVE as PRT_CS_LABELS_W_WAVE", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___CREATE_SHPMT as CREATE_SHPMT", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___CREATE_LOAD as CREATE_LOAD", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___CHG_WO_QTY as CHG_WO_QTY", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___PACK_CMPL_W_WAVE as PACK_CMPL_W_WAVE", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___DLVRY_WIN_RANGE_CODE as DLVRY_WIN_RANGE_CODE", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___DFLT_PLT_TYPE as DFLT_PLT_TYPE", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___PACK_WAVE_PARM_ID as PACK_WAVE_PARM_ID", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___CAT_PARM_ID as CAT_PARM_ID", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___DESEL_SNGL_FLAG as DESEL_SNGL_FLAG", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___ALLOC_TYPE as ALLOC_TYPE", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___FORCE_ALLOC_TYPE as FORCE_ALLOC_TYPE", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___FORCE_PICK_LOCN_ASSIGN_TYPE as FORCE_PICK_LOCN_ASSIGN_TYPE", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___BULK_PICK_ZONE as BULK_PICK_ZONE", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___CONSOL_PLTZ_CARTONS_FLAG as CONSOL_PLTZ_CARTONS_FLAG", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___ACTV_REPL_ORGN as ACTV_REPL_ORGN", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___MAX_CARTONS as MAX_CARTONS", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___MAX_PICK_WAVES as MAX_PICK_WAVES", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___HOLD_PRINT as HOLD_PRINT", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___SUPPR_PR40_REPL as SUPPR_PR40_REPL", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___COMB_4050_REPL as COMB_4050_REPL", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___SUPPR_PR60_REPL as SUPPR_PR60_REPL", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___LOAD_PLAN as LOAD_PLAN", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___ASSIGN_NEW_LOAD as ASSIGN_NEW_LOAD", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___RESV_BAL as RESV_BAL", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___RESV_BALANCE_INT as RESV_BALANCE_INT", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___ORDER_RND_FLAG as ORDER_RND_FLAG", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___ALLOC_REMAIN as ALLOC_REMAIN", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___MHE_FLAG as MHE_FLAG", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___MHE_ONE_SEND_FLAG as MHE_ONE_SEND_FLAG", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___MHE_PICK_DEST_LEVEL as MHE_PICK_DEST_LEVEL", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___SHIP_DATE_TIME as SHIP_DATE_TIME", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___COLLATE_PRTR_REQSTR as COLLATE_PRTR_REQSTR", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___MAX_DYNAMIC_LOCN_OPTN as MAX_DYNAMIC_LOCN_OPTN", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___FORCE_SHIP_DATE_FLAG as FORCE_SHIP_DATE_FLAG", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___MAX_WT as MAX_WT", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___MAX_VOL as MAX_VOL", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___BULK_PICK_ASSIGN_TYPE as BULK_PICK_ASSIGN_TYPE", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___REPL_WAVE as REPL_WAVE", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___RESEQ_ACTIV_LOC as RESEQ_ACTIV_LOC", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___VOCO_GRP_CARTONS_TO_TASK as VOCO_GRP_CARTONS_TO_TASK", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___VOCO_MAX_CARTON_ON_TASK as VOCO_MAX_CARTON_ON_TASK", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___WM_VERSION_ID as WM_VERSION_ID", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___TC_COMPANY_ID as TC_COMPANY_ID", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___MAX_ORDER_LINES as MAX_ORDER_LINES", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___CHASE_WAVE as CHASE_WAVE", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___DEFAULT_QUEUE_PRTY as DEFAULT_QUEUE_PRTY", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___ALLOC_LOGGING as ALLOC_LOGGING", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___CREATED_DTTM as CREATED_DTTM", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___LAST_UPDATED_DTTM as LAST_UPDATED_DTTM", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___CARTON_BREAK_ON_LOCN_CLASS as CARTON_BREAK_ON_LOCN_CLASS", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___DESELECT_UNALLOCATED_SINGLES as DESELECT_UNALLOCATED_SINGLES", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___CARTON_TYPE_EVENT_ID as CARTON_TYPE_EVENT_ID", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___CHUTE_ASSIGN_TYPE_EVENT_ID as CHUTE_ASSIGN_TYPE_EVENT_ID", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___LPN_BRK_ATTRIB_EVENT_ID as LPN_BRK_ATTRIB_EVENT_ID", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___IGNORE_SINGLES_PROCESSING as IGNORE_SINGLES_PROCESSING", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___HLD_RLS_FLAG as HLD_RLS_FLAG", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___MAX_NBR_PACK_WAVES_TO_RLS as MAX_NBR_PACK_WAVES_TO_RLS", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___REPLEN_BUMP_UP as REPLEN_BUMP_UP", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___RETAIN_PALLET_ID as RETAIN_PALLET_ID", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___ORDER_SEL_LOGGING as ORDER_SEL_LOGGING", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___AGG_LOGGING as AGG_LOGGING", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___CUB_LOGGING as CUB_LOGGING", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___PCK_WAVE_LOGGING as PCK_WAVE_LOGGING", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___TSK_GEN_LOGGING as TSK_GEN_LOGGING", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___LABEL_PRNT_LOGGING as LABEL_PRNT_LOGGING", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___ORDER_SEQ_LOGGING as ORDER_SEQ_LOGGING", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___ORDER_CNSOL_LOGGING as ORDER_CNSOL_LOGGING", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___RELEASE_ALL_TASK as RELEASE_ALL_TASK", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___FORCE_ORDER_STREAMING as FORCE_ORDER_STREAMING", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___CUBING_ACTION_FOR_FAILED_ORDER as CUBING_ACTION_FOR_FAILED_ORDER", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___NBR_ALLOCATION_THREAD as NBR_ALLOCATION_THREAD", 
	"SQ_Shortcut_to_WM_WAVE_PARM_PRE___LOAD_TSTMP as LOAD_TSTMP" 
)

# COMMAND ----------
# Processing node JNR_SITE_PROFILE, type JOINER 
# COLUMN COUNT: 196

JNR_SITE_PROFILE = SQ_Shortcut_to_SITE_PROFILE.join(EXP_TRANS,[SQ_Shortcut_to_SITE_PROFILE.STORE_NBR == EXP_TRANS.o_DC_NBR],'inner')

# COMMAND ----------
# Processing node JNR_WM_WAVE_PARM, type JOINER . Note: using additional SELECT to rename incoming columns
# COLUMN COUNT: 201

# for each involved DataFrame, append the dataframe name to each column
SQ_Shortcut_to_WM_WAVE_PARM_temp = SQ_Shortcut_to_WM_WAVE_PARM.toDF(*["SQ_Shortcut_to_WM_WAVE_PARM___" + col for col in SQ_Shortcut_to_WM_WAVE_PARM.columns])
JNR_SITE_PROFILE_temp = JNR_SITE_PROFILE.toDF(*["JNR_SITE_PROFILE___" + col for col in JNR_SITE_PROFILE.columns])

JNR_WM_WAVE_PARM = SQ_Shortcut_to_WM_WAVE_PARM_temp.join(JNR_SITE_PROFILE_temp,[SQ_Shortcut_to_WM_WAVE_PARM_temp.SQ_Shortcut_to_WM_WAVE_PARM___LOCATION_ID == JNR_SITE_PROFILE_temp.JNR_SITE_PROFILE___LOCATION_ID, SQ_Shortcut_to_WM_WAVE_PARM_temp.SQ_Shortcut_to_WM_WAVE_PARM___WM_WAVE_PARM_ID == JNR_SITE_PROFILE_temp.JNR_SITE_PROFILE___WAVE_PARM_ID],'right_outer').selectExpr( 
	"JNR_SITE_PROFILE___LOCATION_ID as LOCATION_ID", 
	"JNR_SITE_PROFILE___WAVE_PARM_ID as WAVE_PARM_ID", 
	"JNR_SITE_PROFILE___WHSE as WHSE", 
	"JNR_SITE_PROFILE___DAY_OF_WEEK as DAY_OF_WEEK", 
	"JNR_SITE_PROFILE___SHIFT_NBR as SHIFT_NBR", 
	"JNR_SITE_PROFILE___REC_TYPE as REC_TYPE", 
	"JNR_SITE_PROFILE___WAVE_NBR as WAVE_NBR", 
	"JNR_SITE_PROFILE___WAVE_DESC as WAVE_DESC", 
	"JNR_SITE_PROFILE___MAX_UNITS as MAX_UNITS", 
	"JNR_SITE_PROFILE___MAX_ORDERS as MAX_ORDERS", 
	"JNR_SITE_PROFILE___WAVE_CMPL_STAT_CODE as WAVE_CMPL_STAT_CODE", 
	"JNR_SITE_PROFILE___WAVE_STAT_CODE as WAVE_STAT_CODE", 
	"JNR_SITE_PROFILE___WAVE_STAT_DATE_TIME as WAVE_STAT_DATE_TIME", 
	"JNR_SITE_PROFILE___PICK_STAT_CODE as PICK_STAT_CODE", 
	"JNR_SITE_PROFILE___PACK_STAT_CODE as PACK_STAT_CODE", 
	"JNR_SITE_PROFILE___REPL_STAT_CODE as REPL_STAT_CODE", 
	"JNR_SITE_PROFILE___INDUC_STAT_CODE as INDUC_STAT_CODE", 
	"JNR_SITE_PROFILE___MISC_STAT_CODE_1 as MISC_STAT_CODE_1", 
	"JNR_SITE_PROFILE___MISC_STAT_CODE_2 as MISC_STAT_CODE_2", 
	"JNR_SITE_PROFILE___SCHED_DLVRY_DATE as SCHED_DLVRY_DATE", 
	"JNR_SITE_PROFILE___SCHED_WAVE as SCHED_WAVE", 
	"JNR_SITE_PROFILE___NBR_OF_PKTS as NBR_OF_PKTS", 
	"JNR_SITE_PROFILE___NBR_OF_CARTONS as NBR_OF_CARTONS", 
	"JNR_SITE_PROFILE___NBR_OF_LOCN as NBR_OF_LOCN", 
	"JNR_SITE_PROFILE___NBR_OF_CHUTE as NBR_OF_CHUTE", 
	"JNR_SITE_PROFILE___NBR_OF_PLT_POSN as NBR_OF_PLT_POSN", 
	"JNR_SITE_PROFILE___ASSIGN_PLT_POSN as ASSIGN_PLT_POSN", 
	"JNR_SITE_PROFILE___WAVE_PROC_TYPE as WAVE_PROC_TYPE", 
	"JNR_SITE_PROFILE___WAVE_PARM_TEMPLATE_ID as WAVE_PARM_TEMPLATE_ID", 
	"JNR_SITE_PROFILE___FORCE_WPT as FORCE_WPT", 
	"JNR_SITE_PROFILE___REPL_TRIG as REPL_TRIG", 
	"JNR_SITE_PROFILE___RTE_W_WAVE as RTE_W_WAVE", 
	"JNR_SITE_PROFILE___CHG_PKT_QTY as CHG_PKT_QTY", 
	"JNR_SITE_PROFILE___LABEL_PRTR_REQSTR as LABEL_PRTR_REQSTR", 
	"JNR_SITE_PROFILE___RPT_PRTR_REQSTR as RPT_PRTR_REQSTR", 
	"JNR_SITE_PROFILE___CARTON_BREAK_ON_AREA_CHG as CARTON_BREAK_ON_AREA_CHG", 
	"JNR_SITE_PROFILE___CARTON_BREAK_ON_ZONE_CHG as CARTON_BREAK_ON_ZONE_CHG", 
	"JNR_SITE_PROFILE___CARTON_BREAK_ON_AISLE_CHG as CARTON_BREAK_ON_AISLE_CHG", 
	"JNR_SITE_PROFILE___PKT_CONSOL_REJECT_RULE as PKT_CONSOL_REJECT_RULE", 
	"JNR_SITE_PROFILE___ASSIGN_PRO_NBR as ASSIGN_PRO_NBR", 
	"JNR_SITE_PROFILE___SHIP_VIA as SHIP_VIA", 
	"JNR_SITE_PROFILE___SWC_NBR as SWC_NBR", 
	"JNR_SITE_PROFILE___MANIF_NBR as MANIF_NBR", 
	"JNR_SITE_PROFILE___BOL as BOL", 
	"JNR_SITE_PROFILE___SHPMT_NBR as SHPMT_NBR", 
	"JNR_SITE_PROFILE___SWC_NBR_FLAG as SWC_NBR_FLAG", 
	"JNR_SITE_PROFILE___MANIF_FLAG as MANIF_FLAG", 
	"JNR_SITE_PROFILE___BOL_FLAG as BOL_FLAG", 
	"JNR_SITE_PROFILE___SHPMT_FLAG as SHPMT_FLAG", 
	"JNR_SITE_PROFILE___CLEAR_SPUR_LOCN as CLEAR_SPUR_LOCN", 
	"JNR_SITE_PROFILE___SPUR as SPUR", 
	"JNR_SITE_PROFILE___XCEED_CAPCTY_FLAG as XCEED_CAPCTY_FLAG", 
	"JNR_SITE_PROFILE___FILL_CAPCTY_STRK as FILL_CAPCTY_STRK", 
	"JNR_SITE_PROFILE___CONSL_LOCN_CLEAR_METHD as CONSL_LOCN_CLEAR_METHD", 
	"JNR_SITE_PROFILE___PERP_PLT_POSN as PERP_PLT_POSN", 
	"JNR_SITE_PROFILE___NBR_OF_LABELS_PER_SPOOL as NBR_OF_LABELS_PER_SPOOL", 
	"JNR_SITE_PROFILE___NBR_OF_LABELS_PER_ROW as NBR_OF_LABELS_PER_ROW", 
	"JNR_SITE_PROFILE___PKT_CONSOL_PROF as PKT_CONSOL_PROF", 
	"JNR_SITE_PROFILE___PKT_CONSOL_DETRM_TYPE as PKT_CONSOL_DETRM_TYPE", 
	"JNR_SITE_PROFILE___SKU_CNSTR as SKU_CNSTR", 
	"JNR_SITE_PROFILE___SKU_SUB as SKU_SUB", 
	"JNR_SITE_PROFILE___USE_INBD_LPN_AS_OUTBD_LPN as USE_INBD_LPN_AS_OUTBD_LPN", 
	"JNR_SITE_PROFILE___CARTON_TYPE as CARTON_TYPE", 
	"JNR_SITE_PROFILE___NBR_OF_PIKRS_PAKRS as NBR_OF_PIKRS_PAKRS", 
	"JNR_SITE_PROFILE___AVG_PIKS_PER_PIKR as AVG_PIKS_PER_PIKR", 
	"JNR_SITE_PROFILE___AVG_TMU_PER_PIKR as AVG_TMU_PER_PIKR", 
	"JNR_SITE_PROFILE___PICK_LOCN_ASSIGN_TYPE as PICK_LOCN_ASSIGN_TYPE", 
	"JNR_SITE_PROFILE___DIFF_PIKR_ON_AREA_CHG as DIFF_PIKR_ON_AREA_CHG", 
	"JNR_SITE_PROFILE___DIFF_PIKR_ON_ZONE_CHG as DIFF_PIKR_ON_ZONE_CHG", 
	"JNR_SITE_PROFILE___DIFF_PIKR_ON_AISLE_CHG as DIFF_PIKR_ON_AISLE_CHG", 
	"JNR_SITE_PROFILE___DIFF_PIKR_ON_BAY_CHG as DIFF_PIKR_ON_BAY_CHG", 
	"JNR_SITE_PROFILE___DIFF_PIKR_ON_LVL_CHG as DIFF_PIKR_ON_LVL_CHG", 
	"JNR_SITE_PROFILE___DIFF_PIKR_ON_POSN_CHG as DIFF_PIKR_ON_POSN_CHG", 
	"JNR_SITE_PROFILE___SAME_PIKR_FOR_AREA as SAME_PIKR_FOR_AREA", 
	"JNR_SITE_PROFILE___SAME_PIKR_FOR_ZONE as SAME_PIKR_FOR_ZONE", 
	"JNR_SITE_PROFILE___SAME_PIKR_FOR_AISLE as SAME_PIKR_FOR_AISLE", 
	"JNR_SITE_PROFILE___SAME_PIKR_FOR_BAY as SAME_PIKR_FOR_BAY", 
	"JNR_SITE_PROFILE___SAME_PIKR_FOR_LVL as SAME_PIKR_FOR_LVL", 
	"JNR_SITE_PROFILE___SAME_PIKR_FOR_POSN as SAME_PIKR_FOR_POSN", 
	"JNR_SITE_PROFILE___OK_TO_PICK as OK_TO_PICK", 
	"JNR_SITE_PROFILE___OK_TO_PACK as OK_TO_PACK", 
	"JNR_SITE_PROFILE___OK_TO_REPL as OK_TO_REPL", 
	"JNR_SITE_PROFILE___OK_TO_INDUC as OK_TO_INDUC", 
	"JNR_SITE_PROFILE___OK_TO_MISC_1 as OK_TO_MISC_1", 
	"JNR_SITE_PROFILE___OK_TO_MISC_2 as OK_TO_MISC_2", 
	"JNR_SITE_PROFILE___START_PICK_DATE_TIME as START_PICK_DATE_TIME", 
	"JNR_SITE_PROFILE___END_PICK_DATE_TIME as END_PICK_DATE_TIME", 
	"JNR_SITE_PROFILE___START_PACK_DATE_TIME as START_PACK_DATE_TIME", 
	"JNR_SITE_PROFILE___END_PACK_DATE_TIME as END_PACK_DATE_TIME", 
	"JNR_SITE_PROFILE___START_REPL_DATE_TIME as START_REPL_DATE_TIME", 
	"JNR_SITE_PROFILE___END_REPL_DATE_TIME as END_REPL_DATE_TIME", 
	"JNR_SITE_PROFILE___START_INDUC_DATE_TIME as START_INDUC_DATE_TIME", 
	"JNR_SITE_PROFILE___END_INDUC_DATE_TIME as END_INDUC_DATE_TIME", 
	"JNR_SITE_PROFILE___START_MISC_1_DATE_TIME as START_MISC_1_DATE_TIME", 
	"JNR_SITE_PROFILE___END_MISC_1_DATE_TIME as END_MISC_1_DATE_TIME", 
	"JNR_SITE_PROFILE___START_MISC_2_DATE_TIME as START_MISC_2_DATE_TIME", 
	"JNR_SITE_PROFILE___END_MISC_2_DATE_TIME as END_MISC_2_DATE_TIME", 
	"JNR_SITE_PROFILE___CMPLTD_DATE_TIME as CMPLTD_DATE_TIME", 
	"JNR_SITE_PROFILE___GRP_PKT_BY_SWC_NBR as GRP_PKT_BY_SWC_NBR", 
	"JNR_SITE_PROFILE___PULL_ALL_SWC as PULL_ALL_SWC", 
	"JNR_SITE_PROFILE___ZONE_PICK_METHOD as ZONE_PICK_METHOD", 
	"JNR_SITE_PROFILE___WAVE_TYPE_INDIC as WAVE_TYPE_INDIC", 
	"JNR_SITE_PROFILE___REJECT_DISTRO_RULE as REJECT_DISTRO_RULE", 
	"JNR_SITE_PROFILE___RETAIL_MAX_UNITS as RETAIL_MAX_UNITS", 
	"JNR_SITE_PROFILE___RETAIL_UNIT_PCNT_OVER as RETAIL_UNIT_PCNT_OVER", 
	"JNR_SITE_PROFILE___RETAIL_MAX_SKUS as RETAIL_MAX_SKUS", 
	"JNR_SITE_PROFILE___RETAIL_MAX_STORES as RETAIL_MAX_STORES", 
	"JNR_SITE_PROFILE___RETAIL_MAX_ROUTES as RETAIL_MAX_ROUTES", 
	"JNR_SITE_PROFILE___BULK_WAVE_BAL_FROM_ACTV as BULK_WAVE_BAL_FROM_ACTV", 
	"JNR_SITE_PROFILE___PROC_ATTR_1 as PROC_ATTR_1", 
	"JNR_SITE_PROFILE___PROC_ATTR_2 as PROC_ATTR_2", 
	"JNR_SITE_PROFILE___PROC_ATTR_3 as PROC_ATTR_3", 
	"JNR_SITE_PROFILE___PROC_ATTR_4 as PROC_ATTR_4", 
	"JNR_SITE_PROFILE___PROC_ATTR_5 as PROC_ATTR_5", 
	"JNR_SITE_PROFILE___SPL_INSTR_CODE_1 as SPL_INSTR_CODE_1", 
	"JNR_SITE_PROFILE___SPL_INSTR_CODE_2 as SPL_INSTR_CODE_2", 
	"JNR_SITE_PROFILE___SPL_INSTR_CODE_3 as SPL_INSTR_CODE_3", 
	"JNR_SITE_PROFILE___SPL_INSTR_CODE_4 as SPL_INSTR_CODE_4", 
	"JNR_SITE_PROFILE___SPL_INSTR_CODE_5 as SPL_INSTR_CODE_5", 
	"JNR_SITE_PROFILE___CREATE_DATE_TIME as CREATE_DATE_TIME", 
	"JNR_SITE_PROFILE___MOD_DATE_TIME as MOD_DATE_TIME", 
	"JNR_SITE_PROFILE___USER_ID as USER_ID", 
	"JNR_SITE_PROFILE___PRT_CS_LABELS_W_WAVE as PRT_CS_LABELS_W_WAVE", 
	"JNR_SITE_PROFILE___CREATE_SHPMT as CREATE_SHPMT", 
	"JNR_SITE_PROFILE___CREATE_LOAD as CREATE_LOAD", 
	"JNR_SITE_PROFILE___CHG_WO_QTY as CHG_WO_QTY", 
	"JNR_SITE_PROFILE___PACK_CMPL_W_WAVE as PACK_CMPL_W_WAVE", 
	"JNR_SITE_PROFILE___DLVRY_WIN_RANGE_CODE as DLVRY_WIN_RANGE_CODE", 
	"JNR_SITE_PROFILE___DFLT_PLT_TYPE as DFLT_PLT_TYPE", 
	"JNR_SITE_PROFILE___PACK_WAVE_PARM_ID as PACK_WAVE_PARM_ID", 
	"JNR_SITE_PROFILE___CAT_PARM_ID as CAT_PARM_ID", 
	"JNR_SITE_PROFILE___DESEL_SNGL_FLAG as DESEL_SNGL_FLAG", 
	"JNR_SITE_PROFILE___ALLOC_TYPE as ALLOC_TYPE", 
	"JNR_SITE_PROFILE___FORCE_ALLOC_TYPE as FORCE_ALLOC_TYPE", 
	"JNR_SITE_PROFILE___FORCE_PICK_LOCN_ASSIGN_TYPE as FORCE_PICK_LOCN_ASSIGN_TYPE", 
	"JNR_SITE_PROFILE___BULK_PICK_ZONE as BULK_PICK_ZONE", 
	"JNR_SITE_PROFILE___CONSOL_PLTZ_CARTONS_FLAG as CONSOL_PLTZ_CARTONS_FLAG", 
	"JNR_SITE_PROFILE___ACTV_REPL_ORGN as ACTV_REPL_ORGN", 
	"JNR_SITE_PROFILE___MAX_CARTONS as MAX_CARTONS", 
	"JNR_SITE_PROFILE___MAX_PICK_WAVES as MAX_PICK_WAVES", 
	"JNR_SITE_PROFILE___HOLD_PRINT as HOLD_PRINT", 
	"JNR_SITE_PROFILE___SUPPR_PR40_REPL as SUPPR_PR40_REPL", 
	"JNR_SITE_PROFILE___COMB_4050_REPL as COMB_4050_REPL", 
	"JNR_SITE_PROFILE___SUPPR_PR60_REPL as SUPPR_PR60_REPL", 
	"JNR_SITE_PROFILE___LOAD_PLAN as LOAD_PLAN", 
	"JNR_SITE_PROFILE___ASSIGN_NEW_LOAD as ASSIGN_NEW_LOAD", 
	"JNR_SITE_PROFILE___RESV_BAL as RESV_BAL", 
	"JNR_SITE_PROFILE___RESV_BALANCE_INT as RESV_BALANCE_INT", 
	"JNR_SITE_PROFILE___ORDER_RND_FLAG as ORDER_RND_FLAG", 
	"JNR_SITE_PROFILE___ALLOC_REMAIN as ALLOC_REMAIN", 
	"JNR_SITE_PROFILE___MHE_FLAG as MHE_FLAG", 
	"JNR_SITE_PROFILE___MHE_ONE_SEND_FLAG as MHE_ONE_SEND_FLAG", 
	"JNR_SITE_PROFILE___MHE_PICK_DEST_LEVEL as MHE_PICK_DEST_LEVEL", 
	"JNR_SITE_PROFILE___SHIP_DATE_TIME as SHIP_DATE_TIME", 
	"JNR_SITE_PROFILE___COLLATE_PRTR_REQSTR as COLLATE_PRTR_REQSTR", 
	"JNR_SITE_PROFILE___MAX_DYNAMIC_LOCN_OPTN as MAX_DYNAMIC_LOCN_OPTN", 
	"JNR_SITE_PROFILE___FORCE_SHIP_DATE_FLAG as FORCE_SHIP_DATE_FLAG", 
	"JNR_SITE_PROFILE___MAX_WT as MAX_WT", 
	"JNR_SITE_PROFILE___MAX_VOL as MAX_VOL", 
	"JNR_SITE_PROFILE___BULK_PICK_ASSIGN_TYPE as BULK_PICK_ASSIGN_TYPE", 
	"JNR_SITE_PROFILE___REPL_WAVE as REPL_WAVE", 
	"JNR_SITE_PROFILE___RESEQ_ACTIV_LOC as RESEQ_ACTIV_LOC", 
	"JNR_SITE_PROFILE___VOCO_GRP_CARTONS_TO_TASK as VOCO_GRP_CARTONS_TO_TASK", 
	"JNR_SITE_PROFILE___VOCO_MAX_CARTON_ON_TASK as VOCO_MAX_CARTON_ON_TASK", 
	"JNR_SITE_PROFILE___WM_VERSION_ID as WM_VERSION_ID", 
	"JNR_SITE_PROFILE___TC_COMPANY_ID as TC_COMPANY_ID", 
	"JNR_SITE_PROFILE___MAX_ORDER_LINES as MAX_ORDER_LINES", 
	"JNR_SITE_PROFILE___CHASE_WAVE as CHASE_WAVE", 
	"JNR_SITE_PROFILE___DEFAULT_QUEUE_PRTY as DEFAULT_QUEUE_PRTY", 
	"JNR_SITE_PROFILE___ALLOC_LOGGING as ALLOC_LOGGING", 
	"JNR_SITE_PROFILE___CREATED_DTTM as CREATED_DTTM", 
	"JNR_SITE_PROFILE___LAST_UPDATED_DTTM as LAST_UPDATED_DTTM", 
	"JNR_SITE_PROFILE___CARTON_BREAK_ON_LOCN_CLASS as CARTON_BREAK_ON_LOCN_CLASS", 
	"JNR_SITE_PROFILE___DESELECT_UNALLOCATED_SINGLES as DESELECT_UNALLOCATED_SINGLES", 
	"JNR_SITE_PROFILE___CARTON_TYPE_EVENT_ID as CARTON_TYPE_EVENT_ID", 
	"JNR_SITE_PROFILE___CHUTE_ASSIGN_TYPE_EVENT_ID as CHUTE_ASSIGN_TYPE_EVENT_ID", 
	"JNR_SITE_PROFILE___LPN_BRK_ATTRIB_EVENT_ID as LPN_BRK_ATTRIB_EVENT_ID", 
	"JNR_SITE_PROFILE___IGNORE_SINGLES_PROCESSING as IGNORE_SINGLES_PROCESSING", 
	"JNR_SITE_PROFILE___HLD_RLS_FLAG as HLD_RLS_FLAG", 
	"JNR_SITE_PROFILE___MAX_NBR_PACK_WAVES_TO_RLS as MAX_NBR_PACK_WAVES_TO_RLS", 
	"JNR_SITE_PROFILE___REPLEN_BUMP_UP as REPLEN_BUMP_UP", 
	"JNR_SITE_PROFILE___RETAIN_PALLET_ID as RETAIN_PALLET_ID", 
	"JNR_SITE_PROFILE___ORDER_SEL_LOGGING as ORDER_SEL_LOGGING", 
	"JNR_SITE_PROFILE___AGG_LOGGING as AGG_LOGGING", 
	"JNR_SITE_PROFILE___CUB_LOGGING as CUB_LOGGING", 
	"JNR_SITE_PROFILE___PCK_WAVE_LOGGING as PCK_WAVE_LOGGING", 
	"JNR_SITE_PROFILE___TSK_GEN_LOGGING as TSK_GEN_LOGGING", 
	"JNR_SITE_PROFILE___LABEL_PRNT_LOGGING as LABEL_PRNT_LOGGING", 
	"JNR_SITE_PROFILE___ORDER_SEQ_LOGGING as ORDER_SEQ_LOGGING", 
	"JNR_SITE_PROFILE___ORDER_CNSOL_LOGGING as ORDER_CNSOL_LOGGING", 
	"JNR_SITE_PROFILE___RELEASE_ALL_TASK as RELEASE_ALL_TASK", 
	"JNR_SITE_PROFILE___FORCE_ORDER_STREAMING as FORCE_ORDER_STREAMING", 
	"JNR_SITE_PROFILE___CUBING_ACTION_FOR_FAILED_ORDER as CUBING_ACTION_FOR_FAILED_ORDER", 
	"JNR_SITE_PROFILE___NBR_ALLOCATION_THREAD as NBR_ALLOCATION_THREAD", 
	"SQ_Shortcut_to_WM_WAVE_PARM___LOCATION_ID as i_LOCATION_ID", 
	"SQ_Shortcut_to_WM_WAVE_PARM___WM_WAVE_PARM_ID as i_WM_WAVE_PARM_ID", 
	"SQ_Shortcut_to_WM_WAVE_PARM___WM_CREATED_TSTMP as WM_CREATED_TSTMP", 
	"SQ_Shortcut_to_WM_WAVE_PARM___WM_LAST_UPDATED_TSTMP as i_WM_LAST_UPDATED_TSTMP", 
	"SQ_Shortcut_to_WM_WAVE_PARM___WM_CREATE_TSTMP as i_WM_CREATE_TSTMP", 
	"SQ_Shortcut_to_WM_WAVE_PARM___WM_MOD_TSTMP as i_WM_MOD_TSTMP", 
	"SQ_Shortcut_to_WM_WAVE_PARM___LOAD_TSTMP as i_LOAD_TSTMP")

# COMMAND ----------
# Processing node FIL_UNCHANGED_RECORDS, type FILTER 
# COLUMN COUNT: 200

# for each involved DataFrame, append the dataframe name to each column
JNR_WM_WAVE_PARM_temp = JNR_WM_WAVE_PARM.toDF(*["JNR_WM_WAVE_PARM___" + col for col in JNR_WM_WAVE_PARM.columns])

FIL_UNCHANGED_RECORDS = JNR_WM_WAVE_PARM_temp.selectExpr( 
	"JNR_WM_WAVE_PARM___LOCATION_ID as LOCATION_ID", 
	"JNR_WM_WAVE_PARM___WAVE_PARM_ID as WAVE_PARM_ID", 
	"JNR_WM_WAVE_PARM___WHSE as WHSE", 
	"JNR_WM_WAVE_PARM___DAY_OF_WEEK as DAY_OF_WEEK", 
	"JNR_WM_WAVE_PARM___SHIFT_NBR as SHIFT_NBR", 
	"JNR_WM_WAVE_PARM___REC_TYPE as REC_TYPE", 
	"JNR_WM_WAVE_PARM___WAVE_NBR as WAVE_NBR", 
	"JNR_WM_WAVE_PARM___WAVE_DESC as WAVE_DESC", 
	"JNR_WM_WAVE_PARM___MAX_UNITS as MAX_UNITS", 
	"JNR_WM_WAVE_PARM___MAX_ORDERS as MAX_ORDERS", 
	"JNR_WM_WAVE_PARM___WAVE_CMPL_STAT_CODE as WAVE_CMPL_STAT_CODE", 
	"JNR_WM_WAVE_PARM___WAVE_STAT_CODE as WAVE_STAT_CODE", 
	"JNR_WM_WAVE_PARM___WAVE_STAT_DATE_TIME as WAVE_STAT_DATE_TIME", 
	"JNR_WM_WAVE_PARM___PICK_STAT_CODE as PICK_STAT_CODE", 
	"JNR_WM_WAVE_PARM___PACK_STAT_CODE as PACK_STAT_CODE", 
	"JNR_WM_WAVE_PARM___REPL_STAT_CODE as REPL_STAT_CODE", 
	"JNR_WM_WAVE_PARM___INDUC_STAT_CODE as INDUC_STAT_CODE", 
	"JNR_WM_WAVE_PARM___MISC_STAT_CODE_1 as MISC_STAT_CODE_1", 
	"JNR_WM_WAVE_PARM___MISC_STAT_CODE_2 as MISC_STAT_CODE_2", 
	"JNR_WM_WAVE_PARM___SCHED_DLVRY_DATE as SCHED_DLVRY_DATE", 
	"JNR_WM_WAVE_PARM___SCHED_WAVE as SCHED_WAVE", 
	"JNR_WM_WAVE_PARM___NBR_OF_PKTS as NBR_OF_PKTS", 
	"JNR_WM_WAVE_PARM___NBR_OF_CARTONS as NBR_OF_CARTONS", 
	"JNR_WM_WAVE_PARM___NBR_OF_LOCN as NBR_OF_LOCN", 
	"JNR_WM_WAVE_PARM___NBR_OF_CHUTE as NBR_OF_CHUTE", 
	"JNR_WM_WAVE_PARM___NBR_OF_PLT_POSN as NBR_OF_PLT_POSN", 
	"JNR_WM_WAVE_PARM___ASSIGN_PLT_POSN as ASSIGN_PLT_POSN", 
	"JNR_WM_WAVE_PARM___WAVE_PROC_TYPE as WAVE_PROC_TYPE", 
	"JNR_WM_WAVE_PARM___WAVE_PARM_TEMPLATE_ID as WAVE_PARM_TEMPLATE_ID", 
	"JNR_WM_WAVE_PARM___FORCE_WPT as FORCE_WPT", 
	"JNR_WM_WAVE_PARM___REPL_TRIG as REPL_TRIG", 
	"JNR_WM_WAVE_PARM___RTE_W_WAVE as RTE_W_WAVE", 
	"JNR_WM_WAVE_PARM___CHG_PKT_QTY as CHG_PKT_QTY", 
	"JNR_WM_WAVE_PARM___LABEL_PRTR_REQSTR as LABEL_PRTR_REQSTR", 
	"JNR_WM_WAVE_PARM___RPT_PRTR_REQSTR as RPT_PRTR_REQSTR", 
	"JNR_WM_WAVE_PARM___CARTON_BREAK_ON_AREA_CHG as CARTON_BREAK_ON_AREA_CHG", 
	"JNR_WM_WAVE_PARM___CARTON_BREAK_ON_ZONE_CHG as CARTON_BREAK_ON_ZONE_CHG", 
	"JNR_WM_WAVE_PARM___CARTON_BREAK_ON_AISLE_CHG as CARTON_BREAK_ON_AISLE_CHG", 
	"JNR_WM_WAVE_PARM___PKT_CONSOL_REJECT_RULE as PKT_CONSOL_REJECT_RULE", 
	"JNR_WM_WAVE_PARM___ASSIGN_PRO_NBR as ASSIGN_PRO_NBR", 
	"JNR_WM_WAVE_PARM___SHIP_VIA as SHIP_VIA", 
	"JNR_WM_WAVE_PARM___SWC_NBR as SWC_NBR", 
	"JNR_WM_WAVE_PARM___MANIF_NBR as MANIF_NBR", 
	"JNR_WM_WAVE_PARM___BOL as BOL", 
	"JNR_WM_WAVE_PARM___SHPMT_NBR as SHPMT_NBR", 
	"JNR_WM_WAVE_PARM___SWC_NBR_FLAG as SWC_NBR_FLAG", 
	"JNR_WM_WAVE_PARM___MANIF_FLAG as MANIF_FLAG", 
	"JNR_WM_WAVE_PARM___BOL_FLAG as BOL_FLAG", 
	"JNR_WM_WAVE_PARM___SHPMT_FLAG as SHPMT_FLAG", 
	"JNR_WM_WAVE_PARM___CLEAR_SPUR_LOCN as CLEAR_SPUR_LOCN", 
	"JNR_WM_WAVE_PARM___SPUR as SPUR", 
	"JNR_WM_WAVE_PARM___XCEED_CAPCTY_FLAG as XCEED_CAPCTY_FLAG", 
	"JNR_WM_WAVE_PARM___FILL_CAPCTY_STRK as FILL_CAPCTY_STRK", 
	"JNR_WM_WAVE_PARM___CONSL_LOCN_CLEAR_METHD as CONSL_LOCN_CLEAR_METHD", 
	"JNR_WM_WAVE_PARM___PERP_PLT_POSN as PERP_PLT_POSN", 
	"JNR_WM_WAVE_PARM___NBR_OF_LABELS_PER_SPOOL as NBR_OF_LABELS_PER_SPOOL", 
	"JNR_WM_WAVE_PARM___NBR_OF_LABELS_PER_ROW as NBR_OF_LABELS_PER_ROW", 
	"JNR_WM_WAVE_PARM___PKT_CONSOL_PROF as PKT_CONSOL_PROF", 
	"JNR_WM_WAVE_PARM___PKT_CONSOL_DETRM_TYPE as PKT_CONSOL_DETRM_TYPE", 
	"JNR_WM_WAVE_PARM___SKU_CNSTR as SKU_CNSTR", 
	"JNR_WM_WAVE_PARM___SKU_SUB as SKU_SUB", 
	"JNR_WM_WAVE_PARM___USE_INBD_LPN_AS_OUTBD_LPN as USE_INBD_LPN_AS_OUTBD_LPN", 
	"JNR_WM_WAVE_PARM___CARTON_TYPE as CARTON_TYPE", 
	"JNR_WM_WAVE_PARM___NBR_OF_PIKRS_PAKRS as NBR_OF_PIKRS_PAKRS", 
	"JNR_WM_WAVE_PARM___AVG_PIKS_PER_PIKR as AVG_PIKS_PER_PIKR", 
	"JNR_WM_WAVE_PARM___AVG_TMU_PER_PIKR as AVG_TMU_PER_PIKR", 
	"JNR_WM_WAVE_PARM___PICK_LOCN_ASSIGN_TYPE as PICK_LOCN_ASSIGN_TYPE", 
	"JNR_WM_WAVE_PARM___DIFF_PIKR_ON_AREA_CHG as DIFF_PIKR_ON_AREA_CHG", 
	"JNR_WM_WAVE_PARM___DIFF_PIKR_ON_ZONE_CHG as DIFF_PIKR_ON_ZONE_CHG", 
	"JNR_WM_WAVE_PARM___DIFF_PIKR_ON_AISLE_CHG as DIFF_PIKR_ON_AISLE_CHG", 
	"JNR_WM_WAVE_PARM___DIFF_PIKR_ON_BAY_CHG as DIFF_PIKR_ON_BAY_CHG", 
	"JNR_WM_WAVE_PARM___DIFF_PIKR_ON_LVL_CHG as DIFF_PIKR_ON_LVL_CHG", 
	"JNR_WM_WAVE_PARM___DIFF_PIKR_ON_POSN_CHG as DIFF_PIKR_ON_POSN_CHG", 
	"JNR_WM_WAVE_PARM___SAME_PIKR_FOR_AREA as SAME_PIKR_FOR_AREA", 
	"JNR_WM_WAVE_PARM___SAME_PIKR_FOR_ZONE as SAME_PIKR_FOR_ZONE", 
	"JNR_WM_WAVE_PARM___SAME_PIKR_FOR_AISLE as SAME_PIKR_FOR_AISLE", 
	"JNR_WM_WAVE_PARM___SAME_PIKR_FOR_BAY as SAME_PIKR_FOR_BAY", 
	"JNR_WM_WAVE_PARM___SAME_PIKR_FOR_LVL as SAME_PIKR_FOR_LVL", 
	"JNR_WM_WAVE_PARM___SAME_PIKR_FOR_POSN as SAME_PIKR_FOR_POSN", 
	"JNR_WM_WAVE_PARM___OK_TO_PICK as OK_TO_PICK", 
	"JNR_WM_WAVE_PARM___OK_TO_PACK as OK_TO_PACK", 
	"JNR_WM_WAVE_PARM___OK_TO_REPL as OK_TO_REPL", 
	"JNR_WM_WAVE_PARM___OK_TO_INDUC as OK_TO_INDUC", 
	"JNR_WM_WAVE_PARM___OK_TO_MISC_1 as OK_TO_MISC_1", 
	"JNR_WM_WAVE_PARM___OK_TO_MISC_2 as OK_TO_MISC_2", 
	"JNR_WM_WAVE_PARM___START_PICK_DATE_TIME as START_PICK_DATE_TIME", 
	"JNR_WM_WAVE_PARM___END_PICK_DATE_TIME as END_PICK_DATE_TIME", 
	"JNR_WM_WAVE_PARM___START_PACK_DATE_TIME as START_PACK_DATE_TIME", 
	"JNR_WM_WAVE_PARM___END_PACK_DATE_TIME as END_PACK_DATE_TIME", 
	"JNR_WM_WAVE_PARM___START_REPL_DATE_TIME as START_REPL_DATE_TIME", 
	"JNR_WM_WAVE_PARM___END_REPL_DATE_TIME as END_REPL_DATE_TIME", 
	"JNR_WM_WAVE_PARM___START_INDUC_DATE_TIME as START_INDUC_DATE_TIME", 
	"JNR_WM_WAVE_PARM___END_INDUC_DATE_TIME as END_INDUC_DATE_TIME", 
	"JNR_WM_WAVE_PARM___START_MISC_1_DATE_TIME as START_MISC_1_DATE_TIME", 
	"JNR_WM_WAVE_PARM___END_MISC_1_DATE_TIME as END_MISC_1_DATE_TIME", 
	"JNR_WM_WAVE_PARM___START_MISC_2_DATE_TIME as START_MISC_2_DATE_TIME", 
	"JNR_WM_WAVE_PARM___END_MISC_2_DATE_TIME as END_MISC_2_DATE_TIME", 
	"JNR_WM_WAVE_PARM___CMPLTD_DATE_TIME as CMPLTD_DATE_TIME", 
	"JNR_WM_WAVE_PARM___GRP_PKT_BY_SWC_NBR as GRP_PKT_BY_SWC_NBR", 
	"JNR_WM_WAVE_PARM___PULL_ALL_SWC as PULL_ALL_SWC", 
	"JNR_WM_WAVE_PARM___ZONE_PICK_METHOD as ZONE_PICK_METHOD", 
	"JNR_WM_WAVE_PARM___WAVE_TYPE_INDIC as WAVE_TYPE_INDIC", 
	"JNR_WM_WAVE_PARM___REJECT_DISTRO_RULE as REJECT_DISTRO_RULE", 
	"JNR_WM_WAVE_PARM___RETAIL_MAX_UNITS as RETAIL_MAX_UNITS", 
	"JNR_WM_WAVE_PARM___RETAIL_UNIT_PCNT_OVER as RETAIL_UNIT_PCNT_OVER", 
	"JNR_WM_WAVE_PARM___RETAIL_MAX_SKUS as RETAIL_MAX_SKUS", 
	"JNR_WM_WAVE_PARM___RETAIL_MAX_STORES as RETAIL_MAX_STORES", 
	"JNR_WM_WAVE_PARM___RETAIL_MAX_ROUTES as RETAIL_MAX_ROUTES", 
	"JNR_WM_WAVE_PARM___BULK_WAVE_BAL_FROM_ACTV as BULK_WAVE_BAL_FROM_ACTV", 
	"JNR_WM_WAVE_PARM___PROC_ATTR_1 as PROC_ATTR_1", 
	"JNR_WM_WAVE_PARM___PROC_ATTR_2 as PROC_ATTR_2", 
	"JNR_WM_WAVE_PARM___PROC_ATTR_3 as PROC_ATTR_3", 
	"JNR_WM_WAVE_PARM___PROC_ATTR_4 as PROC_ATTR_4", 
	"JNR_WM_WAVE_PARM___PROC_ATTR_5 as PROC_ATTR_5", 
	"JNR_WM_WAVE_PARM___SPL_INSTR_CODE_1 as SPL_INSTR_CODE_1", 
	"JNR_WM_WAVE_PARM___SPL_INSTR_CODE_2 as SPL_INSTR_CODE_2", 
	"JNR_WM_WAVE_PARM___SPL_INSTR_CODE_3 as SPL_INSTR_CODE_3", 
	"JNR_WM_WAVE_PARM___SPL_INSTR_CODE_4 as SPL_INSTR_CODE_4", 
	"JNR_WM_WAVE_PARM___SPL_INSTR_CODE_5 as SPL_INSTR_CODE_5", 
	"JNR_WM_WAVE_PARM___CREATE_DATE_TIME as CREATE_DATE_TIME", 
	"JNR_WM_WAVE_PARM___MOD_DATE_TIME as MOD_DATE_TIME", 
	"JNR_WM_WAVE_PARM___USER_ID as USER_ID", 
	"JNR_WM_WAVE_PARM___PRT_CS_LABELS_W_WAVE as PRT_CS_LABELS_W_WAVE", 
	"JNR_WM_WAVE_PARM___CREATE_SHPMT as CREATE_SHPMT", 
	"JNR_WM_WAVE_PARM___CREATE_LOAD as CREATE_LOAD", 
	"JNR_WM_WAVE_PARM___CHG_WO_QTY as CHG_WO_QTY", 
	"JNR_WM_WAVE_PARM___PACK_CMPL_W_WAVE as PACK_CMPL_W_WAVE", 
	"JNR_WM_WAVE_PARM___DLVRY_WIN_RANGE_CODE as DLVRY_WIN_RANGE_CODE", 
	"JNR_WM_WAVE_PARM___DFLT_PLT_TYPE as DFLT_PLT_TYPE", 
	"JNR_WM_WAVE_PARM___PACK_WAVE_PARM_ID as PACK_WAVE_PARM_ID", 
	"JNR_WM_WAVE_PARM___CAT_PARM_ID as CAT_PARM_ID", 
	"JNR_WM_WAVE_PARM___DESEL_SNGL_FLAG as DESEL_SNGL_FLAG", 
	"JNR_WM_WAVE_PARM___ALLOC_TYPE as ALLOC_TYPE", 
	"JNR_WM_WAVE_PARM___FORCE_ALLOC_TYPE as FORCE_ALLOC_TYPE", 
	"JNR_WM_WAVE_PARM___FORCE_PICK_LOCN_ASSIGN_TYPE as FORCE_PICK_LOCN_ASSIGN_TYPE", 
	"JNR_WM_WAVE_PARM___BULK_PICK_ZONE as BULK_PICK_ZONE", 
	"JNR_WM_WAVE_PARM___CONSOL_PLTZ_CARTONS_FLAG as CONSOL_PLTZ_CARTONS_FLAG", 
	"JNR_WM_WAVE_PARM___ACTV_REPL_ORGN as ACTV_REPL_ORGN", 
	"JNR_WM_WAVE_PARM___MAX_CARTONS as MAX_CARTONS", 
	"JNR_WM_WAVE_PARM___MAX_PICK_WAVES as MAX_PICK_WAVES", 
	"JNR_WM_WAVE_PARM___HOLD_PRINT as HOLD_PRINT", 
	"JNR_WM_WAVE_PARM___SUPPR_PR40_REPL as SUPPR_PR40_REPL", 
	"JNR_WM_WAVE_PARM___COMB_4050_REPL as COMB_4050_REPL", 
	"JNR_WM_WAVE_PARM___SUPPR_PR60_REPL as SUPPR_PR60_REPL", 
	"JNR_WM_WAVE_PARM___LOAD_PLAN as LOAD_PLAN", 
	"JNR_WM_WAVE_PARM___ASSIGN_NEW_LOAD as ASSIGN_NEW_LOAD", 
	"JNR_WM_WAVE_PARM___RESV_BAL as RESV_BAL", 
	"JNR_WM_WAVE_PARM___RESV_BALANCE_INT as RESV_BALANCE_INT", 
	"JNR_WM_WAVE_PARM___ORDER_RND_FLAG as ORDER_RND_FLAG", 
	"JNR_WM_WAVE_PARM___ALLOC_REMAIN as ALLOC_REMAIN", 
	"JNR_WM_WAVE_PARM___MHE_FLAG as MHE_FLAG", 
	"JNR_WM_WAVE_PARM___MHE_ONE_SEND_FLAG as MHE_ONE_SEND_FLAG", 
	"JNR_WM_WAVE_PARM___MHE_PICK_DEST_LEVEL as MHE_PICK_DEST_LEVEL", 
	"JNR_WM_WAVE_PARM___SHIP_DATE_TIME as SHIP_DATE_TIME", 
	"JNR_WM_WAVE_PARM___COLLATE_PRTR_REQSTR as COLLATE_PRTR_REQSTR", 
	"JNR_WM_WAVE_PARM___MAX_DYNAMIC_LOCN_OPTN as MAX_DYNAMIC_LOCN_OPTN", 
	"JNR_WM_WAVE_PARM___FORCE_SHIP_DATE_FLAG as FORCE_SHIP_DATE_FLAG", 
	"JNR_WM_WAVE_PARM___MAX_WT as MAX_WT", 
	"JNR_WM_WAVE_PARM___MAX_VOL as MAX_VOL", 
	"JNR_WM_WAVE_PARM___BULK_PICK_ASSIGN_TYPE as BULK_PICK_ASSIGN_TYPE", 
	"JNR_WM_WAVE_PARM___REPL_WAVE as REPL_WAVE", 
	"JNR_WM_WAVE_PARM___RESEQ_ACTIV_LOC as RESEQ_ACTIV_LOC", 
	"JNR_WM_WAVE_PARM___VOCO_GRP_CARTONS_TO_TASK as VOCO_GRP_CARTONS_TO_TASK", 
	"JNR_WM_WAVE_PARM___VOCO_MAX_CARTON_ON_TASK as VOCO_MAX_CARTON_ON_TASK", 
	"JNR_WM_WAVE_PARM___WM_VERSION_ID as WM_VERSION_ID", 
	"JNR_WM_WAVE_PARM___TC_COMPANY_ID as TC_COMPANY_ID", 
	"JNR_WM_WAVE_PARM___MAX_ORDER_LINES as MAX_ORDER_LINES", 
	"JNR_WM_WAVE_PARM___CHASE_WAVE as CHASE_WAVE", 
	"JNR_WM_WAVE_PARM___DEFAULT_QUEUE_PRTY as DEFAULT_QUEUE_PRTY", 
	"JNR_WM_WAVE_PARM___ALLOC_LOGGING as ALLOC_LOGGING", 
	"JNR_WM_WAVE_PARM___CREATED_DTTM as CREATED_DTTM", 
	"JNR_WM_WAVE_PARM___LAST_UPDATED_DTTM as LAST_UPDATED_DTTM", 
	"JNR_WM_WAVE_PARM___CARTON_BREAK_ON_LOCN_CLASS as CARTON_BREAK_ON_LOCN_CLASS", 
	"JNR_WM_WAVE_PARM___DESELECT_UNALLOCATED_SINGLES as DESELECT_UNALLOCATED_SINGLES", 
	"JNR_WM_WAVE_PARM___CARTON_TYPE_EVENT_ID as CARTON_TYPE_EVENT_ID", 
	"JNR_WM_WAVE_PARM___CHUTE_ASSIGN_TYPE_EVENT_ID as CHUTE_ASSIGN_TYPE_EVENT_ID", 
	"JNR_WM_WAVE_PARM___LPN_BRK_ATTRIB_EVENT_ID as LPN_BRK_ATTRIB_EVENT_ID", 
	"JNR_WM_WAVE_PARM___IGNORE_SINGLES_PROCESSING as IGNORE_SINGLES_PROCESSING", 
	"JNR_WM_WAVE_PARM___HLD_RLS_FLAG as HLD_RLS_FLAG", 
	"JNR_WM_WAVE_PARM___MAX_NBR_PACK_WAVES_TO_RLS as MAX_NBR_PACK_WAVES_TO_RLS", 
	"JNR_WM_WAVE_PARM___REPLEN_BUMP_UP as REPLEN_BUMP_UP", 
	"JNR_WM_WAVE_PARM___RETAIN_PALLET_ID as RETAIN_PALLET_ID", 
	"JNR_WM_WAVE_PARM___ORDER_SEL_LOGGING as ORDER_SEL_LOGGING", 
	"JNR_WM_WAVE_PARM___AGG_LOGGING as AGG_LOGGING", 
	"JNR_WM_WAVE_PARM___CUB_LOGGING as CUB_LOGGING", 
	"JNR_WM_WAVE_PARM___PCK_WAVE_LOGGING as PCK_WAVE_LOGGING", 
	"JNR_WM_WAVE_PARM___TSK_GEN_LOGGING as TSK_GEN_LOGGING", 
	"JNR_WM_WAVE_PARM___LABEL_PRNT_LOGGING as LABEL_PRNT_LOGGING", 
	"JNR_WM_WAVE_PARM___ORDER_SEQ_LOGGING as ORDER_SEQ_LOGGING", 
	"JNR_WM_WAVE_PARM___ORDER_CNSOL_LOGGING as ORDER_CNSOL_LOGGING", 
	"JNR_WM_WAVE_PARM___RELEASE_ALL_TASK as RELEASE_ALL_TASK", 
	"JNR_WM_WAVE_PARM___FORCE_ORDER_STREAMING as FORCE_ORDER_STREAMING", 
	"JNR_WM_WAVE_PARM___CUBING_ACTION_FOR_FAILED_ORDER as CUBING_ACTION_FOR_FAILED_ORDER", 
	"JNR_WM_WAVE_PARM___NBR_ALLOCATION_THREAD as NBR_ALLOCATION_THREAD", 
	"JNR_WM_WAVE_PARM___i_WM_WAVE_PARM_ID as i_WM_WAVE_PARM_ID", 
	"JNR_WM_WAVE_PARM___WM_CREATED_TSTMP as WM_CREATED_TSTMP", 
	"JNR_WM_WAVE_PARM___i_WM_LAST_UPDATED_TSTMP as i_WM_LAST_UPDATED_TSTMP", 
	"JNR_WM_WAVE_PARM___i_WM_CREATE_TSTMP as i_WM_CREATE_TSTMP", 
	"JNR_WM_WAVE_PARM___i_WM_MOD_TSTMP as i_WM_MOD_TSTMP", 
	"JNR_WM_WAVE_PARM___i_LOAD_TSTMP as i_LOAD_TSTMP").filter(expr("i_WM_WAVE_PARM_ID IS NULL OR (NOT i_WM_WAVE_PARM_ID IS NULL AND (COALESCE(CREATE_DATE_TIME, date'1900-01-01') != COALESCE(i_WM_CREATE_TSTMP, date'1900-01-01')) OR (COALESCE(MOD_DATE_TIME, date'1900-01-01') != COALESCE(i_WM_MOD_TSTMP, date'1900-01-01')) OR (COALESCE(CREATED_DTTM, date'1900-01-01') != COALESCE(WM_CREATED_TSTMP, date'1900-01-01')) OR (COALESCE(LAST_UPDATED_DTTM, date'1900-01-01') != COALESCE(i_WM_LAST_UPDATED_TSTMP, date'1900-01-01'))))")).withColumn("sys_row_id", monotonically_increasing_id())

# COMMAND ----------
# Processing node EXP_UPDATE_VALIDATOR, type EXPRESSION 
# COLUMN COUNT: 199

# for each involved DataFrame, append the dataframe name to each column
FIL_UNCHANGED_RECORDS_temp = FIL_UNCHANGED_RECORDS.toDF(*["FIL_UNCHANGED_RECORDS___" + col for col in FIL_UNCHANGED_RECORDS.columns])

EXP_UPDATE_VALIDATOR = FIL_UNCHANGED_RECORDS_temp.selectExpr( 
	"FIL_UNCHANGED_RECORDS___sys_row_id as sys_row_id", 
	"FIL_UNCHANGED_RECORDS___LOCATION_ID as LOCATION_ID", 
	"FIL_UNCHANGED_RECORDS___WAVE_PARM_ID as WAVE_PARM_ID", 
	"FIL_UNCHANGED_RECORDS___WHSE as WHSE", 
	"FIL_UNCHANGED_RECORDS___DAY_OF_WEEK as DAY_OF_WEEK", 
	"FIL_UNCHANGED_RECORDS___SHIFT_NBR as SHIFT_NBR_EXP", 
	"FIL_UNCHANGED_RECORDS___REC_TYPE as REC_TYPE", 
	"FIL_UNCHANGED_RECORDS___WAVE_NBR as WAVE_NBR", 
	"FIL_UNCHANGED_RECORDS___WAVE_DESC as WAVE_DESC", 
	"FIL_UNCHANGED_RECORDS___MAX_UNITS as MAX_UNITS", 
	"FIL_UNCHANGED_RECORDS___MAX_ORDERS as MAX_ORDERS", 
	"FIL_UNCHANGED_RECORDS___WAVE_CMPL_STAT_CODE as WAVE_CMPL_STAT_CODE", 
	"FIL_UNCHANGED_RECORDS___WAVE_STAT_CODE as WAVE_STAT_CODE", 
	"FIL_UNCHANGED_RECORDS___WAVE_STAT_DATE_TIME as WAVE_STAT_DATE_TIME", 
	"FIL_UNCHANGED_RECORDS___PICK_STAT_CODE as PICK_STAT_CODE", 
	"FIL_UNCHANGED_RECORDS___PACK_STAT_CODE as PACK_STAT_CODE", 
	"FIL_UNCHANGED_RECORDS___REPL_STAT_CODE as REPL_STAT_CODE", 
	"FIL_UNCHANGED_RECORDS___INDUC_STAT_CODE as INDUC_STAT_CODE", 
	"FIL_UNCHANGED_RECORDS___MISC_STAT_CODE_1 as MISC_STAT_CODE_1", 
	"FIL_UNCHANGED_RECORDS___MISC_STAT_CODE_2 as MISC_STAT_CODE_2", 
	"FIL_UNCHANGED_RECORDS___SCHED_DLVRY_DATE as SCHED_DLVRY_DATE", 
	"FIL_UNCHANGED_RECORDS___SCHED_WAVE as SCHED_WAVE", 
	"FIL_UNCHANGED_RECORDS___NBR_OF_PKTS as NBR_OF_PKTS", 
	"FIL_UNCHANGED_RECORDS___NBR_OF_CARTONS as NBR_OF_CARTONS", 
	"FIL_UNCHANGED_RECORDS___NBR_OF_LOCN as NBR_OF_LOCN", 
	"FIL_UNCHANGED_RECORDS___NBR_OF_CHUTE as NBR_OF_CHUTE", 
	"FIL_UNCHANGED_RECORDS___NBR_OF_PLT_POSN as NBR_OF_PLT_POSN", 
	"FIL_UNCHANGED_RECORDS___ASSIGN_PLT_POSN as ASSIGN_PLT_POSN", 
	"FIL_UNCHANGED_RECORDS___WAVE_PROC_TYPE as WAVE_PROC_TYPE", 
	"FIL_UNCHANGED_RECORDS___WAVE_PARM_TEMPLATE_ID as WAVE_PARM_TEMPLATE_ID", 
	"CASE WHEN TRIM(UPPER(FIL_UNCHANGED_RECORDS___FORCE_WPT)) IN ('1', 'Y') THEN '1' ELSE '0' END as FORCE_WPT_EXP", 
	"FIL_UNCHANGED_RECORDS___REPL_TRIG as REPL_TRIG", 
	"FIL_UNCHANGED_RECORDS___RTE_W_WAVE as RTE_W_WAVE", 
	"FIL_UNCHANGED_RECORDS___CHG_PKT_QTY as CHG_PKT_QTY", 
	"FIL_UNCHANGED_RECORDS___LABEL_PRTR_REQSTR as LABEL_PRTR_REQSTR", 
	"FIL_UNCHANGED_RECORDS___RPT_PRTR_REQSTR as RPT_PRTR_REQSTR", 
	"CASE WHEN TRIM(UPPER(FIL_UNCHANGED_RECORDS___CARTON_BREAK_ON_AREA_CHG)) IN ('1', 'Y') THEN '1' ELSE '0' END as CARTON_BREAK_ON_AREA_CHG_EXP", 
	"CASE WHEN TRIM(UPPER(FIL_UNCHANGED_RECORDS___CARTON_BREAK_ON_ZONE_CHG)) IN ('1', 'Y') THEN '1' ELSE '0' END as CARTON_BREAK_ON_ZONE_CHG_EXP", 
	"CASE WHEN TRIM(UPPER(FIL_UNCHANGED_RECORDS___CARTON_BREAK_ON_AISLE_CHG)) IN ('1', 'Y') THEN '1' ELSE '0' END as CARTON_BREAK_ON_AISLE_CHG_EXP", 
	"FIL_UNCHANGED_RECORDS___PKT_CONSOL_REJECT_RULE as PKT_CONSOL_REJECT_RULE", 
	"FIL_UNCHANGED_RECORDS___ASSIGN_PRO_NBR as ASSIGN_PRO_NBR", 
	"FIL_UNCHANGED_RECORDS___SHIP_VIA as SHIP_VIA", 
	"FIL_UNCHANGED_RECORDS___SWC_NBR as SWC_NBR", 
	"FIL_UNCHANGED_RECORDS___MANIF_NBR as MANIF_NBR", 
	"FIL_UNCHANGED_RECORDS___BOL as BOL", 
	"FIL_UNCHANGED_RECORDS___SHPMT_NBR as SHPMT_NBR", 
	"CASE WHEN TRIM(UPPER(FIL_UNCHANGED_RECORDS___SWC_NBR_FLAG)) IN ('1', 'Y') THEN '1' ELSE '0' END as SWC_NBR_FLAG_EXP", 
	"CASE WHEN TRIM(UPPER(FIL_UNCHANGED_RECORDS___MANIF_FLAG)) IN ('1', 'Y') THEN '1' ELSE '0' END as MANIF_FLAG_EXP", 
	"CASE WHEN TRIM(UPPER(FIL_UNCHANGED_RECORDS___BOL_FLAG)) IN ('1', 'Y') THEN '1' ELSE '0' END as BOL_FLAG_EXP", 
	"CASE WHEN TRIM(UPPER(FIL_UNCHANGED_RECORDS___SHPMT_FLAG)) IN ('1', 'Y') THEN '1' ELSE '0' END as SHPMT_FLAG_EXP", 
	"FIL_UNCHANGED_RECORDS___CLEAR_SPUR_LOCN as CLEAR_SPUR_LOCN", 
	"FIL_UNCHANGED_RECORDS___SPUR as SPUR", 
	"CASE WHEN TRIM(UPPER(FIL_UNCHANGED_RECORDS___XCEED_CAPCTY_FLAG)) IN ('1', 'Y') THEN '1' ELSE '0' END as XCEED_CAPCTY_FLAG_EXP", 
	"FIL_UNCHANGED_RECORDS___FILL_CAPCTY_STRK as FILL_CAPCTY_STRK", 
	"FIL_UNCHANGED_RECORDS___CONSL_LOCN_CLEAR_METHD as CONSL_LOCN_CLEAR_METHD", 
	"FIL_UNCHANGED_RECORDS___PERP_PLT_POSN as PERP_PLT_POSN", 
	"FIL_UNCHANGED_RECORDS___NBR_OF_LABELS_PER_SPOOL as NBR_OF_LABELS_PER_SPOOL", 
	"FIL_UNCHANGED_RECORDS___NBR_OF_LABELS_PER_ROW as NBR_OF_LABELS_PER_ROW", 
	"FIL_UNCHANGED_RECORDS___PKT_CONSOL_PROF as PKT_CONSOL_PROF", 
	"FIL_UNCHANGED_RECORDS___PKT_CONSOL_DETRM_TYPE as PKT_CONSOL_DETRM_TYPE", 
	"FIL_UNCHANGED_RECORDS___SKU_CNSTR as SKU_CNSTR", 
	"FIL_UNCHANGED_RECORDS___SKU_SUB as SKU_SUB", 
	"CASE WHEN TRIM(UPPER(FIL_UNCHANGED_RECORDS___USE_INBD_LPN_AS_OUTBD_LPN)) IN ('1', 'Y') THEN '1' ELSE '0' END as USE_INBD_LPN_AS_OUTBD_LPN_EXP", 
	"FIL_UNCHANGED_RECORDS___CARTON_TYPE as CARTON_TYPE", 
	"FIL_UNCHANGED_RECORDS___NBR_OF_PIKRS_PAKRS as NBR_OF_PIKRS_PAKRS", 
	"FIL_UNCHANGED_RECORDS___AVG_PIKS_PER_PIKR as AVG_PIKS_PER_PIKR", 
	"FIL_UNCHANGED_RECORDS___AVG_TMU_PER_PIKR as AVG_TMU_PER_PIKR", 
	"FIL_UNCHANGED_RECORDS___PICK_LOCN_ASSIGN_TYPE as PICK_LOCN_ASSIGN_TYPE", 
	"FIL_UNCHANGED_RECORDS___DIFF_PIKR_ON_AREA_CHG as DIFF_PIKR_ON_AREA_CHG", 
	"FIL_UNCHANGED_RECORDS___DIFF_PIKR_ON_ZONE_CHG as DIFF_PIKR_ON_ZONE_CHG", 
	"FIL_UNCHANGED_RECORDS___DIFF_PIKR_ON_AISLE_CHG as DIFF_PIKR_ON_AISLE_CHG", 
	"FIL_UNCHANGED_RECORDS___DIFF_PIKR_ON_BAY_CHG as DIFF_PIKR_ON_BAY_CHG", 
	"FIL_UNCHANGED_RECORDS___DIFF_PIKR_ON_LVL_CHG as DIFF_PIKR_ON_LVL_CHG", 
	"FIL_UNCHANGED_RECORDS___DIFF_PIKR_ON_POSN_CHG as DIFF_PIKR_ON_POSN_CHG", 
	"FIL_UNCHANGED_RECORDS___SAME_PIKR_FOR_AREA as SAME_PIKR_FOR_AREA", 
	"FIL_UNCHANGED_RECORDS___SAME_PIKR_FOR_ZONE as SAME_PIKR_FOR_ZONE", 
	"FIL_UNCHANGED_RECORDS___SAME_PIKR_FOR_AISLE as SAME_PIKR_FOR_AISLE", 
	"FIL_UNCHANGED_RECORDS___SAME_PIKR_FOR_BAY as SAME_PIKR_FOR_BAY", 
	"FIL_UNCHANGED_RECORDS___SAME_PIKR_FOR_LVL as SAME_PIKR_FOR_LVL", 
	"FIL_UNCHANGED_RECORDS___SAME_PIKR_FOR_POSN as SAME_PIKR_FOR_POSN", 
	"FIL_UNCHANGED_RECORDS___OK_TO_PICK as OK_TO_PICK", 
	"FIL_UNCHANGED_RECORDS___OK_TO_PACK as OK_TO_PACK", 
	"FIL_UNCHANGED_RECORDS___OK_TO_REPL as OK_TO_REPL", 
	"FIL_UNCHANGED_RECORDS___OK_TO_INDUC as OK_TO_INDUC", 
	"FIL_UNCHANGED_RECORDS___OK_TO_MISC_1 as OK_TO_MISC_1", 
	"FIL_UNCHANGED_RECORDS___OK_TO_MISC_2 as OK_TO_MISC_2", 
	"FIL_UNCHANGED_RECORDS___START_PICK_DATE_TIME as START_PICK_DATE_TIME", 
	"FIL_UNCHANGED_RECORDS___END_PICK_DATE_TIME as END_PICK_DATE_TIME", 
	"FIL_UNCHANGED_RECORDS___START_PACK_DATE_TIME as START_PACK_DATE_TIME", 
	"FIL_UNCHANGED_RECORDS___END_PACK_DATE_TIME as END_PACK_DATE_TIME", 
	"FIL_UNCHANGED_RECORDS___START_REPL_DATE_TIME as START_REPL_DATE_TIME", 
	"FIL_UNCHANGED_RECORDS___END_REPL_DATE_TIME as END_REPL_DATE_TIME", 
	"FIL_UNCHANGED_RECORDS___START_INDUC_DATE_TIME as START_INDUC_DATE_TIME", 
	"FIL_UNCHANGED_RECORDS___END_INDUC_DATE_TIME as END_INDUC_DATE_TIME", 
	"FIL_UNCHANGED_RECORDS___START_MISC_1_DATE_TIME as START_MISC_1_DATE_TIME", 
	"FIL_UNCHANGED_RECORDS___END_MISC_1_DATE_TIME as END_MISC_1_DATE_TIME", 
	"FIL_UNCHANGED_RECORDS___START_MISC_2_DATE_TIME as START_MISC_2_DATE_TIME", 
	"FIL_UNCHANGED_RECORDS___END_MISC_2_DATE_TIME as END_MISC_2_DATE_TIME", 
	"FIL_UNCHANGED_RECORDS___CMPLTD_DATE_TIME as CMPLTD_DATE_TIME", 
	"CASE WHEN TRIM(UPPER(FIL_UNCHANGED_RECORDS___GRP_PKT_BY_SWC_NBR)) IN ('1', 'Y') THEN '1' ELSE '0' END as GRP_PKT_BY_SWC_NBR_EXP", 
	"CASE WHEN TRIM(UPPER(FIL_UNCHANGED_RECORDS___PULL_ALL_SWC)) IN ('1', 'Y') THEN '1' ELSE '0' END as PULL_ALL_SWC_EXP", 
	"FIL_UNCHANGED_RECORDS___ZONE_PICK_METHOD as ZONE_PICK_METHOD", 
	"FIL_UNCHANGED_RECORDS___WAVE_TYPE_INDIC as WAVE_TYPE_INDIC", 
	"CASE WHEN TRIM(UPPER(FIL_UNCHANGED_RECORDS___REJECT_DISTRO_RULE)) IN ('1', 'Y') THEN '1' ELSE '0' END as REJECT_DISTRO_RULE_EXP", 
	"FIL_UNCHANGED_RECORDS___RETAIL_MAX_UNITS as RETAIL_MAX_UNITS", 
	"FIL_UNCHANGED_RECORDS___RETAIL_UNIT_PCNT_OVER as RETAIL_UNIT_PCNT_OVER", 
	"FIL_UNCHANGED_RECORDS___RETAIL_MAX_SKUS as RETAIL_MAX_SKUS", 
	"FIL_UNCHANGED_RECORDS___RETAIL_MAX_STORES as RETAIL_MAX_STORES", 
	"FIL_UNCHANGED_RECORDS___RETAIL_MAX_ROUTES as RETAIL_MAX_ROUTES", 
	"CASE WHEN TRIM(UPPER(FIL_UNCHANGED_RECORDS___BULK_WAVE_BAL_FROM_ACTV)) IN ('1', 'Y') THEN '1' ELSE '0' END as BULK_WAVE_BAL_FROM_ACTV_EXP", 
	"FIL_UNCHANGED_RECORDS___PROC_ATTR_1 as PROC_ATTR_1", 
	"FIL_UNCHANGED_RECORDS___PROC_ATTR_2 as PROC_ATTR_2", 
	"FIL_UNCHANGED_RECORDS___PROC_ATTR_3 as PROC_ATTR_3", 
	"FIL_UNCHANGED_RECORDS___PROC_ATTR_4 as PROC_ATTR_4", 
	"FIL_UNCHANGED_RECORDS___PROC_ATTR_5 as PROC_ATTR_5", 
	"FIL_UNCHANGED_RECORDS___SPL_INSTR_CODE_1 as SPL_INSTR_CODE_1", 
	"FIL_UNCHANGED_RECORDS___SPL_INSTR_CODE_2 as SPL_INSTR_CODE_2", 
	"FIL_UNCHANGED_RECORDS___SPL_INSTR_CODE_3 as SPL_INSTR_CODE_3", 
	"FIL_UNCHANGED_RECORDS___SPL_INSTR_CODE_4 as SPL_INSTR_CODE_4", 
	"FIL_UNCHANGED_RECORDS___SPL_INSTR_CODE_5 as SPL_INSTR_CODE_5", 
	"FIL_UNCHANGED_RECORDS___CREATE_DATE_TIME as CREATE_DATE_TIME", 
	"FIL_UNCHANGED_RECORDS___MOD_DATE_TIME as MOD_DATE_TIME", 
	"FIL_UNCHANGED_RECORDS___USER_ID as USER_ID", 
	"CASE WHEN TRIM(UPPER(FIL_UNCHANGED_RECORDS___PRT_CS_LABELS_W_WAVE)) IN ('1', 'Y') THEN '1' ELSE '0' END as PRT_CS_LABELS_W_WAVE_EXP", 
	"FIL_UNCHANGED_RECORDS___CREATE_SHPMT as CREATE_SHPMT", 
	"FIL_UNCHANGED_RECORDS___CREATE_LOAD as CREATE_LOAD", 
	"FIL_UNCHANGED_RECORDS___CHG_WO_QTY as CHG_WO_QTY", 
	"CASE WHEN TRIM(UPPER(FIL_UNCHANGED_RECORDS___PACK_CMPL_W_WAVE)) IN ('1', 'Y') THEN '1' ELSE '0' END as PACK_CMPL_W_WAVE_EXP", 
	"FIL_UNCHANGED_RECORDS___DLVRY_WIN_RANGE_CODE as DLVRY_WIN_RANGE_CODE", 
	"FIL_UNCHANGED_RECORDS___DFLT_PLT_TYPE as DFLT_PLT_TYPE", 
	"FIL_UNCHANGED_RECORDS___PACK_WAVE_PARM_ID as PACK_WAVE_PARM_ID", 
	"FIL_UNCHANGED_RECORDS___CAT_PARM_ID as CAT_PARM_ID", 
	"CASE WHEN TRIM(UPPER(FIL_UNCHANGED_RECORDS___DESEL_SNGL_FLAG)) IN ('1', 'Y') THEN '1' ELSE '0' END as DESEL_SNGL_FLAG_EXP", 
	"FIL_UNCHANGED_RECORDS___ALLOC_TYPE as ALLOC_TYPE", 
	"FIL_UNCHANGED_RECORDS___FORCE_ALLOC_TYPE as FORCE_ALLOC_TYPE", 
	"FIL_UNCHANGED_RECORDS___FORCE_PICK_LOCN_ASSIGN_TYPE as FORCE_PICK_LOCN_ASSIGN_TYPE", 
	"FIL_UNCHANGED_RECORDS___BULK_PICK_ZONE as BULK_PICK_ZONE", 
	"FIL_UNCHANGED_RECORDS___CONSOL_PLTZ_CARTONS_FLAG as CONSOL_PLTZ_CARTONS_FLAG_EXP", 
	"FIL_UNCHANGED_RECORDS___ACTV_REPL_ORGN as ACTV_REPL_ORGN", 
	"FIL_UNCHANGED_RECORDS___MAX_CARTONS as MAX_CARTONS", 
	"FIL_UNCHANGED_RECORDS___MAX_PICK_WAVES as MAX_PICK_WAVES", 
	"FIL_UNCHANGED_RECORDS___HOLD_PRINT as HOLD_PRINT", 
	"FIL_UNCHANGED_RECORDS___SUPPR_PR40_REPL as SUPPR_PR40_REPL", 
	"FIL_UNCHANGED_RECORDS___COMB_4050_REPL as COMB_4050_REPL", 
	"FIL_UNCHANGED_RECORDS___SUPPR_PR60_REPL as SUPPR_PR60_REPL", 
	"FIL_UNCHANGED_RECORDS___LOAD_PLAN as LOAD_PLAN", 
	"FIL_UNCHANGED_RECORDS___ASSIGN_NEW_LOAD as ASSIGN_NEW_LOAD", 
	"CASE WHEN TRIM(UPPER(FIL_UNCHANGED_RECORDS___RESV_BAL)) IN ('1', 'Y') THEN '1' ELSE '0' END as RESV_BAL_EXP", 
	"FIL_UNCHANGED_RECORDS___RESV_BALANCE_INT as RESV_BALANCE_INT", 
	"CASE WHEN TRIM(UPPER(FIL_UNCHANGED_RECORDS___ORDER_RND_FLAG)) IN ('1', 'Y') THEN '1' ELSE '0' END as ORDER_RND_FLAG_EXP", 
	"FIL_UNCHANGED_RECORDS___ALLOC_REMAIN as ALLOC_REMAIN", 
	"CASE WHEN TRIM(UPPER(FIL_UNCHANGED_RECORDS___MHE_FLAG)) IN ('1', 'Y') THEN '1' ELSE '0' END as MHE_FLAG_EXP", 
	"CASE WHEN TRIM(UPPER(FIL_UNCHANGED_RECORDS___MHE_ONE_SEND_FLAG)) IN ('1', 'Y') THEN '1' ELSE '0' END as MHE_ONE_SEND_FLAG_EXP", 
	"CASE WHEN TRIM(UPPER(FIL_UNCHANGED_RECORDS___MHE_PICK_DEST_LEVEL)) IN ('1', 'Y') THEN '1' ELSE '0' END as MHE_PICK_DEST_LEVEL_EXP", 
	"FIL_UNCHANGED_RECORDS___SHIP_DATE_TIME as SHIP_DATE_TIME", 
	"FIL_UNCHANGED_RECORDS___COLLATE_PRTR_REQSTR as COLLATE_PRTR_REQSTR", 
	"FIL_UNCHANGED_RECORDS___MAX_DYNAMIC_LOCN_OPTN as MAX_DYNAMIC_LOCN_OPTN", 
	"FIL_UNCHANGED_RECORDS___FORCE_SHIP_DATE_FLAG as FORCE_SHIP_DATE_FLAG_EXP", 
	"FIL_UNCHANGED_RECORDS___MAX_WT as MAX_WT", 
	"FIL_UNCHANGED_RECORDS___MAX_VOL as MAX_VOL", 
	"FIL_UNCHANGED_RECORDS___BULK_PICK_ASSIGN_TYPE as BULK_PICK_ASSIGN_TYPE", 
	"CASE WHEN TRIM(UPPER(FIL_UNCHANGED_RECORDS___REPL_WAVE)) IN ('1', 'Y') THEN '1' ELSE '0' END as REPL_WAVE_EXP", 
	"CASE WHEN TRIM(UPPER(FIL_UNCHANGED_RECORDS___RESEQ_ACTIV_LOC)) IN ('1', 'Y') THEN '1' ELSE '0' END as RESEQ_ACTIV_LOC_EXP", 
	"FIL_UNCHANGED_RECORDS___VOCO_GRP_CARTONS_TO_TASK as VOCO_GRP_CARTONS_TO_TASK", 
	"FIL_UNCHANGED_RECORDS___VOCO_MAX_CARTON_ON_TASK as VOCO_MAX_CARTON_ON_TASK", 
	"FIL_UNCHANGED_RECORDS___WM_VERSION_ID as WM_VERSION_ID", 
	"FIL_UNCHANGED_RECORDS___TC_COMPANY_ID as TC_COMPANY_ID", 
	"FIL_UNCHANGED_RECORDS___MAX_ORDER_LINES as MAX_ORDER_LINES", 
	"CASE WHEN TRIM(UPPER(FIL_UNCHANGED_RECORDS___CHASE_WAVE)) IN ('1', 'Y') THEN '1' ELSE '0' END as CHASE_WAVE_EXP", 
	"FIL_UNCHANGED_RECORDS___DEFAULT_QUEUE_PRTY as DEFAULT_QUEUE_PRTY", 
	"FIL_UNCHANGED_RECORDS___ALLOC_LOGGING as ALLOC_LOGGING", 
	"FIL_UNCHANGED_RECORDS___CREATED_DTTM as CREATED_DTTM", 
	"FIL_UNCHANGED_RECORDS___LAST_UPDATED_DTTM as LAST_UPDATED_DTTM", 
	"CASE WHEN TRIM(UPPER(FIL_UNCHANGED_RECORDS___CARTON_BREAK_ON_LOCN_CLASS)) IN ('1', 'Y') THEN '1' ELSE '0' END as CARTON_BREAK_ON_LOCN_CLASS_EXP", 
	"FIL_UNCHANGED_RECORDS___DESELECT_UNALLOCATED_SINGLES as DESELECT_UNALLOCATED_SINGLES", 
	"FIL_UNCHANGED_RECORDS___CARTON_TYPE_EVENT_ID as CARTON_TYPE_EVENT_ID", 
	"FIL_UNCHANGED_RECORDS___CHUTE_ASSIGN_TYPE_EVENT_ID as CHUTE_ASSIGN_TYPE_EVENT_ID", 
	"FIL_UNCHANGED_RECORDS___LPN_BRK_ATTRIB_EVENT_ID as LPN_BRK_ATTRIB_EVENT_ID", 
	"FIL_UNCHANGED_RECORDS___IGNORE_SINGLES_PROCESSING as IGNORE_SINGLES_PROCESSING", 
	"FIL_UNCHANGED_RECORDS___HLD_RLS_FLAG as HLD_RLS_FLAG", 
	"FIL_UNCHANGED_RECORDS___MAX_NBR_PACK_WAVES_TO_RLS as MAX_NBR_PACK_WAVES_TO_RLS", 
	"FIL_UNCHANGED_RECORDS___REPLEN_BUMP_UP as REPLEN_BUMP_UP", 
	"FIL_UNCHANGED_RECORDS___RETAIN_PALLET_ID as RETAIN_PALLET_ID", 
	"FIL_UNCHANGED_RECORDS___ORDER_SEL_LOGGING as ORDER_SEL_LOGGING", 
	"FIL_UNCHANGED_RECORDS___AGG_LOGGING as AGG_LOGGING", 
	"FIL_UNCHANGED_RECORDS___CUB_LOGGING as CUB_LOGGING", 
	"FIL_UNCHANGED_RECORDS___PCK_WAVE_LOGGING as PCK_WAVE_LOGGING", 
	"FIL_UNCHANGED_RECORDS___TSK_GEN_LOGGING as TSK_GEN_LOGGING", 
	"FIL_UNCHANGED_RECORDS___LABEL_PRNT_LOGGING as LABEL_PRNT_LOGGING", 
	"FIL_UNCHANGED_RECORDS___ORDER_SEQ_LOGGING as ORDER_SEQ_LOGGING", 
	"FIL_UNCHANGED_RECORDS___ORDER_CNSOL_LOGGING as ORDER_CNSOL_LOGGING", 
	"FIL_UNCHANGED_RECORDS___RELEASE_ALL_TASK as RELEASE_ALL_TASK", 
	"CASE WHEN TRIM(UPPER(FIL_UNCHANGED_RECORDS___FORCE_ORDER_STREAMING)) IN ('1', 'Y') THEN '1' ELSE '0' END as FORCE_ORDER_STREAMING_EXP", 
	"FIL_UNCHANGED_RECORDS___CUBING_ACTION_FOR_FAILED_ORDER as CUBING_ACTION_FOR_FAILED_ORDER", 
	"FIL_UNCHANGED_RECORDS___NBR_ALLOCATION_THREAD as NBR_ALLOCATION_THREAD", 
	"FIL_UNCHANGED_RECORDS___i_WM_WAVE_PARM_ID as i_WM_WAVE_PARM_ID", 
	"FIL_UNCHANGED_RECORDS___i_LOAD_TSTMP as i_LOAD_TSTMP", 
	"CURRENT_TIMESTAMP as UPDATE_TSTMP", 
	"IF(FIL_UNCHANGED_RECORDS___i_LOAD_TSTMP IS NULL, CURRENT_TIMESTAMP, FIL_UNCHANGED_RECORDS___i_LOAD_TSTMP) as LOAD_TSTMP", 
	"IF(FIL_UNCHANGED_RECORDS___i_WM_WAVE_PARM_ID IS NULL, 1, 2) as o_UPDATE_VALIDATOR" 
)

# COMMAND ----------
# Processing node UPD_INS_UPD, type UPDATE_STRATEGY . Note: using additional SELECT to rename incoming columns
# COLUMN COUNT: 197

# for each involved DataFrame, append the dataframe name to each column
EXP_UPDATE_VALIDATOR_temp = EXP_UPDATE_VALIDATOR.toDF(*["EXP_UPDATE_VALIDATOR___" + col for col in EXP_UPDATE_VALIDATOR.columns])

UPD_INS_UPD = EXP_UPDATE_VALIDATOR_temp.selectExpr( 
	"EXP_UPDATE_VALIDATOR___LOCATION_ID as LOCATION_ID", 
	"EXP_UPDATE_VALIDATOR___WAVE_PARM_ID as WAVE_PARM_ID", 
	"EXP_UPDATE_VALIDATOR___WHSE as WHSE", 
	"EXP_UPDATE_VALIDATOR___DAY_OF_WEEK as DAY_OF_WEEK", 
	"EXP_UPDATE_VALIDATOR___SHIFT_NBR_EXP as SHIFT_NBR", 
	"EXP_UPDATE_VALIDATOR___REC_TYPE as REC_TYPE", 
	"EXP_UPDATE_VALIDATOR___WAVE_NBR as WAVE_NBR", 
	"EXP_UPDATE_VALIDATOR___WAVE_DESC as WAVE_DESC", 
	"EXP_UPDATE_VALIDATOR___MAX_UNITS as MAX_UNITS", 
	"EXP_UPDATE_VALIDATOR___MAX_ORDERS as MAX_ORDERS", 
	"EXP_UPDATE_VALIDATOR___WAVE_CMPL_STAT_CODE as WAVE_CMPL_STAT_CODE", 
	"EXP_UPDATE_VALIDATOR___WAVE_STAT_CODE as WAVE_STAT_CODE", 
	"EXP_UPDATE_VALIDATOR___WAVE_STAT_DATE_TIME as WAVE_STAT_DATE_TIME", 
	"EXP_UPDATE_VALIDATOR___PICK_STAT_CODE as PICK_STAT_CODE", 
	"EXP_UPDATE_VALIDATOR___PACK_STAT_CODE as PACK_STAT_CODE", 
	"EXP_UPDATE_VALIDATOR___REPL_STAT_CODE as REPL_STAT_CODE", 
	"EXP_UPDATE_VALIDATOR___INDUC_STAT_CODE as INDUC_STAT_CODE", 
	"EXP_UPDATE_VALIDATOR___MISC_STAT_CODE_1 as MISC_STAT_CODE_1", 
	"EXP_UPDATE_VALIDATOR___MISC_STAT_CODE_2 as MISC_STAT_CODE_2", 
	"EXP_UPDATE_VALIDATOR___SCHED_DLVRY_DATE as SCHED_DLVRY_DATE", 
	"EXP_UPDATE_VALIDATOR___SCHED_WAVE as SCHED_WAVE", 
	"EXP_UPDATE_VALIDATOR___NBR_OF_PKTS as NBR_OF_PKTS", 
	"EXP_UPDATE_VALIDATOR___NBR_OF_CARTONS as NBR_OF_CARTONS", 
	"EXP_UPDATE_VALIDATOR___NBR_OF_LOCN as NBR_OF_LOCN", 
	"EXP_UPDATE_VALIDATOR___NBR_OF_CHUTE as NBR_OF_CHUTE", 
	"EXP_UPDATE_VALIDATOR___NBR_OF_PLT_POSN as NBR_OF_PLT_POSN", 
	"EXP_UPDATE_VALIDATOR___ASSIGN_PLT_POSN as ASSIGN_PLT_POSN", 
	"EXP_UPDATE_VALIDATOR___WAVE_PROC_TYPE as WAVE_PROC_TYPE", 
	"EXP_UPDATE_VALIDATOR___WAVE_PARM_TEMPLATE_ID as WAVE_PARM_TEMPLATE_ID", 
	"EXP_UPDATE_VALIDATOR___FORCE_WPT_EXP as FORCE_WPT", 
	"EXP_UPDATE_VALIDATOR___REPL_TRIG as REPL_TRIG", 
	"EXP_UPDATE_VALIDATOR___RTE_W_WAVE as RTE_W_WAVE", 
	"EXP_UPDATE_VALIDATOR___CHG_PKT_QTY as CHG_PKT_QTY", 
	"EXP_UPDATE_VALIDATOR___LABEL_PRTR_REQSTR as LABEL_PRTR_REQSTR", 
	"EXP_UPDATE_VALIDATOR___RPT_PRTR_REQSTR as RPT_PRTR_REQSTR", 
	"EXP_UPDATE_VALIDATOR___CARTON_BREAK_ON_AREA_CHG_EXP as CARTON_BREAK_ON_AREA_CHG", 
	"EXP_UPDATE_VALIDATOR___CARTON_BREAK_ON_ZONE_CHG_EXP as CARTON_BREAK_ON_ZONE_CHG", 
	"EXP_UPDATE_VALIDATOR___CARTON_BREAK_ON_AISLE_CHG_EXP as CARTON_BREAK_ON_AISLE_CHG", 
	"EXP_UPDATE_VALIDATOR___PKT_CONSOL_REJECT_RULE as PKT_CONSOL_REJECT_RULE", 
	"EXP_UPDATE_VALIDATOR___ASSIGN_PRO_NBR as ASSIGN_PRO_NBR", 
	"EXP_UPDATE_VALIDATOR___SHIP_VIA as SHIP_VIA", 
	"EXP_UPDATE_VALIDATOR___SWC_NBR as SWC_NBR", 
	"EXP_UPDATE_VALIDATOR___MANIF_NBR as MANIF_NBR", 
	"EXP_UPDATE_VALIDATOR___BOL as BOL", 
	"EXP_UPDATE_VALIDATOR___SHPMT_NBR as SHPMT_NBR", 
	"EXP_UPDATE_VALIDATOR___SWC_NBR_FLAG_EXP as SWC_NBR_FLAG", 
	"EXP_UPDATE_VALIDATOR___MANIF_FLAG_EXP as MANIF_FLAG", 
	"EXP_UPDATE_VALIDATOR___BOL_FLAG_EXP as BOL_FLAG", 
	"EXP_UPDATE_VALIDATOR___SHPMT_FLAG_EXP as SHPMT_FLAG", 
	"EXP_UPDATE_VALIDATOR___CLEAR_SPUR_LOCN as CLEAR_SPUR_LOCN", 
	"EXP_UPDATE_VALIDATOR___SPUR as SPUR", 
	"EXP_UPDATE_VALIDATOR___XCEED_CAPCTY_FLAG_EXP as XCEED_CAPCTY_FLAG", 
	"EXP_UPDATE_VALIDATOR___FILL_CAPCTY_STRK as FILL_CAPCTY_STRK", 
	"EXP_UPDATE_VALIDATOR___CONSL_LOCN_CLEAR_METHD as CONSL_LOCN_CLEAR_METHD", 
	"EXP_UPDATE_VALIDATOR___PERP_PLT_POSN as PERP_PLT_POSN", 
	"EXP_UPDATE_VALIDATOR___NBR_OF_LABELS_PER_SPOOL as NBR_OF_LABELS_PER_SPOOL", 
	"EXP_UPDATE_VALIDATOR___NBR_OF_LABELS_PER_ROW as NBR_OF_LABELS_PER_ROW", 
	"EXP_UPDATE_VALIDATOR___PKT_CONSOL_PROF as PKT_CONSOL_PROF", 
	"EXP_UPDATE_VALIDATOR___PKT_CONSOL_DETRM_TYPE as PKT_CONSOL_DETRM_TYPE", 
	"EXP_UPDATE_VALIDATOR___SKU_CNSTR as SKU_CNSTR", 
	"EXP_UPDATE_VALIDATOR___SKU_SUB as SKU_SUB", 
	"EXP_UPDATE_VALIDATOR___USE_INBD_LPN_AS_OUTBD_LPN_EXP as USE_INBD_LPN_AS_OUTBD_LPN", 
	"EXP_UPDATE_VALIDATOR___CARTON_TYPE as CARTON_TYPE", 
	"EXP_UPDATE_VALIDATOR___NBR_OF_PIKRS_PAKRS as NBR_OF_PIKRS_PAKRS", 
	"EXP_UPDATE_VALIDATOR___AVG_PIKS_PER_PIKR as AVG_PIKS_PER_PIKR", 
	"EXP_UPDATE_VALIDATOR___AVG_TMU_PER_PIKR as AVG_TMU_PER_PIKR", 
	"EXP_UPDATE_VALIDATOR___PICK_LOCN_ASSIGN_TYPE as PICK_LOCN_ASSIGN_TYPE", 
	"EXP_UPDATE_VALIDATOR___DIFF_PIKR_ON_AREA_CHG as DIFF_PIKR_ON_AREA_CHG", 
	"EXP_UPDATE_VALIDATOR___DIFF_PIKR_ON_ZONE_CHG as DIFF_PIKR_ON_ZONE_CHG", 
	"EXP_UPDATE_VALIDATOR___DIFF_PIKR_ON_AISLE_CHG as DIFF_PIKR_ON_AISLE_CHG", 
	"EXP_UPDATE_VALIDATOR___DIFF_PIKR_ON_BAY_CHG as DIFF_PIKR_ON_BAY_CHG", 
	"EXP_UPDATE_VALIDATOR___DIFF_PIKR_ON_LVL_CHG as DIFF_PIKR_ON_LVL_CHG", 
	"EXP_UPDATE_VALIDATOR___DIFF_PIKR_ON_POSN_CHG as DIFF_PIKR_ON_POSN_CHG", 
	"EXP_UPDATE_VALIDATOR___SAME_PIKR_FOR_AREA as SAME_PIKR_FOR_AREA", 
	"EXP_UPDATE_VALIDATOR___SAME_PIKR_FOR_ZONE as SAME_PIKR_FOR_ZONE", 
	"EXP_UPDATE_VALIDATOR___SAME_PIKR_FOR_AISLE as SAME_PIKR_FOR_AISLE", 
	"EXP_UPDATE_VALIDATOR___SAME_PIKR_FOR_BAY as SAME_PIKR_FOR_BAY", 
	"EXP_UPDATE_VALIDATOR___SAME_PIKR_FOR_LVL as SAME_PIKR_FOR_LVL", 
	"EXP_UPDATE_VALIDATOR___SAME_PIKR_FOR_POSN as SAME_PIKR_FOR_POSN", 
	"EXP_UPDATE_VALIDATOR___OK_TO_PICK as OK_TO_PICK", 
	"EXP_UPDATE_VALIDATOR___OK_TO_PACK as OK_TO_PACK", 
	"EXP_UPDATE_VALIDATOR___OK_TO_REPL as OK_TO_REPL", 
	"EXP_UPDATE_VALIDATOR___OK_TO_INDUC as OK_TO_INDUC", 
	"EXP_UPDATE_VALIDATOR___OK_TO_MISC_1 as OK_TO_MISC_1", 
	"EXP_UPDATE_VALIDATOR___OK_TO_MISC_2 as OK_TO_MISC_2", 
	"EXP_UPDATE_VALIDATOR___START_PICK_DATE_TIME as START_PICK_DATE_TIME", 
	"EXP_UPDATE_VALIDATOR___END_PICK_DATE_TIME as END_PICK_DATE_TIME", 
	"EXP_UPDATE_VALIDATOR___START_PACK_DATE_TIME as START_PACK_DATE_TIME", 
	"EXP_UPDATE_VALIDATOR___END_PACK_DATE_TIME as END_PACK_DATE_TIME", 
	"EXP_UPDATE_VALIDATOR___START_REPL_DATE_TIME as START_REPL_DATE_TIME", 
	"EXP_UPDATE_VALIDATOR___END_REPL_DATE_TIME as END_REPL_DATE_TIME", 
	"EXP_UPDATE_VALIDATOR___START_INDUC_DATE_TIME as START_INDUC_DATE_TIME", 
	"EXP_UPDATE_VALIDATOR___END_INDUC_DATE_TIME as END_INDUC_DATE_TIME", 
	"EXP_UPDATE_VALIDATOR___START_MISC_1_DATE_TIME as START_MISC_1_DATE_TIME", 
	"EXP_UPDATE_VALIDATOR___END_MISC_1_DATE_TIME as END_MISC_1_DATE_TIME", 
	"EXP_UPDATE_VALIDATOR___START_MISC_2_DATE_TIME as START_MISC_2_DATE_TIME", 
	"EXP_UPDATE_VALIDATOR___END_MISC_2_DATE_TIME as END_MISC_2_DATE_TIME", 
	"EXP_UPDATE_VALIDATOR___CMPLTD_DATE_TIME as CMPLTD_DATE_TIME", 
	"EXP_UPDATE_VALIDATOR___GRP_PKT_BY_SWC_NBR_EXP as GRP_PKT_BY_SWC_NBR", 
	"EXP_UPDATE_VALIDATOR___PULL_ALL_SWC_EXP as PULL_ALL_SWC", 
	"EXP_UPDATE_VALIDATOR___ZONE_PICK_METHOD as ZONE_PICK_METHOD", 
	"EXP_UPDATE_VALIDATOR___WAVE_TYPE_INDIC as WAVE_TYPE_INDIC", 
	"EXP_UPDATE_VALIDATOR___REJECT_DISTRO_RULE_EXP as REJECT_DISTRO_RULE", 
	"EXP_UPDATE_VALIDATOR___RETAIL_MAX_UNITS as RETAIL_MAX_UNITS", 
	"EXP_UPDATE_VALIDATOR___RETAIL_UNIT_PCNT_OVER as RETAIL_UNIT_PCNT_OVER", 
	"EXP_UPDATE_VALIDATOR___RETAIL_MAX_SKUS as RETAIL_MAX_SKUS", 
	"EXP_UPDATE_VALIDATOR___RETAIL_MAX_STORES as RETAIL_MAX_STORES", 
	"EXP_UPDATE_VALIDATOR___RETAIL_MAX_ROUTES as RETAIL_MAX_ROUTES", 
	"EXP_UPDATE_VALIDATOR___BULK_WAVE_BAL_FROM_ACTV_EXP as BULK_WAVE_BAL_FROM_ACTV", 
	"EXP_UPDATE_VALIDATOR___PROC_ATTR_1 as PROC_ATTR_1", 
	"EXP_UPDATE_VALIDATOR___PROC_ATTR_2 as PROC_ATTR_2", 
	"EXP_UPDATE_VALIDATOR___PROC_ATTR_3 as PROC_ATTR_3", 
	"EXP_UPDATE_VALIDATOR___PROC_ATTR_4 as PROC_ATTR_4", 
	"EXP_UPDATE_VALIDATOR___PROC_ATTR_5 as PROC_ATTR_5", 
	"EXP_UPDATE_VALIDATOR___SPL_INSTR_CODE_1 as SPL_INSTR_CODE_1", 
	"EXP_UPDATE_VALIDATOR___SPL_INSTR_CODE_2 as SPL_INSTR_CODE_2", 
	"EXP_UPDATE_VALIDATOR___SPL_INSTR_CODE_3 as SPL_INSTR_CODE_3", 
	"EXP_UPDATE_VALIDATOR___SPL_INSTR_CODE_4 as SPL_INSTR_CODE_4", 
	"EXP_UPDATE_VALIDATOR___SPL_INSTR_CODE_5 as SPL_INSTR_CODE_5", 
	"EXP_UPDATE_VALIDATOR___CREATE_DATE_TIME as CREATE_DATE_TIME", 
	"EXP_UPDATE_VALIDATOR___MOD_DATE_TIME as MOD_DATE_TIME", 
	"EXP_UPDATE_VALIDATOR___USER_ID as USER_ID", 
	"EXP_UPDATE_VALIDATOR___PRT_CS_LABELS_W_WAVE_EXP as PRT_CS_LABELS_W_WAVE", 
	"EXP_UPDATE_VALIDATOR___CREATE_SHPMT as CREATE_SHPMT", 
	"EXP_UPDATE_VALIDATOR___CREATE_LOAD as CREATE_LOAD", 
	"EXP_UPDATE_VALIDATOR___CHG_WO_QTY as CHG_WO_QTY", 
	"EXP_UPDATE_VALIDATOR___PACK_CMPL_W_WAVE_EXP as PACK_CMPL_W_WAVE", 
	"EXP_UPDATE_VALIDATOR___DLVRY_WIN_RANGE_CODE as DLVRY_WIN_RANGE_CODE", 
	"EXP_UPDATE_VALIDATOR___DFLT_PLT_TYPE as DFLT_PLT_TYPE", 
	"EXP_UPDATE_VALIDATOR___PACK_WAVE_PARM_ID as PACK_WAVE_PARM_ID", 
	"EXP_UPDATE_VALIDATOR___CAT_PARM_ID as CAT_PARM_ID", 
	"EXP_UPDATE_VALIDATOR___DESEL_SNGL_FLAG_EXP as DESEL_SNGL_FLAG", 
	"EXP_UPDATE_VALIDATOR___ALLOC_TYPE as ALLOC_TYPE", 
	"EXP_UPDATE_VALIDATOR___FORCE_ALLOC_TYPE as FORCE_ALLOC_TYPE", 
	"EXP_UPDATE_VALIDATOR___FORCE_PICK_LOCN_ASSIGN_TYPE as FORCE_PICK_LOCN_ASSIGN_TYPE", 
	"EXP_UPDATE_VALIDATOR___BULK_PICK_ZONE as BULK_PICK_ZONE", 
	"EXP_UPDATE_VALIDATOR___CONSOL_PLTZ_CARTONS_FLAG_EXP as CONSOL_PLTZ_CARTONS_FLAG", 
	"EXP_UPDATE_VALIDATOR___ACTV_REPL_ORGN as ACTV_REPL_ORGN", 
	"EXP_UPDATE_VALIDATOR___MAX_CARTONS as MAX_CARTONS", 
	"EXP_UPDATE_VALIDATOR___MAX_PICK_WAVES as MAX_PICK_WAVES", 
	"EXP_UPDATE_VALIDATOR___HOLD_PRINT as HOLD_PRINT", 
	"EXP_UPDATE_VALIDATOR___SUPPR_PR40_REPL as SUPPR_PR40_REPL", 
	"EXP_UPDATE_VALIDATOR___COMB_4050_REPL as COMB_4050_REPL", 
	"EXP_UPDATE_VALIDATOR___SUPPR_PR60_REPL as SUPPR_PR60_REPL", 
	"EXP_UPDATE_VALIDATOR___LOAD_PLAN as LOAD_PLAN", 
	"EXP_UPDATE_VALIDATOR___ASSIGN_NEW_LOAD as ASSIGN_NEW_LOAD", 
	"EXP_UPDATE_VALIDATOR___RESV_BAL_EXP as RESV_BAL", 
	"EXP_UPDATE_VALIDATOR___RESV_BALANCE_INT as RESV_BALANCE_INT", 
	"EXP_UPDATE_VALIDATOR___ORDER_RND_FLAG_EXP as ORDER_RND_FLAG", 
	"EXP_UPDATE_VALIDATOR___ALLOC_REMAIN as ALLOC_REMAIN", 
	"EXP_UPDATE_VALIDATOR___MHE_FLAG_EXP as MHE_FLAG", 
	"EXP_UPDATE_VALIDATOR___MHE_ONE_SEND_FLAG_EXP as MHE_ONE_SEND_FLAG", 
	"EXP_UPDATE_VALIDATOR___MHE_PICK_DEST_LEVEL_EXP as MHE_PICK_DEST_LEVEL", 
	"EXP_UPDATE_VALIDATOR___SHIP_DATE_TIME as SHIP_DATE_TIME", 
	"EXP_UPDATE_VALIDATOR___COLLATE_PRTR_REQSTR as COLLATE_PRTR_REQSTR", 
	"EXP_UPDATE_VALIDATOR___MAX_DYNAMIC_LOCN_OPTN as MAX_DYNAMIC_LOCN_OPTN", 
	"EXP_UPDATE_VALIDATOR___FORCE_SHIP_DATE_FLAG_EXP as FORCE_SHIP_DATE_FLAG", 
	"EXP_UPDATE_VALIDATOR___MAX_WT as MAX_WT", 
	"EXP_UPDATE_VALIDATOR___MAX_VOL as MAX_VOL", 
	"EXP_UPDATE_VALIDATOR___BULK_PICK_ASSIGN_TYPE as BULK_PICK_ASSIGN_TYPE", 
	"EXP_UPDATE_VALIDATOR___REPL_WAVE_EXP as REPL_WAVE", 
	"EXP_UPDATE_VALIDATOR___RESEQ_ACTIV_LOC_EXP as RESEQ_ACTIV_LOC", 
	"EXP_UPDATE_VALIDATOR___VOCO_GRP_CARTONS_TO_TASK as VOCO_GRP_CARTONS_TO_TASK", 
	"EXP_UPDATE_VALIDATOR___VOCO_MAX_CARTON_ON_TASK as VOCO_MAX_CARTON_ON_TASK", 
	"EXP_UPDATE_VALIDATOR___WM_VERSION_ID as WM_VERSION_ID", 
	"EXP_UPDATE_VALIDATOR___TC_COMPANY_ID as TC_COMPANY_ID", 
	"EXP_UPDATE_VALIDATOR___MAX_ORDER_LINES as MAX_ORDER_LINES", 
	"EXP_UPDATE_VALIDATOR___CHASE_WAVE_EXP as CHASE_WAVE", 
	"EXP_UPDATE_VALIDATOR___DEFAULT_QUEUE_PRTY as DEFAULT_QUEUE_PRTY", 
	"EXP_UPDATE_VALIDATOR___ALLOC_LOGGING as ALLOC_LOGGING", 
	"EXP_UPDATE_VALIDATOR___CREATED_DTTM as CREATED_DTTM", 
	"EXP_UPDATE_VALIDATOR___LAST_UPDATED_DTTM as LAST_UPDATED_DTTM", 
	"EXP_UPDATE_VALIDATOR___CARTON_BREAK_ON_LOCN_CLASS_EXP as CARTON_BREAK_ON_LOCN_CLASS", 
	"EXP_UPDATE_VALIDATOR___DESELECT_UNALLOCATED_SINGLES as DESELECT_UNALLOCATED_SINGLES", 
	"EXP_UPDATE_VALIDATOR___CARTON_TYPE_EVENT_ID as CARTON_TYPE_EVENT_ID", 
	"EXP_UPDATE_VALIDATOR___CHUTE_ASSIGN_TYPE_EVENT_ID as CHUTE_ASSIGN_TYPE_EVENT_ID", 
	"EXP_UPDATE_VALIDATOR___LPN_BRK_ATTRIB_EVENT_ID as LPN_BRK_ATTRIB_EVENT_ID", 
	"EXP_UPDATE_VALIDATOR___IGNORE_SINGLES_PROCESSING as IGNORE_SINGLES_PROCESSING", 
	"EXP_UPDATE_VALIDATOR___HLD_RLS_FLAG as HLD_RLS_FLAG", 
	"EXP_UPDATE_VALIDATOR___MAX_NBR_PACK_WAVES_TO_RLS as MAX_NBR_PACK_WAVES_TO_RLS", 
	"EXP_UPDATE_VALIDATOR___REPLEN_BUMP_UP as REPLEN_BUMP_UP", 
	"EXP_UPDATE_VALIDATOR___RETAIN_PALLET_ID as RETAIN_PALLET_ID", 
	"EXP_UPDATE_VALIDATOR___ORDER_SEL_LOGGING as ORDER_SEL_LOGGING", 
	"EXP_UPDATE_VALIDATOR___AGG_LOGGING as AGG_LOGGING", 
	"EXP_UPDATE_VALIDATOR___CUB_LOGGING as CUB_LOGGING", 
	"EXP_UPDATE_VALIDATOR___PCK_WAVE_LOGGING as PCK_WAVE_LOGGING", 
	"EXP_UPDATE_VALIDATOR___TSK_GEN_LOGGING as TSK_GEN_LOGGING", 
	"EXP_UPDATE_VALIDATOR___LABEL_PRNT_LOGGING as LABEL_PRNT_LOGGING", 
	"EXP_UPDATE_VALIDATOR___ORDER_SEQ_LOGGING as ORDER_SEQ_LOGGING", 
	"EXP_UPDATE_VALIDATOR___ORDER_CNSOL_LOGGING as ORDER_CNSOL_LOGGING", 
	"EXP_UPDATE_VALIDATOR___RELEASE_ALL_TASK as RELEASE_ALL_TASK", 
	"EXP_UPDATE_VALIDATOR___FORCE_ORDER_STREAMING_EXP as FORCE_ORDER_STREAMING", 
	"EXP_UPDATE_VALIDATOR___CUBING_ACTION_FOR_FAILED_ORDER as CUBING_ACTION_FOR_FAILED_ORDER", 
	"EXP_UPDATE_VALIDATOR___NBR_ALLOCATION_THREAD as NBR_ALLOCATION_THREAD", 
	"EXP_UPDATE_VALIDATOR___UPDATE_TSTMP as UPDATE_TSTMP", 
	"EXP_UPDATE_VALIDATOR___LOAD_TSTMP as LOAD_TSTMP", 
	"EXP_UPDATE_VALIDATOR___o_UPDATE_VALIDATOR as o_UPDATE_VALIDATOR"
).withColumn('pyspark_data_action', when(EXP_UPDATE_VALIDATOR.o_UPDATE_VALIDATOR ==(lit(1))lit(0)).when(EXP_UPDATE_VALIDATOR.o_UPDATE_VALIDATOR ==(lit(2))lit(1)))

# COMMAND ----------
# Processing node Shortcut_to_WM_WAVE_PARM_1, type TARGET 
# COLUMN COUNT: 196

try:
  primary_key = """source.LOCATION_ID = target.LOCATION_ID AND source.WM_WAVE_PARM_ID = target.WM_WAVE_PARM_ID"""
  # refined_perf_table = "WM_WAVE_PARM"
  executeMerge(UPD_INS_UPD, refined_perf_table, primary_key)
  logger.info(f"Merge with {refined_perf_table} completed]")
  logPrevRunDt("WM_WAVE_PARM", "WM_WAVE_PARM", "Completed", "N/A", f"{raw}.log_run_details")
except Exception as e:
  logPrevRunDt("WM_WAVE_PARM", "WM_WAVE_PARM","Failed",str(e), f"{raw}.log_run_details", )
  raise e
	