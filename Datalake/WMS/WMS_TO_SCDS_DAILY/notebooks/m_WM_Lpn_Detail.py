#Code converted on 2023-06-27 09:40:43
import os
import argparse
from pyspark.sql import *
from pyspark.sql.functions import *
from pyspark.sql.window import Window
from pyspark.sql.types import *
from datetime import datetime
from pyspark.dbutils import DBUtils
from utils.genericUtilities import *
from utils.configs import *
from utils.mergeUtils import *
from utils.logger import *
# COMMAND ----------

parser = argparse.ArgumentParser()
spark = SparkSession.getActiveSession()
dbutils = DBUtils(spark)
parser.add_argument('env', type=str, help='Env Variable')
args = parser.parse_args()
env = args.env

if env is None or env == '':
    raise ValueError('env is not set')

refine = getEnvPrefix(env) + 'refine'
raw = getEnvPrefix(env) + 'raw'
legacy = getEnvPrefix(env) + 'legacy'

# Set global variables
starttime = datetime.now() #start timestamp of the script

# COMMAND ----------
# Processing node SQ_Shortcut_to_WM_LPN_DETAIL, type SOURCE 
# COLUMN COUNT: 6

SQ_Shortcut_to_WM_LPN_DETAIL = spark.sql(f"""SELECT
WM_LPN_DETAIL.LOCATION_ID,
WM_LPN_DETAIL.WM_LPN_ID,
WM_LPN_DETAIL.WM_LPN_DETAIL_ID,
WM_LPN_DETAIL.WM_CREATED_TSTMP,
WM_LPN_DETAIL.WM_LAST_UPDATED_TSTMP,
WM_LPN_DETAIL.LOAD_TSTMP
FROM WM_LPN_DETAIL
WHERE WM_LPN_DETAIL_ID IN (SELECT LPN_DETAIL_ID FROM WM_LPN_DETAIL_PRE)""").withColumn("sys_row_id", monotonically_increasing_id())

# COMMAND ----------
# Processing node SQ_Shortcut_to_WM_LPN_DETAIL_PRE, type SOURCE 
# COLUMN COUNT: 88

SQ_Shortcut_to_WM_LPN_DETAIL_PRE = spark.sql(f"""SELECT
WM_LPN_DETAIL_PRE.DC_NBR,
WM_LPN_DETAIL_PRE.LPN_ID,
WM_LPN_DETAIL_PRE.LPN_DETAIL_ID,
WM_LPN_DETAIL_PRE.TC_COMPANY_ID,
WM_LPN_DETAIL_PRE.LPN_DETAIL_STATUS,
WM_LPN_DETAIL_PRE.INTERNAL_ORDER_DTL_ID,
WM_LPN_DETAIL_PRE.DISTRIBUTION_ORDER_DTL_ID,
WM_LPN_DETAIL_PRE.RECEIVED_QTY,
WM_LPN_DETAIL_PRE.BUSINESS_PARTNER_ID,
WM_LPN_DETAIL_PRE.ITEM_ID,
WM_LPN_DETAIL_PRE.GTIN,
WM_LPN_DETAIL_PRE.STD_PACK_QTY,
WM_LPN_DETAIL_PRE.STD_SUB_PACK_QTY,
WM_LPN_DETAIL_PRE.STD_BUNDLE_QTY,
WM_LPN_DETAIL_PRE.INCUBATION_DATE,
WM_LPN_DETAIL_PRE.EXPIRATION_DATE,
WM_LPN_DETAIL_PRE.SHIP_BY_DATE,
WM_LPN_DETAIL_PRE.SELL_BY_DTTM,
WM_LPN_DETAIL_PRE.CONSUMPTION_PRIORITY_DTTM,
WM_LPN_DETAIL_PRE.MANUFACTURED_DTTM,
WM_LPN_DETAIL_PRE.CNTRY_OF_ORGN,
WM_LPN_DETAIL_PRE.INVENTORY_TYPE,
WM_LPN_DETAIL_PRE.PRODUCT_STATUS,
WM_LPN_DETAIL_PRE.ITEM_ATTR_1,
WM_LPN_DETAIL_PRE.ITEM_ATTR_2,
WM_LPN_DETAIL_PRE.ITEM_ATTR_3,
WM_LPN_DETAIL_PRE.ITEM_ATTR_4,
WM_LPN_DETAIL_PRE.ITEM_ATTR_5,
WM_LPN_DETAIL_PRE.ASN_DTL_ID,
WM_LPN_DETAIL_PRE.PACK_WEIGHT,
WM_LPN_DETAIL_PRE.ESTIMATED_WEIGHT,
WM_LPN_DETAIL_PRE.ESTIMATED_VOLUME,
WM_LPN_DETAIL_PRE.SIZE_VALUE,
WM_LPN_DETAIL_PRE.WEIGHT,
WM_LPN_DETAIL_PRE.QTY_UOM_ID,
WM_LPN_DETAIL_PRE.WEIGHT_UOM_ID,
WM_LPN_DETAIL_PRE.VOLUME_UOM_ID,
WM_LPN_DETAIL_PRE.ASSORT_NBR,
WM_LPN_DETAIL_PRE.CUT_NBR,
WM_LPN_DETAIL_PRE.PURCHASE_ORDERS_ID,
WM_LPN_DETAIL_PRE.TC_PURCHASE_ORDERS_ID,
WM_LPN_DETAIL_PRE.PURCHASE_ORDERS_LINE_ID,
WM_LPN_DETAIL_PRE.TC_PURCHASE_ORDERS_LINE_ID,
WM_LPN_DETAIL_PRE.HIBERNATE_VERSION,
WM_LPN_DETAIL_PRE.INTERNAL_ORDER_ID,
WM_LPN_DETAIL_PRE.INSTRTN_CODE_1,
WM_LPN_DETAIL_PRE.INSTRTN_CODE_2,
WM_LPN_DETAIL_PRE.INSTRTN_CODE_3,
WM_LPN_DETAIL_PRE.INSTRTN_CODE_4,
WM_LPN_DETAIL_PRE.INSTRTN_CODE_5,
WM_LPN_DETAIL_PRE.CREATED_SOURCE_TYPE,
WM_LPN_DETAIL_PRE.CREATED_SOURCE,
WM_LPN_DETAIL_PRE.CREATED_DTTM,
WM_LPN_DETAIL_PRE.LAST_UPDATED_SOURCE_TYPE,
WM_LPN_DETAIL_PRE.LAST_UPDATED_SOURCE,
WM_LPN_DETAIL_PRE.LAST_UPDATED_DTTM,
WM_LPN_DETAIL_PRE.VENDOR_ITEM_NBR,
WM_LPN_DETAIL_PRE.MANUFACTURED_PLANT,
WM_LPN_DETAIL_PRE.BATCH_NBR,
WM_LPN_DETAIL_PRE.ASSIGNED_QTY,
WM_LPN_DETAIL_PRE.PREPACK_GROUP_CODE,
WM_LPN_DETAIL_PRE.PACK_CODE,
WM_LPN_DETAIL_PRE.SHIPPED_QTY,
WM_LPN_DETAIL_PRE.INITIAL_QTY,
WM_LPN_DETAIL_PRE.QTY_CONV_FACTOR,
WM_LPN_DETAIL_PRE.QTY_UOM_ID_BASE,
WM_LPN_DETAIL_PRE.WEIGHT_UOM_ID_BASE,
WM_LPN_DETAIL_PRE.VOLUME_UOM_ID_BASE,
WM_LPN_DETAIL_PRE.ITEM_NAME,
WM_LPN_DETAIL_PRE.TC_ORDER_LINE_ID,
WM_LPN_DETAIL_PRE.HAZMAT_UOM,
WM_LPN_DETAIL_PRE.HAZMAT_QTY,
WM_LPN_DETAIL_PRE.REF_FIELD_1,
WM_LPN_DETAIL_PRE.REF_FIELD_2,
WM_LPN_DETAIL_PRE.REF_FIELD_3,
WM_LPN_DETAIL_PRE.REF_FIELD_4,
WM_LPN_DETAIL_PRE.REF_FIELD_5,
WM_LPN_DETAIL_PRE.REF_FIELD_6,
WM_LPN_DETAIL_PRE.REF_FIELD_7,
WM_LPN_DETAIL_PRE.REF_FIELD_8,
WM_LPN_DETAIL_PRE.REF_FIELD_9,
WM_LPN_DETAIL_PRE.REF_FIELD_10,
WM_LPN_DETAIL_PRE.REF_NUM1,
WM_LPN_DETAIL_PRE.REF_NUM2,
WM_LPN_DETAIL_PRE.REF_NUM3,
WM_LPN_DETAIL_PRE.REF_NUM4,
WM_LPN_DETAIL_PRE.REF_NUM5,
WM_LPN_DETAIL_PRE.CHASE_WAVE_NBR
FROM WM_LPN_DETAIL_PRE""").withColumn("sys_row_id", monotonically_increasing_id())

# COMMAND ----------
# Processing node EXP_INT_CONVERSION, type EXPRESSION 
# COLUMN COUNT: 88

# for each involved DataFrame, append the dataframe name to each column
SQ_Shortcut_to_WM_LPN_DETAIL_PRE_temp = SQ_Shortcut_to_WM_LPN_DETAIL_PRE.toDF(*["SQ_Shortcut_to_WM_LPN_DETAIL_PRE___" + col for col in SQ_Shortcut_to_WM_LPN_DETAIL_PRE.columns])

EXP_INT_CONVERSION = SQ_Shortcut_to_WM_LPN_DETAIL_PRE_temp.selectExpr( \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___sys_row_id as sys_row_id", \
	"cast(SQ_Shortcut_to_WM_LPN_DETAIL_PRE___DC_NBR as int) as o_DC_NBR", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___LPN_ID as LPN_ID", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___LPN_DETAIL_ID as LPN_DETAIL_ID", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___TC_COMPANY_ID as TC_COMPANY_ID", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___LPN_DETAIL_STATUS as LPN_DETAIL_STATUS", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___INTERNAL_ORDER_DTL_ID as INTERNAL_ORDER_DTL_ID", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___DISTRIBUTION_ORDER_DTL_ID as DISTRIBUTION_ORDER_DTL_ID", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___RECEIVED_QTY as RECEIVED_QTY", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___BUSINESS_PARTNER_ID as BUSINESS_PARTNER_ID", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___ITEM_ID as ITEM_ID", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___GTIN as GTIN", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___STD_PACK_QTY as STD_PACK_QTY", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___STD_SUB_PACK_QTY as STD_SUB_PACK_QTY", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___STD_BUNDLE_QTY as STD_BUNDLE_QTY", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___INCUBATION_DATE as INCUBATION_DATE", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___EXPIRATION_DATE as EXPIRATION_DATE", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___SHIP_BY_DATE as SHIP_BY_DATE", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___SELL_BY_DTTM as SELL_BY_DTTM", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___CONSUMPTION_PRIORITY_DTTM as CONSUMPTION_PRIORITY_DTTM", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___MANUFACTURED_DTTM as MANUFACTURED_DTTM", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___CNTRY_OF_ORGN as CNTRY_OF_ORGN", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___INVENTORY_TYPE as INVENTORY_TYPE", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___PRODUCT_STATUS as PRODUCT_STATUS", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___ITEM_ATTR_1 as ITEM_ATTR_1", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___ITEM_ATTR_2 as ITEM_ATTR_2", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___ITEM_ATTR_3 as ITEM_ATTR_3", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___ITEM_ATTR_4 as ITEM_ATTR_4", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___ITEM_ATTR_5 as ITEM_ATTR_5", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___ASN_DTL_ID as ASN_DTL_ID", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___PACK_WEIGHT as PACK_WEIGHT", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___ESTIMATED_WEIGHT as ESTIMATED_WEIGHT", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___ESTIMATED_VOLUME as ESTIMATED_VOLUME", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___SIZE_VALUE as SIZE_VALUE", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___WEIGHT as WEIGHT", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___QTY_UOM_ID as QTY_UOM_ID", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___WEIGHT_UOM_ID as WEIGHT_UOM_ID", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___VOLUME_UOM_ID as VOLUME_UOM_ID", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___ASSORT_NBR as ASSORT_NBR", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___CUT_NBR as CUT_NBR", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___PURCHASE_ORDERS_ID as PURCHASE_ORDERS_ID", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___TC_PURCHASE_ORDERS_ID as TC_PURCHASE_ORDERS_ID", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___PURCHASE_ORDERS_LINE_ID as PURCHASE_ORDERS_LINE_ID", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___TC_PURCHASE_ORDERS_LINE_ID as TC_PURCHASE_ORDERS_LINE_ID", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___HIBERNATE_VERSION as HIBERNATE_VERSION", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___INTERNAL_ORDER_ID as INTERNAL_ORDER_ID", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___INSTRTN_CODE_1 as INSTRTN_CODE_1", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___INSTRTN_CODE_2 as INSTRTN_CODE_2", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___INSTRTN_CODE_3 as INSTRTN_CODE_3", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___INSTRTN_CODE_4 as INSTRTN_CODE_4", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___INSTRTN_CODE_5 as INSTRTN_CODE_5", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___CREATED_SOURCE_TYPE as CREATED_SOURCE_TYPE", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___CREATED_SOURCE as CREATED_SOURCE", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___CREATED_DTTM as CREATED_DTTM", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___LAST_UPDATED_SOURCE_TYPE as LAST_UPDATED_SOURCE_TYPE", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___LAST_UPDATED_SOURCE as LAST_UPDATED_SOURCE", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___LAST_UPDATED_DTTM as LAST_UPDATED_DTTM", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___VENDOR_ITEM_NBR as VENDOR_ITEM_NBR", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___MANUFACTURED_PLANT as MANUFACTURED_PLANT", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___BATCH_NBR as BATCH_NBR", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___ASSIGNED_QTY as ASSIGNED_QTY", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___PREPACK_GROUP_CODE as PREPACK_GROUP_CODE", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___PACK_CODE as PACK_CODE", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___SHIPPED_QTY as SHIPPED_QTY", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___INITIAL_QTY as INITIAL_QTY", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___QTY_CONV_FACTOR as QTY_CONV_FACTOR", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___QTY_UOM_ID_BASE as QTY_UOM_ID_BASE", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___WEIGHT_UOM_ID_BASE as WEIGHT_UOM_ID_BASE", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___VOLUME_UOM_ID_BASE as VOLUME_UOM_ID_BASE", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___ITEM_NAME as ITEM_NAME", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___TC_ORDER_LINE_ID as TC_ORDER_LINE_ID", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___HAZMAT_UOM as HAZMAT_UOM", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___HAZMAT_QTY as HAZMAT_QTY", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___REF_FIELD_1 as REF_FIELD_1", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___REF_FIELD_2 as REF_FIELD_2", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___REF_FIELD_3 as REF_FIELD_3", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___REF_FIELD_4 as REF_FIELD_4", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___REF_FIELD_5 as REF_FIELD_5", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___REF_FIELD_6 as REF_FIELD_6", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___REF_FIELD_7 as REF_FIELD_7", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___REF_FIELD_8 as REF_FIELD_8", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___REF_FIELD_9 as REF_FIELD_9", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___REF_FIELD_10 as REF_FIELD_10", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___REF_NUM1 as REF_NUM1", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___REF_NUM2 as REF_NUM2", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___REF_NUM3 as REF_NUM3", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___REF_NUM4 as REF_NUM4", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___REF_NUM5 as REF_NUM5", \
	"SQ_Shortcut_to_WM_LPN_DETAIL_PRE___CHASE_WAVE_NBR as CHASE_WAVE_NBR" \
)

# COMMAND ----------
# Processing node SQ_Shortcut_to_SITE_PROFILE, type SOURCE 
# COLUMN COUNT: 2

SQ_Shortcut_to_SITE_PROFILE = spark.sql(f"""SELECT
SITE_PROFILE.LOCATION_ID,
SITE_PROFILE.STORE_NBR
FROM SITE_PROFILE""").withColumn("sys_row_id", monotonically_increasing_id())

# COMMAND ----------
# Processing node JNR_SITE_PROFILE, type JOINER 
# COLUMN COUNT: 90

JNR_SITE_PROFILE = SQ_Shortcut_to_SITE_PROFILE.join(EXP_INT_CONVERSION,[SQ_Shortcut_to_SITE_PROFILE.STORE_NBR == EXP_INT_CONVERSION.o_DC_NBR],'inner')

# COMMAND ----------
# Processing node JNR_WM_LPN_DETAIL, type JOINER . Note: using additional SELECT to rename incoming columns
# COLUMN COUNT: 94

# for each involved DataFrame, append the dataframe name to each column
SQ_Shortcut_to_WM_LPN_DETAIL_temp = SQ_Shortcut_to_WM_LPN_DETAIL.toDF(*["SQ_Shortcut_to_WM_LPN_DETAIL___" + col for col in SQ_Shortcut_to_WM_LPN_DETAIL.columns])
JNR_SITE_PROFILE_temp = JNR_SITE_PROFILE.toDF(*["JNR_SITE_PROFILE___" + col for col in JNR_SITE_PROFILE.columns])

JNR_WM_LPN_DETAIL = SQ_Shortcut_to_WM_LPN_DETAIL_temp.join(JNR_SITE_PROFILE_temp,[SQ_Shortcut_to_WM_LPN_DETAIL_temp.SQ_Shortcut_to_WM_LPN_DETAIL___LOCATION_ID == JNR_SITE_PROFILE_temp.JNR_SITE_PROFILE___LOCATION_ID, SQ_Shortcut_to_WM_LPN_DETAIL_temp.SQ_Shortcut_to_WM_LPN_DETAIL___WM_LPN_ID == JNR_SITE_PROFILE_temp.JNR_SITE_PROFILE___LPN_ID, SQ_Shortcut_to_WM_LPN_DETAIL_temp.SQ_Shortcut_to_WM_LPN_DETAIL___WM_LPN_DETAIL_ID == JNR_SITE_PROFILE_temp.JNR_SITE_PROFILE___LPN_DETAIL_ID],'right_outer').selectExpr( \
	"JNR_SITE_PROFILE___LOCATION_ID as LOCATION_ID", \
	"JNR_SITE_PROFILE___LPN_ID as LPN_ID", \
	"JNR_SITE_PROFILE___LPN_DETAIL_ID as LPN_DETAIL_ID", \
	"JNR_SITE_PROFILE___TC_COMPANY_ID as TC_COMPANY_ID", \
	"JNR_SITE_PROFILE___LPN_DETAIL_STATUS as LPN_DETAIL_STATUS", \
	"JNR_SITE_PROFILE___INTERNAL_ORDER_DTL_ID as INTERNAL_ORDER_DTL_ID", \
	"JNR_SITE_PROFILE___DISTRIBUTION_ORDER_DTL_ID as DISTRIBUTION_ORDER_DTL_ID", \
	"JNR_SITE_PROFILE___RECEIVED_QTY as RECEIVED_QTY", \
	"JNR_SITE_PROFILE___BUSINESS_PARTNER_ID as BUSINESS_PARTNER_ID", \
	"JNR_SITE_PROFILE___ITEM_ID as ITEM_ID", \
	"JNR_SITE_PROFILE___GTIN as GTIN", \
	"JNR_SITE_PROFILE___STD_PACK_QTY as STD_PACK_QTY", \
	"JNR_SITE_PROFILE___STD_SUB_PACK_QTY as STD_SUB_PACK_QTY", \
	"JNR_SITE_PROFILE___STD_BUNDLE_QTY as STD_BUNDLE_QTY", \
	"JNR_SITE_PROFILE___INCUBATION_DATE as INCUBATION_DATE", \
	"JNR_SITE_PROFILE___EXPIRATION_DATE as EXPIRATION_DATE", \
	"JNR_SITE_PROFILE___SHIP_BY_DATE as SHIP_BY_DATE", \
	"JNR_SITE_PROFILE___SELL_BY_DTTM as SELL_BY_DTTM", \
	"JNR_SITE_PROFILE___CONSUMPTION_PRIORITY_DTTM as CONSUMPTION_PRIORITY_DTTM", \
	"JNR_SITE_PROFILE___MANUFACTURED_DTTM as MANUFACTURED_DTTM", \
	"JNR_SITE_PROFILE___CNTRY_OF_ORGN as CNTRY_OF_ORGN", \
	"JNR_SITE_PROFILE___INVENTORY_TYPE as INVENTORY_TYPE", \
	"JNR_SITE_PROFILE___PRODUCT_STATUS as PRODUCT_STATUS", \
	"JNR_SITE_PROFILE___ITEM_ATTR_1 as ITEM_ATTR_1", \
	"JNR_SITE_PROFILE___ITEM_ATTR_2 as ITEM_ATTR_2", \
	"JNR_SITE_PROFILE___ITEM_ATTR_3 as ITEM_ATTR_3", \
	"JNR_SITE_PROFILE___ITEM_ATTR_4 as ITEM_ATTR_4", \
	"JNR_SITE_PROFILE___ITEM_ATTR_5 as ITEM_ATTR_5", \
	"JNR_SITE_PROFILE___ASN_DTL_ID as ASN_DTL_ID", \
	"JNR_SITE_PROFILE___PACK_WEIGHT as PACK_WEIGHT", \
	"JNR_SITE_PROFILE___ESTIMATED_WEIGHT as ESTIMATED_WEIGHT", \
	"JNR_SITE_PROFILE___ESTIMATED_VOLUME as ESTIMATED_VOLUME", \
	"JNR_SITE_PROFILE___SIZE_VALUE as SIZE_VALUE", \
	"JNR_SITE_PROFILE___WEIGHT as WEIGHT", \
	"JNR_SITE_PROFILE___QTY_UOM_ID as QTY_UOM_ID", \
	"JNR_SITE_PROFILE___WEIGHT_UOM_ID as WEIGHT_UOM_ID", \
	"JNR_SITE_PROFILE___VOLUME_UOM_ID as VOLUME_UOM_ID", \
	"JNR_SITE_PROFILE___ASSORT_NBR as ASSORT_NBR", \
	"JNR_SITE_PROFILE___CUT_NBR as CUT_NBR", \
	"JNR_SITE_PROFILE___PURCHASE_ORDERS_ID as PURCHASE_ORDERS_ID", \
	"JNR_SITE_PROFILE___TC_PURCHASE_ORDERS_ID as TC_PURCHASE_ORDERS_ID", \
	"JNR_SITE_PROFILE___PURCHASE_ORDERS_LINE_ID as PURCHASE_ORDERS_LINE_ID", \
	"JNR_SITE_PROFILE___TC_PURCHASE_ORDERS_LINE_ID as TC_PURCHASE_ORDERS_LINE_ID", \
	"JNR_SITE_PROFILE___HIBERNATE_VERSION as HIBERNATE_VERSION", \
	"JNR_SITE_PROFILE___INTERNAL_ORDER_ID as INTERNAL_ORDER_ID", \
	"JNR_SITE_PROFILE___INSTRTN_CODE_1 as INSTRTN_CODE_1", \
	"JNR_SITE_PROFILE___INSTRTN_CODE_2 as INSTRTN_CODE_2", \
	"JNR_SITE_PROFILE___INSTRTN_CODE_3 as INSTRTN_CODE_3", \
	"JNR_SITE_PROFILE___INSTRTN_CODE_4 as INSTRTN_CODE_4", \
	"JNR_SITE_PROFILE___INSTRTN_CODE_5 as INSTRTN_CODE_5", \
	"JNR_SITE_PROFILE___CREATED_SOURCE_TYPE as CREATED_SOURCE_TYPE", \
	"JNR_SITE_PROFILE___CREATED_SOURCE as CREATED_SOURCE", \
	"JNR_SITE_PROFILE___CREATED_DTTM as CREATED_DTTM", \
	"JNR_SITE_PROFILE___LAST_UPDATED_SOURCE_TYPE as LAST_UPDATED_SOURCE_TYPE", \
	"JNR_SITE_PROFILE___LAST_UPDATED_SOURCE as LAST_UPDATED_SOURCE", \
	"JNR_SITE_PROFILE___LAST_UPDATED_DTTM as LAST_UPDATED_DTTM", \
	"JNR_SITE_PROFILE___VENDOR_ITEM_NBR as VENDOR_ITEM_NBR", \
	"JNR_SITE_PROFILE___MANUFACTURED_PLANT as MANUFACTURED_PLANT", \
	"JNR_SITE_PROFILE___BATCH_NBR as BATCH_NBR", \
	"JNR_SITE_PROFILE___ASSIGNED_QTY as ASSIGNED_QTY", \
	"JNR_SITE_PROFILE___PREPACK_GROUP_CODE as PREPACK_GROUP_CODE", \
	"JNR_SITE_PROFILE___PACK_CODE as PACK_CODE", \
	"JNR_SITE_PROFILE___SHIPPED_QTY as SHIPPED_QTY", \
	"JNR_SITE_PROFILE___INITIAL_QTY as INITIAL_QTY", \
	"JNR_SITE_PROFILE___QTY_CONV_FACTOR as QTY_CONV_FACTOR", \
	"JNR_SITE_PROFILE___QTY_UOM_ID_BASE as QTY_UOM_ID_BASE", \
	"JNR_SITE_PROFILE___WEIGHT_UOM_ID_BASE as WEIGHT_UOM_ID_BASE", \
	"JNR_SITE_PROFILE___VOLUME_UOM_ID_BASE as VOLUME_UOM_ID_BASE", \
	"JNR_SITE_PROFILE___ITEM_NAME as ITEM_NAME", \
	"JNR_SITE_PROFILE___TC_ORDER_LINE_ID as TC_ORDER_LINE_ID", \
	"JNR_SITE_PROFILE___HAZMAT_UOM as HAZMAT_UOM", \
	"JNR_SITE_PROFILE___HAZMAT_QTY as HAZMAT_QTY", \
	"JNR_SITE_PROFILE___REF_FIELD_1 as REF_FIELD_1", \
	"JNR_SITE_PROFILE___REF_FIELD_2 as REF_FIELD_2", \
	"JNR_SITE_PROFILE___REF_FIELD_3 as REF_FIELD_3", \
	"JNR_SITE_PROFILE___REF_FIELD_4 as REF_FIELD_4", \
	"JNR_SITE_PROFILE___REF_FIELD_5 as REF_FIELD_5", \
	"JNR_SITE_PROFILE___REF_FIELD_6 as REF_FIELD_6", \
	"JNR_SITE_PROFILE___REF_FIELD_7 as REF_FIELD_7", \
	"JNR_SITE_PROFILE___REF_FIELD_8 as REF_FIELD_8", \
	"JNR_SITE_PROFILE___REF_FIELD_9 as REF_FIELD_9", \
	"JNR_SITE_PROFILE___REF_FIELD_10 as REF_FIELD_10", \
	"JNR_SITE_PROFILE___REF_NUM1 as REF_NUM1", \
	"JNR_SITE_PROFILE___REF_NUM2 as REF_NUM2", \
	"JNR_SITE_PROFILE___REF_NUM3 as REF_NUM3", \
	"JNR_SITE_PROFILE___REF_NUM4 as REF_NUM4", \
	"JNR_SITE_PROFILE___REF_NUM5 as REF_NUM5", \
	"JNR_SITE_PROFILE___CHASE_WAVE_NBR as CHASE_WAVE_NBR", \
	"SQ_Shortcut_to_WM_LPN_DETAIL___LOCATION_ID as i_LOCATION_ID", \
	"SQ_Shortcut_to_WM_LPN_DETAIL___WM_LPN_ID as i_WM_LPN_ID", \
	"SQ_Shortcut_to_WM_LPN_DETAIL___WM_LPN_DETAIL_ID as i_WM_LPN_DETAIL_ID", \
	"SQ_Shortcut_to_WM_LPN_DETAIL___WM_CREATED_TSTMP as i_WM_CREATED_TSTMP", \
	"SQ_Shortcut_to_WM_LPN_DETAIL___WM_LAST_UPDATED_TSTMP as i_WM_LAST_UPDATED_TSTMP", \
	"SQ_Shortcut_to_WM_LPN_DETAIL___LOAD_TSTMP as i_LOAD_TSTMP")

# COMMAND ----------
# Processing node FIL_UNCHANGED_RECORDS, type FILTER 
# COLUMN COUNT: 93

# for each involved DataFrame, append the dataframe name to each column
JNR_WM_LPN_DETAIL_temp = JNR_WM_LPN_DETAIL.toDF(*["JNR_WM_LPN_DETAIL___" + col for col in JNR_WM_LPN_DETAIL.columns])

FIL_UNCHANGED_RECORDS = JNR_WM_LPN_DETAIL_temp.selectExpr( \
	"JNR_WM_LPN_DETAIL___LOCATION_ID as LOCATION_ID", \
	"JNR_WM_LPN_DETAIL___LPN_ID as LPN_ID", \
	"JNR_WM_LPN_DETAIL___LPN_DETAIL_ID as LPN_DETAIL_ID", \
	"JNR_WM_LPN_DETAIL___TC_COMPANY_ID as TC_COMPANY_ID", \
	"JNR_WM_LPN_DETAIL___LPN_DETAIL_STATUS as LPN_DETAIL_STATUS", \
	"JNR_WM_LPN_DETAIL___INTERNAL_ORDER_DTL_ID as INTERNAL_ORDER_DTL_ID", \
	"JNR_WM_LPN_DETAIL___DISTRIBUTION_ORDER_DTL_ID as DISTRIBUTION_ORDER_DTL_ID", \
	"JNR_WM_LPN_DETAIL___RECEIVED_QTY as RECEIVED_QTY", \
	"JNR_WM_LPN_DETAIL___BUSINESS_PARTNER_ID as BUSINESS_PARTNER_ID", \
	"JNR_WM_LPN_DETAIL___ITEM_ID as ITEM_ID", \
	"JNR_WM_LPN_DETAIL___GTIN as GTIN", \
	"JNR_WM_LPN_DETAIL___STD_PACK_QTY as STD_PACK_QTY", \
	"JNR_WM_LPN_DETAIL___STD_SUB_PACK_QTY as STD_SUB_PACK_QTY", \
	"JNR_WM_LPN_DETAIL___STD_BUNDLE_QTY as STD_BUNDLE_QTY", \
	"JNR_WM_LPN_DETAIL___INCUBATION_DATE as INCUBATION_DATE", \
	"JNR_WM_LPN_DETAIL___EXPIRATION_DATE as EXPIRATION_DATE", \
	"JNR_WM_LPN_DETAIL___SHIP_BY_DATE as SHIP_BY_DATE", \
	"JNR_WM_LPN_DETAIL___SELL_BY_DTTM as SELL_BY_DTTM", \
	"JNR_WM_LPN_DETAIL___CONSUMPTION_PRIORITY_DTTM as CONSUMPTION_PRIORITY_DTTM", \
	"JNR_WM_LPN_DETAIL___MANUFACTURED_DTTM as MANUFACTURED_DTTM", \
	"JNR_WM_LPN_DETAIL___CNTRY_OF_ORGN as CNTRY_OF_ORGN", \
	"JNR_WM_LPN_DETAIL___INVENTORY_TYPE as INVENTORY_TYPE", \
	"JNR_WM_LPN_DETAIL___PRODUCT_STATUS as PRODUCT_STATUS", \
	"JNR_WM_LPN_DETAIL___ITEM_ATTR_1 as ITEM_ATTR_1", \
	"JNR_WM_LPN_DETAIL___ITEM_ATTR_2 as ITEM_ATTR_2", \
	"JNR_WM_LPN_DETAIL___ITEM_ATTR_3 as ITEM_ATTR_3", \
	"JNR_WM_LPN_DETAIL___ITEM_ATTR_4 as ITEM_ATTR_4", \
	"JNR_WM_LPN_DETAIL___ITEM_ATTR_5 as ITEM_ATTR_5", \
	"JNR_WM_LPN_DETAIL___ASN_DTL_ID as ASN_DTL_ID", \
	"JNR_WM_LPN_DETAIL___PACK_WEIGHT as PACK_WEIGHT", \
	"JNR_WM_LPN_DETAIL___ESTIMATED_WEIGHT as ESTIMATED_WEIGHT", \
	"JNR_WM_LPN_DETAIL___ESTIMATED_VOLUME as ESTIMATED_VOLUME", \
	"JNR_WM_LPN_DETAIL___SIZE_VALUE as SIZE_VALUE", \
	"JNR_WM_LPN_DETAIL___WEIGHT as WEIGHT", \
	"JNR_WM_LPN_DETAIL___QTY_UOM_ID as QTY_UOM_ID", \
	"JNR_WM_LPN_DETAIL___WEIGHT_UOM_ID as WEIGHT_UOM_ID", \
	"JNR_WM_LPN_DETAIL___VOLUME_UOM_ID as VOLUME_UOM_ID", \
	"JNR_WM_LPN_DETAIL___ASSORT_NBR as ASSORT_NBR", \
	"JNR_WM_LPN_DETAIL___CUT_NBR as CUT_NBR", \
	"JNR_WM_LPN_DETAIL___PURCHASE_ORDERS_ID as PURCHASE_ORDERS_ID", \
	"JNR_WM_LPN_DETAIL___TC_PURCHASE_ORDERS_ID as TC_PURCHASE_ORDERS_ID", \
	"JNR_WM_LPN_DETAIL___PURCHASE_ORDERS_LINE_ID as PURCHASE_ORDERS_LINE_ID", \
	"JNR_WM_LPN_DETAIL___TC_PURCHASE_ORDERS_LINE_ID as TC_PURCHASE_ORDERS_LINE_ID", \
	"JNR_WM_LPN_DETAIL___HIBERNATE_VERSION as HIBERNATE_VERSION", \
	"JNR_WM_LPN_DETAIL___INTERNAL_ORDER_ID as INTERNAL_ORDER_ID", \
	"JNR_WM_LPN_DETAIL___INSTRTN_CODE_1 as INSTRTN_CODE_1", \
	"JNR_WM_LPN_DETAIL___INSTRTN_CODE_2 as INSTRTN_CODE_2", \
	"JNR_WM_LPN_DETAIL___INSTRTN_CODE_3 as INSTRTN_CODE_3", \
	"JNR_WM_LPN_DETAIL___INSTRTN_CODE_4 as INSTRTN_CODE_4", \
	"JNR_WM_LPN_DETAIL___INSTRTN_CODE_5 as INSTRTN_CODE_5", \
	"JNR_WM_LPN_DETAIL___CREATED_SOURCE_TYPE as CREATED_SOURCE_TYPE", \
	"JNR_WM_LPN_DETAIL___CREATED_SOURCE as CREATED_SOURCE", \
	"JNR_WM_LPN_DETAIL___CREATED_DTTM as CREATED_DTTM", \
	"JNR_WM_LPN_DETAIL___LAST_UPDATED_SOURCE_TYPE as LAST_UPDATED_SOURCE_TYPE", \
	"JNR_WM_LPN_DETAIL___LAST_UPDATED_SOURCE as LAST_UPDATED_SOURCE", \
	"JNR_WM_LPN_DETAIL___LAST_UPDATED_DTTM as LAST_UPDATED_DTTM", \
	"JNR_WM_LPN_DETAIL___VENDOR_ITEM_NBR as VENDOR_ITEM_NBR", \
	"JNR_WM_LPN_DETAIL___MANUFACTURED_PLANT as MANUFACTURED_PLANT", \
	"JNR_WM_LPN_DETAIL___BATCH_NBR as BATCH_NBR", \
	"JNR_WM_LPN_DETAIL___ASSIGNED_QTY as ASSIGNED_QTY", \
	"JNR_WM_LPN_DETAIL___PREPACK_GROUP_CODE as PREPACK_GROUP_CODE", \
	"JNR_WM_LPN_DETAIL___PACK_CODE as PACK_CODE", \
	"JNR_WM_LPN_DETAIL___SHIPPED_QTY as SHIPPED_QTY", \
	"JNR_WM_LPN_DETAIL___INITIAL_QTY as INITIAL_QTY", \
	"JNR_WM_LPN_DETAIL___QTY_CONV_FACTOR as QTY_CONV_FACTOR", \
	"JNR_WM_LPN_DETAIL___QTY_UOM_ID_BASE as QTY_UOM_ID_BASE", \
	"JNR_WM_LPN_DETAIL___WEIGHT_UOM_ID_BASE as WEIGHT_UOM_ID_BASE", \
	"JNR_WM_LPN_DETAIL___VOLUME_UOM_ID_BASE as VOLUME_UOM_ID_BASE", \
	"JNR_WM_LPN_DETAIL___ITEM_NAME as ITEM_NAME", \
	"JNR_WM_LPN_DETAIL___TC_ORDER_LINE_ID as TC_ORDER_LINE_ID", \
	"JNR_WM_LPN_DETAIL___HAZMAT_UOM as HAZMAT_UOM", \
	"JNR_WM_LPN_DETAIL___HAZMAT_QTY as HAZMAT_QTY", \
	"JNR_WM_LPN_DETAIL___REF_FIELD_1 as REF_FIELD_1", \
	"JNR_WM_LPN_DETAIL___REF_FIELD_2 as REF_FIELD_2", \
	"JNR_WM_LPN_DETAIL___REF_FIELD_3 as REF_FIELD_3", \
	"JNR_WM_LPN_DETAIL___REF_FIELD_4 as REF_FIELD_4", \
	"JNR_WM_LPN_DETAIL___REF_FIELD_5 as REF_FIELD_5", \
	"JNR_WM_LPN_DETAIL___REF_FIELD_6 as REF_FIELD_6", \
	"JNR_WM_LPN_DETAIL___REF_FIELD_7 as REF_FIELD_7", \
	"JNR_WM_LPN_DETAIL___REF_FIELD_8 as REF_FIELD_8", \
	"JNR_WM_LPN_DETAIL___REF_FIELD_9 as REF_FIELD_9", \
	"JNR_WM_LPN_DETAIL___REF_FIELD_10 as REF_FIELD_10", \
	"JNR_WM_LPN_DETAIL___REF_NUM1 as REF_NUM1", \
	"JNR_WM_LPN_DETAIL___REF_NUM2 as REF_NUM2", \
	"JNR_WM_LPN_DETAIL___REF_NUM3 as REF_NUM3", \
	"JNR_WM_LPN_DETAIL___REF_NUM4 as REF_NUM4", \
	"JNR_WM_LPN_DETAIL___REF_NUM5 as REF_NUM5", \
	"JNR_WM_LPN_DETAIL___CHASE_WAVE_NBR as CHASE_WAVE_NBR", \
	"JNR_WM_LPN_DETAIL___i_WM_LPN_ID as i_WM_LPN_ID", \
	"JNR_WM_LPN_DETAIL___i_WM_LPN_DETAIL_ID as i_WM_LPN_DETAIL_ID", \
	"JNR_WM_LPN_DETAIL___i_WM_CREATED_TSTMP as i_WM_CREATED_TSTMP", \
	"JNR_WM_LPN_DETAIL___i_WM_LAST_UPDATED_TSTMP as i_WM_LAST_UPDATED_TSTMP", \
	"JNR_WM_LPN_DETAIL___i_LOAD_TSTMP as i_LOAD_TSTMP")\
    .filter("i_WM_LPN_DETAIL_ID is Null OR (  i_WM_LPN_DETAIL_ID is NOT Null AND ( COALESCE(CREATED_DTTM, date'1900-01-01') != COALESCE(i_WM_CREATED_TSTMP, date'1900-01-01') \
             OR COALESCE(LAST_UPDATED_DTTM, date'1900-01-01') != COALESCE(i_WM_LAST_UPDATED_TSTMP, date'1900-01-01')))").withColumn("sys_row_id", monotonically_increasing_id())


# COMMAND ----------
# Processing node EXP_UPD_VALIDATOR, type EXPRESSION 
# COLUMN COUNT: 91

# for each involved DataFrame, append the dataframe name to each column
FIL_UNCHANGED_RECORDS_temp = FIL_UNCHANGED_RECORDS.toDF(*["FIL_UNCHANGED_RECORDS___" + col for col in FIL_UNCHANGED_RECORDS.columns])

EXP_UPD_VALIDATOR = FIL_UNCHANGED_RECORDS_temp.selectExpr( \
	"FIL_UNCHANGED_RECORDS___sys_row_id as sys_row_id", \
	"FIL_UNCHANGED_RECORDS___LOCATION_ID as LOCATION_ID", \
	"FIL_UNCHANGED_RECORDS___LPN_ID as LPN_ID", \
	"FIL_UNCHANGED_RECORDS___LPN_DETAIL_ID as LPN_DETAIL_ID", \
	"FIL_UNCHANGED_RECORDS___TC_COMPANY_ID as TC_COMPANY_ID", \
	"FIL_UNCHANGED_RECORDS___LPN_DETAIL_STATUS as LPN_DETAIL_STATUS", \
	"FIL_UNCHANGED_RECORDS___INTERNAL_ORDER_DTL_ID as INTERNAL_ORDER_DTL_ID", \
	"FIL_UNCHANGED_RECORDS___DISTRIBUTION_ORDER_DTL_ID as DISTRIBUTION_ORDER_DTL_ID", \
	"FIL_UNCHANGED_RECORDS___RECEIVED_QTY as RECEIVED_QTY", \
	"FIL_UNCHANGED_RECORDS___BUSINESS_PARTNER_ID as BUSINESS_PARTNER_ID", \
	"FIL_UNCHANGED_RECORDS___ITEM_ID as ITEM_ID", \
	"FIL_UNCHANGED_RECORDS___GTIN as GTIN", \
	"FIL_UNCHANGED_RECORDS___STD_PACK_QTY as STD_PACK_QTY", \
	"FIL_UNCHANGED_RECORDS___STD_SUB_PACK_QTY as STD_SUB_PACK_QTY", \
	"FIL_UNCHANGED_RECORDS___STD_BUNDLE_QTY as STD_BUNDLE_QTY", \
	"FIL_UNCHANGED_RECORDS___INCUBATION_DATE as INCUBATION_DATE", \
	"FIL_UNCHANGED_RECORDS___EXPIRATION_DATE as EXPIRATION_DATE", \
	"FIL_UNCHANGED_RECORDS___SHIP_BY_DATE as SHIP_BY_DATE", \
	"FIL_UNCHANGED_RECORDS___SELL_BY_DTTM as SELL_BY_DTTM", \
	"FIL_UNCHANGED_RECORDS___CONSUMPTION_PRIORITY_DTTM as CONSUMPTION_PRIORITY_DTTM", \
	"FIL_UNCHANGED_RECORDS___MANUFACTURED_DTTM as MANUFACTURED_DTTM", \
	"FIL_UNCHANGED_RECORDS___CNTRY_OF_ORGN as CNTRY_OF_ORGN", \
	"FIL_UNCHANGED_RECORDS___INVENTORY_TYPE as INVENTORY_TYPE", \
	"FIL_UNCHANGED_RECORDS___PRODUCT_STATUS as PRODUCT_STATUS", \
	"FIL_UNCHANGED_RECORDS___ITEM_ATTR_1 as ITEM_ATTR_1", \
	"FIL_UNCHANGED_RECORDS___ITEM_ATTR_2 as ITEM_ATTR_2", \
	"FIL_UNCHANGED_RECORDS___ITEM_ATTR_3 as ITEM_ATTR_3", \
	"FIL_UNCHANGED_RECORDS___ITEM_ATTR_4 as ITEM_ATTR_4", \
	"FIL_UNCHANGED_RECORDS___ITEM_ATTR_5 as ITEM_ATTR_5", \
	"FIL_UNCHANGED_RECORDS___ASN_DTL_ID as ASN_DTL_ID", \
	"FIL_UNCHANGED_RECORDS___PACK_WEIGHT as PACK_WEIGHT", \
	"FIL_UNCHANGED_RECORDS___ESTIMATED_WEIGHT as ESTIMATED_WEIGHT", \
	"FIL_UNCHANGED_RECORDS___ESTIMATED_VOLUME as ESTIMATED_VOLUME", \
	"FIL_UNCHANGED_RECORDS___SIZE_VALUE as SIZE_VALUE", \
	"FIL_UNCHANGED_RECORDS___WEIGHT as WEIGHT", \
	"FIL_UNCHANGED_RECORDS___QTY_UOM_ID as QTY_UOM_ID", \
	"FIL_UNCHANGED_RECORDS___WEIGHT_UOM_ID as WEIGHT_UOM_ID", \
	"FIL_UNCHANGED_RECORDS___VOLUME_UOM_ID as VOLUME_UOM_ID", \
	"FIL_UNCHANGED_RECORDS___ASSORT_NBR as ASSORT_NBR", \
	"FIL_UNCHANGED_RECORDS___CUT_NBR as CUT_NBR", \
	"FIL_UNCHANGED_RECORDS___PURCHASE_ORDERS_ID as PURCHASE_ORDERS_ID", \
	"FIL_UNCHANGED_RECORDS___TC_PURCHASE_ORDERS_ID as TC_PURCHASE_ORDERS_ID", \
	"FIL_UNCHANGED_RECORDS___PURCHASE_ORDERS_LINE_ID as PURCHASE_ORDERS_LINE_ID", \
	"FIL_UNCHANGED_RECORDS___TC_PURCHASE_ORDERS_LINE_ID as TC_PURCHASE_ORDERS_LINE_ID", \
	"FIL_UNCHANGED_RECORDS___HIBERNATE_VERSION as HIBERNATE_VERSION", \
	"FIL_UNCHANGED_RECORDS___INTERNAL_ORDER_ID as INTERNAL_ORDER_ID", \
	"FIL_UNCHANGED_RECORDS___INSTRTN_CODE_1 as INSTRTN_CODE_1", \
	"FIL_UNCHANGED_RECORDS___INSTRTN_CODE_2 as INSTRTN_CODE_2", \
	"FIL_UNCHANGED_RECORDS___INSTRTN_CODE_3 as INSTRTN_CODE_3", \
	"FIL_UNCHANGED_RECORDS___INSTRTN_CODE_4 as INSTRTN_CODE_4", \
	"FIL_UNCHANGED_RECORDS___INSTRTN_CODE_5 as INSTRTN_CODE_5", \
	"FIL_UNCHANGED_RECORDS___CREATED_SOURCE_TYPE as CREATED_SOURCE_TYPE", \
	"FIL_UNCHANGED_RECORDS___CREATED_SOURCE as CREATED_SOURCE", \
	"FIL_UNCHANGED_RECORDS___CREATED_DTTM as CREATED_DTTM", \
	"FIL_UNCHANGED_RECORDS___LAST_UPDATED_SOURCE_TYPE as LAST_UPDATED_SOURCE_TYPE", \
	"FIL_UNCHANGED_RECORDS___LAST_UPDATED_SOURCE as LAST_UPDATED_SOURCE", \
	"FIL_UNCHANGED_RECORDS___LAST_UPDATED_DTTM as LAST_UPDATED_DTTM", \
	"FIL_UNCHANGED_RECORDS___VENDOR_ITEM_NBR as VENDOR_ITEM_NBR", \
	"FIL_UNCHANGED_RECORDS___MANUFACTURED_PLANT as MANUFACTURED_PLANT", \
	"FIL_UNCHANGED_RECORDS___BATCH_NBR as BATCH_NBR", \
	"FIL_UNCHANGED_RECORDS___ASSIGNED_QTY as ASSIGNED_QTY", \
	"FIL_UNCHANGED_RECORDS___PREPACK_GROUP_CODE as PREPACK_GROUP_CODE", \
	"FIL_UNCHANGED_RECORDS___PACK_CODE as PACK_CODE", \
	"FIL_UNCHANGED_RECORDS___SHIPPED_QTY as SHIPPED_QTY", \
	"FIL_UNCHANGED_RECORDS___INITIAL_QTY as INITIAL_QTY", \
	"FIL_UNCHANGED_RECORDS___QTY_CONV_FACTOR as QTY_CONV_FACTOR", \
	"FIL_UNCHANGED_RECORDS___QTY_UOM_ID_BASE as QTY_UOM_ID_BASE", \
	"FIL_UNCHANGED_RECORDS___WEIGHT_UOM_ID_BASE as WEIGHT_UOM_ID_BASE", \
	"FIL_UNCHANGED_RECORDS___VOLUME_UOM_ID_BASE as VOLUME_UOM_ID_BASE", \
	"FIL_UNCHANGED_RECORDS___ITEM_NAME as ITEM_NAME", \
	"FIL_UNCHANGED_RECORDS___TC_ORDER_LINE_ID as TC_ORDER_LINE_ID", \
	"FIL_UNCHANGED_RECORDS___HAZMAT_UOM as HAZMAT_UOM", \
	"FIL_UNCHANGED_RECORDS___HAZMAT_QTY as HAZMAT_QTY", \
	"FIL_UNCHANGED_RECORDS___REF_FIELD_1 as REF_FIELD_1", \
	"FIL_UNCHANGED_RECORDS___REF_FIELD_2 as REF_FIELD_2", \
	"FIL_UNCHANGED_RECORDS___REF_FIELD_3 as REF_FIELD_3", \
	"FIL_UNCHANGED_RECORDS___REF_FIELD_4 as REF_FIELD_4", \
	"FIL_UNCHANGED_RECORDS___REF_FIELD_5 as REF_FIELD_5", \
	"FIL_UNCHANGED_RECORDS___REF_FIELD_6 as REF_FIELD_6", \
	"FIL_UNCHANGED_RECORDS___REF_FIELD_7 as REF_FIELD_7", \
	"FIL_UNCHANGED_RECORDS___REF_FIELD_8 as REF_FIELD_8", \
	"FIL_UNCHANGED_RECORDS___REF_FIELD_9 as REF_FIELD_9", \
	"FIL_UNCHANGED_RECORDS___REF_FIELD_10 as REF_FIELD_10", \
	"FIL_UNCHANGED_RECORDS___REF_NUM1 as REF_NUM1", \
	"FIL_UNCHANGED_RECORDS___REF_NUM2 as REF_NUM2", \
	"FIL_UNCHANGED_RECORDS___REF_NUM3 as REF_NUM3", \
	"FIL_UNCHANGED_RECORDS___REF_NUM4 as REF_NUM4", \
	"FIL_UNCHANGED_RECORDS___REF_NUM5 as REF_NUM5", \
	"FIL_UNCHANGED_RECORDS___CHASE_WAVE_NBR as CHASE_WAVE_NBR", \
	"CURRENT_TIMESTAMP as UPDATE_TSTMP", \
	"IF (FIL_UNCHANGED_RECORDS___i_LOAD_TSTMP IS NULL, CURRENT_TIMESTAMP, FIL_UNCHANGED_RECORDS___i_LOAD_TSTMP) as LOAD_TSTMP", \
	"IF (FIL_UNCHANGED_RECORDS___i_WM_LPN_DETAIL_ID IS NULL, 1, 2) as o_UPDATE_VALIDATOR" \
)

# COMMAND ----------
# Processing node UPD_INS_UPD, type UPDATE_STRATEGY 
# COLUMN COUNT: 91

# for each involved DataFrame, append the dataframe name to each column
EXP_UPD_VALIDATOR_temp = EXP_UPD_VALIDATOR.toDF(*["EXP_UPD_VALIDATOR___" + col for col in EXP_UPD_VALIDATOR.columns])

UPD_INS_UPD = EXP_UPD_VALIDATOR_temp.selectExpr( \
	"EXP_UPD_VALIDATOR___LOCATION_ID as LOCATION_ID", \
	"EXP_UPD_VALIDATOR___LPN_ID as LPN_ID", \
	"EXP_UPD_VALIDATOR___LPN_DETAIL_ID as LPN_DETAIL_ID", \
	"EXP_UPD_VALIDATOR___TC_COMPANY_ID as TC_COMPANY_ID", \
	"EXP_UPD_VALIDATOR___LPN_DETAIL_STATUS as LPN_DETAIL_STATUS", \
	"EXP_UPD_VALIDATOR___INTERNAL_ORDER_DTL_ID as INTERNAL_ORDER_DTL_ID", \
	"EXP_UPD_VALIDATOR___DISTRIBUTION_ORDER_DTL_ID as DISTRIBUTION_ORDER_DTL_ID", \
	"EXP_UPD_VALIDATOR___RECEIVED_QTY as RECEIVED_QTY", \
	"EXP_UPD_VALIDATOR___BUSINESS_PARTNER_ID as BUSINESS_PARTNER_ID", \
	"EXP_UPD_VALIDATOR___ITEM_ID as ITEM_ID", \
	"EXP_UPD_VALIDATOR___GTIN as GTIN", \
	"EXP_UPD_VALIDATOR___STD_PACK_QTY as STD_PACK_QTY", \
	"EXP_UPD_VALIDATOR___STD_SUB_PACK_QTY as STD_SUB_PACK_QTY", \
	"EXP_UPD_VALIDATOR___STD_BUNDLE_QTY as STD_BUNDLE_QTY", \
	"EXP_UPD_VALIDATOR___INCUBATION_DATE as INCUBATION_DATE", \
	"EXP_UPD_VALIDATOR___EXPIRATION_DATE as EXPIRATION_DATE", \
	"EXP_UPD_VALIDATOR___SHIP_BY_DATE as SHIP_BY_DATE", \
	"EXP_UPD_VALIDATOR___SELL_BY_DTTM as SELL_BY_DTTM", \
	"EXP_UPD_VALIDATOR___CONSUMPTION_PRIORITY_DTTM as CONSUMPTION_PRIORITY_DTTM", \
	"EXP_UPD_VALIDATOR___MANUFACTURED_DTTM as MANUFACTURED_DTTM", \
	"EXP_UPD_VALIDATOR___CNTRY_OF_ORGN as CNTRY_OF_ORGN", \
	"EXP_UPD_VALIDATOR___INVENTORY_TYPE as INVENTORY_TYPE", \
	"EXP_UPD_VALIDATOR___PRODUCT_STATUS as PRODUCT_STATUS", \
	"EXP_UPD_VALIDATOR___ITEM_ATTR_1 as ITEM_ATTR_1", \
	"EXP_UPD_VALIDATOR___ITEM_ATTR_2 as ITEM_ATTR_2", \
	"EXP_UPD_VALIDATOR___ITEM_ATTR_3 as ITEM_ATTR_3", \
	"EXP_UPD_VALIDATOR___ITEM_ATTR_4 as ITEM_ATTR_4", \
	"EXP_UPD_VALIDATOR___ITEM_ATTR_5 as ITEM_ATTR_5", \
	"EXP_UPD_VALIDATOR___ASN_DTL_ID as ASN_DTL_ID", \
	"EXP_UPD_VALIDATOR___PACK_WEIGHT as PACK_WEIGHT", \
	"EXP_UPD_VALIDATOR___ESTIMATED_WEIGHT as ESTIMATED_WEIGHT", \
	"EXP_UPD_VALIDATOR___ESTIMATED_VOLUME as ESTIMATED_VOLUME", \
	"EXP_UPD_VALIDATOR___SIZE_VALUE as SIZE_VALUE", \
	"EXP_UPD_VALIDATOR___WEIGHT as WEIGHT", \
	"EXP_UPD_VALIDATOR___QTY_UOM_ID as QTY_UOM_ID", \
	"EXP_UPD_VALIDATOR___WEIGHT_UOM_ID as WEIGHT_UOM_ID", \
	"EXP_UPD_VALIDATOR___VOLUME_UOM_ID as VOLUME_UOM_ID", \
	"EXP_UPD_VALIDATOR___ASSORT_NBR as ASSORT_NBR", \
	"EXP_UPD_VALIDATOR___CUT_NBR as CUT_NBR", \
	"EXP_UPD_VALIDATOR___PURCHASE_ORDERS_ID as PURCHASE_ORDERS_ID", \
	"EXP_UPD_VALIDATOR___TC_PURCHASE_ORDERS_ID as TC_PURCHASE_ORDERS_ID", \
	"EXP_UPD_VALIDATOR___PURCHASE_ORDERS_LINE_ID as PURCHASE_ORDERS_LINE_ID", \
	"EXP_UPD_VALIDATOR___TC_PURCHASE_ORDERS_LINE_ID as TC_PURCHASE_ORDERS_LINE_ID", \
	"EXP_UPD_VALIDATOR___HIBERNATE_VERSION as HIBERNATE_VERSION", \
	"EXP_UPD_VALIDATOR___INTERNAL_ORDER_ID as INTERNAL_ORDER_ID", \
	"EXP_UPD_VALIDATOR___INSTRTN_CODE_1 as INSTRTN_CODE_1", \
	"EXP_UPD_VALIDATOR___INSTRTN_CODE_2 as INSTRTN_CODE_2", \
	"EXP_UPD_VALIDATOR___INSTRTN_CODE_3 as INSTRTN_CODE_3", \
	"EXP_UPD_VALIDATOR___INSTRTN_CODE_4 as INSTRTN_CODE_4", \
	"EXP_UPD_VALIDATOR___INSTRTN_CODE_5 as INSTRTN_CODE_5", \
	"EXP_UPD_VALIDATOR___CREATED_SOURCE_TYPE as CREATED_SOURCE_TYPE", \
	"EXP_UPD_VALIDATOR___CREATED_SOURCE as CREATED_SOURCE", \
	"EXP_UPD_VALIDATOR___CREATED_DTTM as CREATED_DTTM", \
	"EXP_UPD_VALIDATOR___LAST_UPDATED_SOURCE_TYPE as LAST_UPDATED_SOURCE_TYPE", \
	"EXP_UPD_VALIDATOR___LAST_UPDATED_SOURCE as LAST_UPDATED_SOURCE", \
	"EXP_UPD_VALIDATOR___LAST_UPDATED_DTTM as LAST_UPDATED_DTTM", \
	"EXP_UPD_VALIDATOR___VENDOR_ITEM_NBR as VENDOR_ITEM_NBR", \
	"EXP_UPD_VALIDATOR___MANUFACTURED_PLANT as MANUFACTURED_PLANT", \
	"EXP_UPD_VALIDATOR___BATCH_NBR as BATCH_NBR", \
	"EXP_UPD_VALIDATOR___ASSIGNED_QTY as ASSIGNED_QTY", \
	"EXP_UPD_VALIDATOR___PREPACK_GROUP_CODE as PREPACK_GROUP_CODE", \
	"EXP_UPD_VALIDATOR___PACK_CODE as PACK_CODE", \
	"EXP_UPD_VALIDATOR___SHIPPED_QTY as SHIPPED_QTY", \
	"EXP_UPD_VALIDATOR___INITIAL_QTY as INITIAL_QTY", \
	"EXP_UPD_VALIDATOR___QTY_CONV_FACTOR as QTY_CONV_FACTOR", \
	"EXP_UPD_VALIDATOR___QTY_UOM_ID_BASE as QTY_UOM_ID_BASE", \
	"EXP_UPD_VALIDATOR___WEIGHT_UOM_ID_BASE as WEIGHT_UOM_ID_BASE", \
	"EXP_UPD_VALIDATOR___VOLUME_UOM_ID_BASE as VOLUME_UOM_ID_BASE", \
	"EXP_UPD_VALIDATOR___ITEM_NAME as ITEM_NAME", \
	"EXP_UPD_VALIDATOR___TC_ORDER_LINE_ID as TC_ORDER_LINE_ID", \
	"EXP_UPD_VALIDATOR___HAZMAT_UOM as HAZMAT_UOM", \
	"EXP_UPD_VALIDATOR___HAZMAT_QTY as HAZMAT_QTY", \
	"EXP_UPD_VALIDATOR___REF_FIELD_1 as REF_FIELD_1", \
	"EXP_UPD_VALIDATOR___REF_FIELD_2 as REF_FIELD_2", \
	"EXP_UPD_VALIDATOR___REF_FIELD_3 as REF_FIELD_3", \
	"EXP_UPD_VALIDATOR___REF_FIELD_4 as REF_FIELD_4", \
	"EXP_UPD_VALIDATOR___REF_FIELD_5 as REF_FIELD_5", \
	"EXP_UPD_VALIDATOR___REF_FIELD_6 as REF_FIELD_6", \
	"EXP_UPD_VALIDATOR___REF_FIELD_7 as REF_FIELD_7", \
	"EXP_UPD_VALIDATOR___REF_FIELD_8 as REF_FIELD_8", \
	"EXP_UPD_VALIDATOR___REF_FIELD_9 as REF_FIELD_9", \
	"EXP_UPD_VALIDATOR___REF_FIELD_10 as REF_FIELD_10", \
	"EXP_UPD_VALIDATOR___REF_NUM1 as REF_NUM1", \
	"EXP_UPD_VALIDATOR___REF_NUM2 as REF_NUM2", \
	"EXP_UPD_VALIDATOR___REF_NUM3 as REF_NUM3", \
	"EXP_UPD_VALIDATOR___REF_NUM4 as REF_NUM4", \
	"EXP_UPD_VALIDATOR___REF_NUM5 as REF_NUM5", \
	"EXP_UPD_VALIDATOR___CHASE_WAVE_NBR as CHASE_WAVE_NBR", \
	"EXP_UPD_VALIDATOR___UPDATE_TSTMP as UPDATE_TSTMP", \
	"EXP_UPD_VALIDATOR___LOAD_TSTMP as LOAD_TSTMP", \
	"EXP_UPD_VALIDATOR___o_UPDATE_VALIDATOR as o_UPDATE_VALIDATOR") \
	.withColumn('pyspark_data_action', when(EXP_UPD_VALIDATOR.o_UPDATE_VALIDATOR ==(lit(1)) , lit(0)) .when(EXP_UPD_VALIDATOR.o_UPDATE_VALIDATOR ==(lit(2)) , lit(1)))

# COMMAND ----------
# Processing node Shortcut_to_WM_LPN_DETAIL1, type TARGET 
# COLUMN COUNT: 90

try:
  primary_key = """source.LOCATION_ID = target.LOCATION_ID AND source.WM_LPN_ID = target.WM_LPN_ID AND source.WM_LPN_DETAIL_ID = target.WM_LPN_DETAIL_ID"""
  refined_perf_table = "WM_LPN_DETAIL"
  executeMerge(UPD_INS_UPD, refined_perf_table, primary_key)
  logger.info(f"Merge with {refined_perf_table} completed]")
  logPrevRunDt("WM_LPN_DETAIL", "WM_LPN_DETAIL", "Completed", "N/A", f"{raw}.log_run_details")
except Exception as e:
  logPrevRunDt("WM_LPN_DETAIL", "WM_LPN_DETAIL","Failed",str(e), f"{raw}.log_run_details", )
  raise e
	