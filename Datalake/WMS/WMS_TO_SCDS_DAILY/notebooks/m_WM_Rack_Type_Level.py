
#Code converted on 2023-06-22 20:25:10
import os
import argparse
from pyspark.sql import *
from pyspark.sql.functions import *
from pyspark.sql.window import Window
from pyspark.sql.types import *
from datetime import datetime
from pyspark.dbutils import DBUtils
from Datalake.utils.genericUtilities import *
from Datalake.utils.configs import *
from Datalake.utils.mergeUtils import *
from Datalake.utils.logger import *
# COMMAND ----------

parser = argparse.ArgumentParser()
spark = SparkSession.getActiveSession()
dbutils = DBUtils(spark)

parser.add_argument('env', type=str, help='Env Variable')
args = parser.parse_args()
env = args.env
# env = 'dev'

if env is None or env == '':
    raise ValueError('env is not set')

refine = getEnvPrefix(env) + 'refine'
raw = getEnvPrefix(env) + 'raw'
legacy = getEnvPrefix(env) + 'legacy'

# Set global variables
starttime = datetime.now() #start timestamp of the script
refined_perf_table = f"{refine}.WM_RACK_TYPE_LEVEL"
raw_perf_table = f"{raw}.WM_RACK_TYPE_LEVEL_PRE"
site_profile_table = f"{legacy}.SITE_PROFILE"


Prev_Run_Dt=genPrevRunDt(refined_perf_table.split(".")[1], refine,raw)
Del_Logic= ' -- ' # args.Del_Logic
# soft_delete_logic_WM_Rack_Type_Level= ' ' # args.soft_delete_logic_WM_Rack_Type_Level

# COMMAND ----------
# Processing node SQ_Shortcut_to_WM_RACK_TYPE_LEVEL, type SOURCE 
# COLUMN COUNT: 66

SQ_Shortcut_to_WM_RACK_TYPE_LEVEL = spark.sql(f"""SELECT
LOCATION_ID,
WM_RACK_LEVEL_ID,
WM_RACK_TYPE_ID,
LEVEL_PRIORITY,
LEVEL_NBR,
LEVEL_WT_LIMIT,
LEVEL_HT,
LEVEL_WIDTH,
LEVEL_DEPTH,
USE_LEV_MAP_STR_FLAG,
LEV_MAP_STR,
USE_POS_MAP_STR_FLAG,
POS_MAP_STR,
NBR_OF_SLOTS,
SLOT_WT_LIMIT,
MIN_SL_WIDTH,
MIN_ITEM_WIDTH,
MAX_OVERHANG_PCT,
SLOT_UNITS,
SHIP_UNITS,
COST_TO_PICK,
MAX_LANE_WT,
HT_CLEARANCE,
SIDE_CLEAR,
MAX_STACKING,
MAX_LANES,
GUIDE_WIDTH,
LANE_GUIDES,
SLOT_GUIDES,
MOVE_GUIDES,
USE_FULL_WID_FLAG,
SHELF_THICKNESS,
LABEL_POS,
MAX_PICK_HT,
MAX_SL_WID,
ONE_FACING_PER_DSW_FLAG,
USE_INCREMENT_FLAG,
WIDTH_INCREMENT,
USE_VERT_DIV_FLAG,
VERT_DIV_HT,
MIN_CHANNEL_WID,
MAX_CHANNEL_WID,
MAX_CHANNEL_WT,
MAX_ADJ_SLOTS,
MAX_EJECTOR_WT,
AFRAME_ROTATE,
AFRAME_MIN_HT,
AFRAME_MAX_HT,
AFRAME_MIN_LEN,
AFRAME_MAX_LEN,
AFRAME_MIN_WID,
AFRAME_MAX_WID,
AFRAME_MIN_WT,
AFRAME_MAX_WT,
REACH_DIST,
MOVE_GUIDES_RGT,
MOVE_GUIDES_LFT,
RESERVED_1,
RESERVED_2,
RESERVED_3,
RESERVED_4,
WM_MOD_USER,
WM_CREATE_TSTMP,
WM_MOD_TSTMP,
DELETE_FLAG,
LOAD_TSTMP
FROM {refined_perf_table}
WHERE {Del_Logic} 1=0 and 
DELETE_FLAG =0""").withColumn("sys_row_id", monotonically_increasing_id())

# COMMAND ----------
# Processing node SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE, type SOURCE 
# COLUMN COUNT: 64

SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE = spark.sql(f"""SELECT
DC_NBR,
RACK_LEVEL_ID,
RACK_TYPE,
LEVEL_PRIORITY,
LEVEL_NUMBER,
LEVEL_WT_LIMIT,
LEVEL_HT,
LEVEL_WIDTH,
LEVEL_DEPTH,
USE_LEV_MAP_STR,
LEV_MAP_STR,
USE_POS_MAP_STR,
POS_MAP_STR,
NBR_OF_SLOTS,
SLOT_WT_LIMIT,
MIN_SL_WIDTH,
MAX_OVERHANG_PCT,
SLOT_UNITS,
SHIP_UNITS,
COST_TO_PICK,
MAX_LANE_WT,
MIN_ITEM_WIDTH,
HT_CLEARANCE,
SIDE_CLEAR,
MAX_STACKING,
MAX_LANES,
GUIDE_WIDTH,
LANE_GUIDES,
SLOT_GUIDES,
MOVE_GUIDES,
USE_FULL_WID,
SHELF_THICKNESS,
LABEL_POS,
MAX_PICK_HT,
MAX_SL_WID,
ONE_FACING_PER_DSW,
USE_INCREMENT,
WIDTH_INCREMENT,
USE_VERT_DIV,
VERT_DIV_HT,
MIN_CHANNEL_WID,
MAX_CHANNEL_WID,
MAX_CHANNEL_WT,
MAX_ADJ_SLOTS,
MAX_EJECTOR_WT,
AFRAME_ROTATE,
AFRAME_MIN_HT,
AFRAME_MAX_HT,
AFRAME_MIN_LEN,
AFRAME_MAX_LEN,
AFRAME_MIN_WID,
AFRAME_MAX_WID,
AFRAME_MIN_WT,
AFRAME_MAX_WT,
REACH_DIST,
MOVE_GUIDES_RGT,
MOVE_GUIDES_LFT,
RESERVED_1,
RESERVED_2,
RESERVED_3,
RESERVED_4,
MOD_USER,
CREATE_DATE_TIME,
MOD_DATE_TIME
FROM {raw_perf_table}""").withColumn("sys_row_id", monotonically_increasing_id())

# COMMAND ----------
# Processing node EXP_INT_CONVERSION, type EXPRESSION 
# COLUMN COUNT: 64

# for each involved DataFrame, append the dataframe name to each column
SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE_temp = SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE.toDF(*["SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___" + col for col in SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE.columns])

EXP_INT_CONVERSION = SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE_temp.selectExpr( 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___sys_row_id as sys_row_id", 
	"cast(SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___DC_NBR as int) as o_DC_NBR", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___RACK_LEVEL_ID as RACK_LEVEL_ID", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___RACK_TYPE as RACK_TYPE", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___LEVEL_PRIORITY as LEVEL_PRIORITY", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___LEVEL_NUMBER as LEVEL_NUMBER", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___LEVEL_WT_LIMIT as LEVEL_WT_LIMIT", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___LEVEL_HT as LEVEL_HT", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___LEVEL_WIDTH as LEVEL_WIDTH", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___LEVEL_DEPTH as LEVEL_DEPTH", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___USE_LEV_MAP_STR as USE_LEV_MAP_STR", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___LEV_MAP_STR as LEV_MAP_STR", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___USE_POS_MAP_STR as USE_POS_MAP_STR", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___POS_MAP_STR as POS_MAP_STR", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___NBR_OF_SLOTS as NBR_OF_SLOTS", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___SLOT_WT_LIMIT as SLOT_WT_LIMIT", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___MIN_SL_WIDTH as MIN_SL_WIDTH", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___MAX_OVERHANG_PCT as MAX_OVERHANG_PCT", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___SLOT_UNITS as SLOT_UNITS", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___SHIP_UNITS as SHIP_UNITS", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___COST_TO_PICK as COST_TO_PICK", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___MAX_LANE_WT as MAX_LANE_WT", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___MIN_ITEM_WIDTH as MIN_ITEM_WIDTH", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___HT_CLEARANCE as HT_CLEARANCE", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___SIDE_CLEAR as SIDE_CLEAR", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___MAX_STACKING as MAX_STACKING", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___MAX_LANES as MAX_LANES", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___GUIDE_WIDTH as GUIDE_WIDTH", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___LANE_GUIDES as LANE_GUIDES", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___SLOT_GUIDES as SLOT_GUIDES", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___MOVE_GUIDES as MOVE_GUIDES", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___USE_FULL_WID as USE_FULL_WID", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___SHELF_THICKNESS as SHELF_THICKNESS", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___LABEL_POS as LABEL_POS", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___MAX_PICK_HT as MAX_PICK_HT", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___MAX_SL_WID as MAX_SL_WID", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___ONE_FACING_PER_DSW as ONE_FACING_PER_DSW", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___USE_INCREMENT as USE_INCREMENT", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___WIDTH_INCREMENT as WIDTH_INCREMENT", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___USE_VERT_DIV as USE_VERT_DIV", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___VERT_DIV_HT as VERT_DIV_HT", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___MIN_CHANNEL_WID as MIN_CHANNEL_WID", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___MAX_CHANNEL_WID as MAX_CHANNEL_WID", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___MAX_CHANNEL_WT as MAX_CHANNEL_WT", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___MAX_ADJ_SLOTS as MAX_ADJ_SLOTS", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___MAX_EJECTOR_WT as MAX_EJECTOR_WT", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___AFRAME_ROTATE as AFRAME_ROTATE", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___AFRAME_MIN_HT as AFRAME_MIN_HT", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___AFRAME_MAX_HT as AFRAME_MAX_HT", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___AFRAME_MIN_LEN as AFRAME_MIN_LEN", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___AFRAME_MAX_LEN as AFRAME_MAX_LEN", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___AFRAME_MIN_WID as AFRAME_MIN_WID", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___AFRAME_MAX_WID as AFRAME_MAX_WID", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___AFRAME_MIN_WT as AFRAME_MIN_WT", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___AFRAME_MAX_WT as AFRAME_MAX_WT", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___REACH_DIST as REACH_DIST", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___MOVE_GUIDES_RGT as MOVE_GUIDES_RGT", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___MOVE_GUIDES_LFT as MOVE_GUIDES_LFT", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___RESERVED_1 as RESERVED_1", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___RESERVED_2 as RESERVED_2", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___RESERVED_3 as RESERVED_3", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___RESERVED_4 as RESERVED_4", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___MOD_USER as MOD_USER", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___CREATE_DATE_TIME as CREATE_DATE_TIME", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_PRE___MOD_DATE_TIME as MOD_DATE_TIME" 
)

# COMMAND ----------
# Processing node SQ_Shortcut_to_SITE_PROFILE, type SOURCE 
# COLUMN COUNT: 2

SQ_Shortcut_to_SITE_PROFILE = spark.sql(f"""SELECT LOCATION_ID, STORE_NBR FROM {site_profile_table}""").withColumn("sys_row_id", monotonically_increasing_id())

# COMMAND ----------
# Processing node JNR_SITE_PROFILE, type JOINER 
# COLUMN COUNT: 66

JNR_SITE_PROFILE = SQ_Shortcut_to_SITE_PROFILE.join(EXP_INT_CONVERSION,[SQ_Shortcut_to_SITE_PROFILE.STORE_NBR == EXP_INT_CONVERSION.o_DC_NBR],'inner')

# COMMAND ----------
# Processing node JNR_WM_RACK_TYPE_LEVEL, type JOINER . Note: using additional SELECT to rename incoming columns
# COLUMN COUNT: 130

# for each involved DataFrame, append the dataframe name to each column
JNR_SITE_PROFILE_temp = JNR_SITE_PROFILE.toDF(*["JNR_SITE_PROFILE___" + col for col in JNR_SITE_PROFILE.columns])
SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_temp = SQ_Shortcut_to_WM_RACK_TYPE_LEVEL.toDF(*["SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___" + col for col in SQ_Shortcut_to_WM_RACK_TYPE_LEVEL.columns])

JNR_WM_RACK_TYPE_LEVEL = SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_temp.join(JNR_SITE_PROFILE_temp,[SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_temp.SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___LOCATION_ID == JNR_SITE_PROFILE_temp.JNR_SITE_PROFILE___LOCATION_ID, SQ_Shortcut_to_WM_RACK_TYPE_LEVEL_temp.SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___WM_RACK_LEVEL_ID == JNR_SITE_PROFILE_temp.JNR_SITE_PROFILE___RACK_LEVEL_ID],'right_outer').selectExpr( 
	"JNR_SITE_PROFILE___LOCATION_ID as LOCATION_ID", 
	"JNR_SITE_PROFILE___RACK_LEVEL_ID as RACK_LEVEL_ID", 
	"JNR_SITE_PROFILE___RACK_TYPE as RACK_TYPE", 
	"JNR_SITE_PROFILE___LEVEL_PRIORITY as LEVEL_PRIORITY", 
	"JNR_SITE_PROFILE___LEVEL_NUMBER as LEVEL_NUMBER", 
	"JNR_SITE_PROFILE___LEVEL_WT_LIMIT as LEVEL_WT_LIMIT", 
	"JNR_SITE_PROFILE___LEVEL_HT as LEVEL_HT", 
	"JNR_SITE_PROFILE___LEVEL_WIDTH as LEVEL_WIDTH", 
	"JNR_SITE_PROFILE___LEVEL_DEPTH as LEVEL_DEPTH", 
	"JNR_SITE_PROFILE___USE_LEV_MAP_STR as USE_LEV_MAP_STR", 
	"JNR_SITE_PROFILE___LEV_MAP_STR as LEV_MAP_STR", 
	"JNR_SITE_PROFILE___USE_POS_MAP_STR as USE_POS_MAP_STR", 
	"JNR_SITE_PROFILE___POS_MAP_STR as POS_MAP_STR", 
	"JNR_SITE_PROFILE___NBR_OF_SLOTS as NBR_OF_SLOTS", 
	"JNR_SITE_PROFILE___SLOT_WT_LIMIT as SLOT_WT_LIMIT", 
	"JNR_SITE_PROFILE___MIN_SL_WIDTH as MIN_SL_WIDTH", 
	"JNR_SITE_PROFILE___MAX_OVERHANG_PCT as MAX_OVERHANG_PCT", 
	"JNR_SITE_PROFILE___SLOT_UNITS as SLOT_UNITS", 
	"JNR_SITE_PROFILE___SHIP_UNITS as SHIP_UNITS", 
	"JNR_SITE_PROFILE___COST_TO_PICK as COST_TO_PICK", 
	"JNR_SITE_PROFILE___MAX_LANE_WT as MAX_LANE_WT", 
	"JNR_SITE_PROFILE___MIN_ITEM_WIDTH as MIN_ITEM_WIDTH", 
	"JNR_SITE_PROFILE___HT_CLEARANCE as HT_CLEARANCE", 
	"JNR_SITE_PROFILE___SIDE_CLEAR as SIDE_CLEAR", 
	"JNR_SITE_PROFILE___MAX_STACKING as MAX_STACKING", 
	"JNR_SITE_PROFILE___MAX_LANES as MAX_LANES", 
	"JNR_SITE_PROFILE___GUIDE_WIDTH as GUIDE_WIDTH", 
	"JNR_SITE_PROFILE___LANE_GUIDES as LANE_GUIDES", 
	"JNR_SITE_PROFILE___SLOT_GUIDES as SLOT_GUIDES", 
	"JNR_SITE_PROFILE___MOVE_GUIDES as MOVE_GUIDES", 
	"JNR_SITE_PROFILE___USE_FULL_WID as USE_FULL_WID", 
	"JNR_SITE_PROFILE___SHELF_THICKNESS as SHELF_THICKNESS", 
	"JNR_SITE_PROFILE___LABEL_POS as LABEL_POS", 
	"JNR_SITE_PROFILE___MAX_PICK_HT as MAX_PICK_HT", 
	"JNR_SITE_PROFILE___MAX_SL_WID as MAX_SL_WID", 
	"JNR_SITE_PROFILE___ONE_FACING_PER_DSW as ONE_FACING_PER_DSW", 
	"JNR_SITE_PROFILE___USE_INCREMENT as USE_INCREMENT", 
	"JNR_SITE_PROFILE___WIDTH_INCREMENT as WIDTH_INCREMENT", 
	"JNR_SITE_PROFILE___USE_VERT_DIV as USE_VERT_DIV", 
	"JNR_SITE_PROFILE___VERT_DIV_HT as VERT_DIV_HT", 
	"JNR_SITE_PROFILE___MIN_CHANNEL_WID as MIN_CHANNEL_WID", 
	"JNR_SITE_PROFILE___MAX_CHANNEL_WID as MAX_CHANNEL_WID", 
	"JNR_SITE_PROFILE___MAX_CHANNEL_WT as MAX_CHANNEL_WT", 
	"JNR_SITE_PROFILE___MAX_ADJ_SLOTS as MAX_ADJ_SLOTS", 
	"JNR_SITE_PROFILE___MAX_EJECTOR_WT as MAX_EJECTOR_WT", 
	"JNR_SITE_PROFILE___AFRAME_ROTATE as AFRAME_ROTATE", 
	"JNR_SITE_PROFILE___AFRAME_MIN_HT as AFRAME_MIN_HT", 
	"JNR_SITE_PROFILE___AFRAME_MAX_HT as AFRAME_MAX_HT", 
	"JNR_SITE_PROFILE___AFRAME_MIN_LEN as AFRAME_MIN_LEN", 
	"JNR_SITE_PROFILE___AFRAME_MAX_LEN as AFRAME_MAX_LEN", 
	"JNR_SITE_PROFILE___AFRAME_MIN_WID as AFRAME_MIN_WID", 
	"JNR_SITE_PROFILE___AFRAME_MAX_WID as AFRAME_MAX_WID", 
	"JNR_SITE_PROFILE___AFRAME_MIN_WT as AFRAME_MIN_WT", 
	"JNR_SITE_PROFILE___AFRAME_MAX_WT as AFRAME_MAX_WT", 
	"JNR_SITE_PROFILE___REACH_DIST as REACH_DIST", 
	"JNR_SITE_PROFILE___MOVE_GUIDES_RGT as MOVE_GUIDES_RGT", 
	"JNR_SITE_PROFILE___MOVE_GUIDES_LFT as MOVE_GUIDES_LFT", 
	"JNR_SITE_PROFILE___RESERVED_1 as RESERVED_1", 
	"JNR_SITE_PROFILE___RESERVED_2 as RESERVED_2", 
	"JNR_SITE_PROFILE___RESERVED_3 as RESERVED_3", 
	"JNR_SITE_PROFILE___RESERVED_4 as RESERVED_4", 
	"JNR_SITE_PROFILE___MOD_USER as MOD_USER", 
	"JNR_SITE_PROFILE___CREATE_DATE_TIME as CREATE_DATE_TIME", 
	"JNR_SITE_PROFILE___MOD_DATE_TIME as MOD_DATE_TIME", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___LOCATION_ID as in_LOCATION_ID", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___WM_RACK_LEVEL_ID as WM_RACK_LEVEL_ID", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___WM_RACK_TYPE_ID as WM_RACK_TYPE_ID", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___LEVEL_PRIORITY as LEVEL_PRIORITY1", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___LEVEL_NBR as LEVEL_NBR", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___LEVEL_WT_LIMIT as LEVEL_WT_LIMIT1", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___LEVEL_HT as LEVEL_HT1", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___LEVEL_WIDTH as LEVEL_WIDTH1", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___LEVEL_DEPTH as LEVEL_DEPTH1", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___USE_LEV_MAP_STR_FLAG as USE_LEV_MAP_STR_FLAG", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___LEV_MAP_STR as LEV_MAP_STR1", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___USE_POS_MAP_STR_FLAG as USE_POS_MAP_STR_FLAG", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___POS_MAP_STR as POS_MAP_STR1", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___NBR_OF_SLOTS as NBR_OF_SLOTS1", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___SLOT_WT_LIMIT as SLOT_WT_LIMIT1", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___MIN_SL_WIDTH as MIN_SL_WIDTH1", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___MIN_ITEM_WIDTH as MIN_ITEM_WIDTH1", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___MAX_OVERHANG_PCT as MAX_OVERHANG_PCT1", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___SLOT_UNITS as SLOT_UNITS1", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___SHIP_UNITS as SHIP_UNITS1", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___COST_TO_PICK as COST_TO_PICK1", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___MAX_LANE_WT as MAX_LANE_WT1", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___HT_CLEARANCE as HT_CLEARANCE1", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___SIDE_CLEAR as SIDE_CLEAR1", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___MAX_STACKING as MAX_STACKING1", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___MAX_LANES as MAX_LANES1", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___GUIDE_WIDTH as GUIDE_WIDTH1", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___LANE_GUIDES as LANE_GUIDES1", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___SLOT_GUIDES as SLOT_GUIDES1", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___MOVE_GUIDES as MOVE_GUIDES1", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___USE_FULL_WID_FLAG as USE_FULL_WID_FLAG", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___SHELF_THICKNESS as SHELF_THICKNESS1", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___LABEL_POS as LABEL_POS1", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___MAX_PICK_HT as MAX_PICK_HT1", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___MAX_SL_WID as MAX_SL_WID1", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___ONE_FACING_PER_DSW_FLAG as ONE_FACING_PER_DSW_FLAG", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___USE_INCREMENT_FLAG as USE_INCREMENT_FLAG", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___WIDTH_INCREMENT as WIDTH_INCREMENT1", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___USE_VERT_DIV_FLAG as USE_VERT_DIV_FLAG", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___VERT_DIV_HT as VERT_DIV_HT1", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___MIN_CHANNEL_WID as MIN_CHANNEL_WID1", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___MAX_CHANNEL_WID as MAX_CHANNEL_WID1", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___MAX_CHANNEL_WT as MAX_CHANNEL_WT1", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___MAX_ADJ_SLOTS as MAX_ADJ_SLOTS1", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___MAX_EJECTOR_WT as MAX_EJECTOR_WT1", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___AFRAME_ROTATE as AFRAME_ROTATE1", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___AFRAME_MIN_HT as AFRAME_MIN_HT1", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___AFRAME_MAX_HT as AFRAME_MAX_HT1", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___AFRAME_MIN_LEN as AFRAME_MIN_LEN1", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___AFRAME_MAX_LEN as AFRAME_MAX_LEN1", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___AFRAME_MIN_WID as AFRAME_MIN_WID1", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___AFRAME_MAX_WID as AFRAME_MAX_WID1", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___AFRAME_MIN_WT as AFRAME_MIN_WT1", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___AFRAME_MAX_WT as AFRAME_MAX_WT1", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___REACH_DIST as REACH_DIST1", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___MOVE_GUIDES_RGT as MOVE_GUIDES_RGT1", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___MOVE_GUIDES_LFT as MOVE_GUIDES_LFT1", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___RESERVED_1 as RESERVED_11", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___RESERVED_2 as RESERVED_21", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___RESERVED_3 as RESERVED_31", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___RESERVED_4 as RESERVED_41", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___WM_MOD_USER as WM_MOD_USER", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___WM_CREATE_TSTMP as WM_CREATE_TSTMP", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___WM_MOD_TSTMP as WM_MOD_TSTMP", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___DELETE_FLAG as DELETE_FLAG", 
	"SQ_Shortcut_to_WM_RACK_TYPE_LEVEL___LOAD_TSTMP as in_LOAD_TSTMP")

# COMMAND ----------
# Processing node FIL_UNCHANGED_REC, type FILTER 
# COLUMN COUNT: 130

# for each involved DataFrame, append the dataframe name to each column
JNR_WM_RACK_TYPE_LEVEL_temp = JNR_WM_RACK_TYPE_LEVEL.toDF(*["JNR_WM_RACK_TYPE_LEVEL___" + col for col in JNR_WM_RACK_TYPE_LEVEL.columns])

FIL_UNCHANGED_REC = JNR_WM_RACK_TYPE_LEVEL_temp.selectExpr( 
	"JNR_WM_RACK_TYPE_LEVEL___LOCATION_ID as LOCATION_ID", 
	"JNR_WM_RACK_TYPE_LEVEL___RACK_LEVEL_ID as RACK_LEVEL_ID", 
	"JNR_WM_RACK_TYPE_LEVEL___RACK_TYPE as RACK_TYPE", 
	"JNR_WM_RACK_TYPE_LEVEL___LEVEL_PRIORITY as LEVEL_PRIORITY", 
	"JNR_WM_RACK_TYPE_LEVEL___LEVEL_NUMBER as LEVEL_NUMBER", 
	"JNR_WM_RACK_TYPE_LEVEL___LEVEL_WT_LIMIT as LEVEL_WT_LIMIT", 
	"JNR_WM_RACK_TYPE_LEVEL___LEVEL_HT as LEVEL_HT", 
	"JNR_WM_RACK_TYPE_LEVEL___LEVEL_WIDTH as LEVEL_WIDTH", 
	"JNR_WM_RACK_TYPE_LEVEL___LEVEL_DEPTH as LEVEL_DEPTH", 
	"JNR_WM_RACK_TYPE_LEVEL___USE_LEV_MAP_STR as USE_LEV_MAP_STR", 
	"JNR_WM_RACK_TYPE_LEVEL___LEV_MAP_STR as LEV_MAP_STR", 
	"JNR_WM_RACK_TYPE_LEVEL___USE_POS_MAP_STR as USE_POS_MAP_STR", 
	"JNR_WM_RACK_TYPE_LEVEL___POS_MAP_STR as POS_MAP_STR", 
	"JNR_WM_RACK_TYPE_LEVEL___NBR_OF_SLOTS as NBR_OF_SLOTS", 
	"JNR_WM_RACK_TYPE_LEVEL___SLOT_WT_LIMIT as SLOT_WT_LIMIT", 
	"JNR_WM_RACK_TYPE_LEVEL___MIN_SL_WIDTH as MIN_SL_WIDTH", 
	"JNR_WM_RACK_TYPE_LEVEL___MAX_OVERHANG_PCT as MAX_OVERHANG_PCT", 
	"JNR_WM_RACK_TYPE_LEVEL___SLOT_UNITS as SLOT_UNITS", 
	"JNR_WM_RACK_TYPE_LEVEL___SHIP_UNITS as SHIP_UNITS", 
	"JNR_WM_RACK_TYPE_LEVEL___COST_TO_PICK as COST_TO_PICK", 
	"JNR_WM_RACK_TYPE_LEVEL___MAX_LANE_WT as MAX_LANE_WT", 
	"JNR_WM_RACK_TYPE_LEVEL___MIN_ITEM_WIDTH as MIN_ITEM_WIDTH", 
	"JNR_WM_RACK_TYPE_LEVEL___HT_CLEARANCE as HT_CLEARANCE", 
	"JNR_WM_RACK_TYPE_LEVEL___SIDE_CLEAR as SIDE_CLEAR", 
	"JNR_WM_RACK_TYPE_LEVEL___MAX_STACKING as MAX_STACKING", 
	"JNR_WM_RACK_TYPE_LEVEL___MAX_LANES as MAX_LANES", 
	"JNR_WM_RACK_TYPE_LEVEL___GUIDE_WIDTH as GUIDE_WIDTH", 
	"JNR_WM_RACK_TYPE_LEVEL___LANE_GUIDES as LANE_GUIDES", 
	"JNR_WM_RACK_TYPE_LEVEL___SLOT_GUIDES as SLOT_GUIDES", 
	"JNR_WM_RACK_TYPE_LEVEL___MOVE_GUIDES as MOVE_GUIDES", 
	"JNR_WM_RACK_TYPE_LEVEL___USE_FULL_WID as USE_FULL_WID", 
	"JNR_WM_RACK_TYPE_LEVEL___SHELF_THICKNESS as SHELF_THICKNESS", 
	"JNR_WM_RACK_TYPE_LEVEL___LABEL_POS as LABEL_POS", 
	"JNR_WM_RACK_TYPE_LEVEL___MAX_PICK_HT as MAX_PICK_HT", 
	"JNR_WM_RACK_TYPE_LEVEL___MAX_SL_WID as MAX_SL_WID", 
	"JNR_WM_RACK_TYPE_LEVEL___ONE_FACING_PER_DSW as ONE_FACING_PER_DSW", 
	"JNR_WM_RACK_TYPE_LEVEL___USE_INCREMENT as USE_INCREMENT", 
	"JNR_WM_RACK_TYPE_LEVEL___WIDTH_INCREMENT as WIDTH_INCREMENT", 
	"JNR_WM_RACK_TYPE_LEVEL___USE_VERT_DIV as USE_VERT_DIV", 
	"JNR_WM_RACK_TYPE_LEVEL___VERT_DIV_HT as VERT_DIV_HT", 
	"JNR_WM_RACK_TYPE_LEVEL___MIN_CHANNEL_WID as MIN_CHANNEL_WID", 
	"JNR_WM_RACK_TYPE_LEVEL___MAX_CHANNEL_WID as MAX_CHANNEL_WID", 
	"JNR_WM_RACK_TYPE_LEVEL___MAX_CHANNEL_WT as MAX_CHANNEL_WT", 
	"JNR_WM_RACK_TYPE_LEVEL___MAX_ADJ_SLOTS as MAX_ADJ_SLOTS", 
	"JNR_WM_RACK_TYPE_LEVEL___MAX_EJECTOR_WT as MAX_EJECTOR_WT", 
	"JNR_WM_RACK_TYPE_LEVEL___AFRAME_ROTATE as AFRAME_ROTATE", 
	"JNR_WM_RACK_TYPE_LEVEL___AFRAME_MIN_HT as AFRAME_MIN_HT", 
	"JNR_WM_RACK_TYPE_LEVEL___AFRAME_MAX_HT as AFRAME_MAX_HT", 
	"JNR_WM_RACK_TYPE_LEVEL___AFRAME_MIN_LEN as AFRAME_MIN_LEN", 
	"JNR_WM_RACK_TYPE_LEVEL___AFRAME_MAX_LEN as AFRAME_MAX_LEN", 
	"JNR_WM_RACK_TYPE_LEVEL___AFRAME_MIN_WID as AFRAME_MIN_WID", 
	"JNR_WM_RACK_TYPE_LEVEL___AFRAME_MAX_WID as AFRAME_MAX_WID", 
	"JNR_WM_RACK_TYPE_LEVEL___AFRAME_MIN_WT as AFRAME_MIN_WT", 
	"JNR_WM_RACK_TYPE_LEVEL___AFRAME_MAX_WT as AFRAME_MAX_WT", 
	"JNR_WM_RACK_TYPE_LEVEL___REACH_DIST as REACH_DIST", 
	"JNR_WM_RACK_TYPE_LEVEL___MOVE_GUIDES_RGT as MOVE_GUIDES_RGT", 
	"JNR_WM_RACK_TYPE_LEVEL___MOVE_GUIDES_LFT as MOVE_GUIDES_LFT", 
	"JNR_WM_RACK_TYPE_LEVEL___RESERVED_1 as RESERVED_1", 
	"JNR_WM_RACK_TYPE_LEVEL___RESERVED_2 as RESERVED_2", 
	"JNR_WM_RACK_TYPE_LEVEL___RESERVED_3 as RESERVED_3", 
	"JNR_WM_RACK_TYPE_LEVEL___RESERVED_4 as RESERVED_4", 
	"JNR_WM_RACK_TYPE_LEVEL___MOD_USER as MOD_USER", 
	"JNR_WM_RACK_TYPE_LEVEL___CREATE_DATE_TIME as CREATE_DATE_TIME", 
	"JNR_WM_RACK_TYPE_LEVEL___MOD_DATE_TIME as MOD_DATE_TIME", 
	"JNR_WM_RACK_TYPE_LEVEL___in_LOCATION_ID as in_LOCATION_ID", 
	"JNR_WM_RACK_TYPE_LEVEL___WM_RACK_LEVEL_ID as WM_RACK_LEVEL_ID", 
	"JNR_WM_RACK_TYPE_LEVEL___WM_RACK_TYPE_ID as WM_RACK_TYPE_ID", 
	"JNR_WM_RACK_TYPE_LEVEL___LEVEL_PRIORITY1 as LEVEL_PRIORITY1", 
	"JNR_WM_RACK_TYPE_LEVEL___LEVEL_NBR as LEVEL_NBR", 
	"JNR_WM_RACK_TYPE_LEVEL___LEVEL_WT_LIMIT1 as LEVEL_WT_LIMIT1", 
	"JNR_WM_RACK_TYPE_LEVEL___LEVEL_HT1 as LEVEL_HT1", 
	"JNR_WM_RACK_TYPE_LEVEL___LEVEL_WIDTH1 as LEVEL_WIDTH1", 
	"JNR_WM_RACK_TYPE_LEVEL___LEVEL_DEPTH1 as LEVEL_DEPTH1", 
	"JNR_WM_RACK_TYPE_LEVEL___USE_LEV_MAP_STR_FLAG as USE_LEV_MAP_STR_FLAG", 
	"JNR_WM_RACK_TYPE_LEVEL___LEV_MAP_STR1 as LEV_MAP_STR1", 
	"JNR_WM_RACK_TYPE_LEVEL___USE_POS_MAP_STR_FLAG as USE_POS_MAP_STR_FLAG", 
	"JNR_WM_RACK_TYPE_LEVEL___POS_MAP_STR1 as POS_MAP_STR1", 
	"JNR_WM_RACK_TYPE_LEVEL___NBR_OF_SLOTS1 as NBR_OF_SLOTS1", 
	"JNR_WM_RACK_TYPE_LEVEL___SLOT_WT_LIMIT1 as SLOT_WT_LIMIT1", 
	"JNR_WM_RACK_TYPE_LEVEL___MIN_SL_WIDTH1 as MIN_SL_WIDTH1", 
	"JNR_WM_RACK_TYPE_LEVEL___MIN_ITEM_WIDTH1 as MIN_ITEM_WIDTH1", 
	"JNR_WM_RACK_TYPE_LEVEL___MAX_OVERHANG_PCT1 as MAX_OVERHANG_PCT1", 
	"JNR_WM_RACK_TYPE_LEVEL___SLOT_UNITS1 as SLOT_UNITS1", 
	"JNR_WM_RACK_TYPE_LEVEL___SHIP_UNITS1 as SHIP_UNITS1", 
	"JNR_WM_RACK_TYPE_LEVEL___COST_TO_PICK1 as COST_TO_PICK1", 
	"JNR_WM_RACK_TYPE_LEVEL___MAX_LANE_WT1 as MAX_LANE_WT1", 
	"JNR_WM_RACK_TYPE_LEVEL___HT_CLEARANCE1 as HT_CLEARANCE1", 
	"JNR_WM_RACK_TYPE_LEVEL___SIDE_CLEAR1 as SIDE_CLEAR1", 
	"JNR_WM_RACK_TYPE_LEVEL___MAX_STACKING1 as MAX_STACKING1", 
	"JNR_WM_RACK_TYPE_LEVEL___MAX_LANES1 as MAX_LANES1", 
	"JNR_WM_RACK_TYPE_LEVEL___GUIDE_WIDTH1 as GUIDE_WIDTH1", 
	"JNR_WM_RACK_TYPE_LEVEL___LANE_GUIDES1 as LANE_GUIDES1", 
	"JNR_WM_RACK_TYPE_LEVEL___SLOT_GUIDES1 as SLOT_GUIDES1", 
	"JNR_WM_RACK_TYPE_LEVEL___MOVE_GUIDES1 as MOVE_GUIDES1", 
	"JNR_WM_RACK_TYPE_LEVEL___USE_FULL_WID_FLAG as USE_FULL_WID_FLAG", 
	"JNR_WM_RACK_TYPE_LEVEL___SHELF_THICKNESS1 as SHELF_THICKNESS1", 
	"JNR_WM_RACK_TYPE_LEVEL___LABEL_POS1 as LABEL_POS1", 
	"JNR_WM_RACK_TYPE_LEVEL___MAX_PICK_HT1 as MAX_PICK_HT1", 
	"JNR_WM_RACK_TYPE_LEVEL___MAX_SL_WID1 as MAX_SL_WID1", 
	"JNR_WM_RACK_TYPE_LEVEL___ONE_FACING_PER_DSW_FLAG as ONE_FACING_PER_DSW_FLAG", 
	"JNR_WM_RACK_TYPE_LEVEL___USE_INCREMENT_FLAG as USE_INCREMENT_FLAG", 
	"JNR_WM_RACK_TYPE_LEVEL___WIDTH_INCREMENT1 as WIDTH_INCREMENT1", 
	"JNR_WM_RACK_TYPE_LEVEL___USE_VERT_DIV_FLAG as USE_VERT_DIV_FLAG", 
	"JNR_WM_RACK_TYPE_LEVEL___VERT_DIV_HT1 as VERT_DIV_HT1", 
	"JNR_WM_RACK_TYPE_LEVEL___MIN_CHANNEL_WID1 as MIN_CHANNEL_WID1", 
	"JNR_WM_RACK_TYPE_LEVEL___MAX_CHANNEL_WID1 as MAX_CHANNEL_WID1", 
	"JNR_WM_RACK_TYPE_LEVEL___MAX_CHANNEL_WT1 as MAX_CHANNEL_WT1", 
	"JNR_WM_RACK_TYPE_LEVEL___MAX_ADJ_SLOTS1 as MAX_ADJ_SLOTS1", 
	"JNR_WM_RACK_TYPE_LEVEL___MAX_EJECTOR_WT1 as MAX_EJECTOR_WT1", 
	"JNR_WM_RACK_TYPE_LEVEL___AFRAME_ROTATE1 as AFRAME_ROTATE1", 
	"JNR_WM_RACK_TYPE_LEVEL___AFRAME_MIN_HT1 as AFRAME_MIN_HT1", 
	"JNR_WM_RACK_TYPE_LEVEL___AFRAME_MAX_HT1 as AFRAME_MAX_HT1", 
	"JNR_WM_RACK_TYPE_LEVEL___AFRAME_MIN_LEN1 as AFRAME_MIN_LEN1", 
	"JNR_WM_RACK_TYPE_LEVEL___AFRAME_MAX_LEN1 as AFRAME_MAX_LEN1", 
	"JNR_WM_RACK_TYPE_LEVEL___AFRAME_MIN_WID1 as AFRAME_MIN_WID1", 
	"JNR_WM_RACK_TYPE_LEVEL___AFRAME_MAX_WID1 as AFRAME_MAX_WID1", 
	"JNR_WM_RACK_TYPE_LEVEL___AFRAME_MIN_WT1 as AFRAME_MIN_WT1", 
	"JNR_WM_RACK_TYPE_LEVEL___AFRAME_MAX_WT1 as AFRAME_MAX_WT1", 
	"JNR_WM_RACK_TYPE_LEVEL___REACH_DIST1 as REACH_DIST1", 
	"JNR_WM_RACK_TYPE_LEVEL___MOVE_GUIDES_RGT1 as MOVE_GUIDES_RGT1", 
	"JNR_WM_RACK_TYPE_LEVEL___MOVE_GUIDES_LFT1 as MOVE_GUIDES_LFT1", 
	"JNR_WM_RACK_TYPE_LEVEL___RESERVED_11 as RESERVED_11", 
	"JNR_WM_RACK_TYPE_LEVEL___RESERVED_21 as RESERVED_21", 
	"JNR_WM_RACK_TYPE_LEVEL___RESERVED_31 as RESERVED_31", 
	"JNR_WM_RACK_TYPE_LEVEL___RESERVED_41 as RESERVED_41", 
	"JNR_WM_RACK_TYPE_LEVEL___WM_MOD_USER as WM_MOD_USER", 
	"JNR_WM_RACK_TYPE_LEVEL___WM_CREATE_TSTMP as WM_CREATE_TSTMP", 
	"JNR_WM_RACK_TYPE_LEVEL___WM_MOD_TSTMP as WM_MOD_TSTMP", 
	"JNR_WM_RACK_TYPE_LEVEL___DELETE_FLAG as DELETE_FLAG", 
	"JNR_WM_RACK_TYPE_LEVEL___in_LOAD_TSTMP as in_LOAD_TSTMP").filter(expr("WM_RACK_LEVEL_ID IS NULL OR RACK_LEVEL_ID IS NULL OR (NOT WM_RACK_LEVEL_ID IS NULL AND (COALESCE(CREATE_DATE_TIME, date'1900-01-01') != COALESCE(WM_CREATE_TSTMP, date'1900-01-01')) OR (COALESCE(MOD_DATE_TIME, date'1900-01-01') != COALESCE(WM_MOD_TSTMP, date'1900-01-01')))")).withColumn("sys_row_id", monotonically_increasing_id())

# COMMAND ----------
# Processing node EXP_UPD_VALIDATOR, type EXPRESSION 
# COLUMN COUNT: 134

# for each involved DataFrame, append the dataframe name to each column
FIL_UNCHANGED_REC_temp = FIL_UNCHANGED_REC.toDF(*["FIL_UNCHANGED_REC___" + col for col in FIL_UNCHANGED_REC.columns]) \
    .withColumn("FIL_UNCHANGED_REC___v_CREATE_DATE_TIME", expr("""IF(FIL_UNCHANGED_REC___CREATE_DATE_TIME IS NULL, date'1900-01-01', FIL_UNCHANGED_REC___CREATE_DATE_TIME)""")) \
	.withColumn("FIL_UNCHANGED_REC___v_MOD_DATE_TIME", expr("""IF(FIL_UNCHANGED_REC___MOD_DATE_TIME IS NULL, date'1900-01-01', FIL_UNCHANGED_REC___MOD_DATE_TIME)""")) \
	.withColumn("FIL_UNCHANGED_REC___v_WM_CREATE_TSTMP", expr("""IF(FIL_UNCHANGED_REC___WM_CREATE_TSTMP IS NULL, date'1900-01-01', FIL_UNCHANGED_REC___WM_CREATE_TSTMP)""")) \
	.withColumn("FIL_UNCHANGED_REC___v_WM_MOD_TSTMP", expr("""IF(FIL_UNCHANGED_REC___WM_MOD_TSTMP IS NULL, date'1900-01-01', FIL_UNCHANGED_REC___WM_MOD_TSTMP)"""))
    
EXP_UPD_VALIDATOR = FIL_UNCHANGED_REC_temp.selectExpr( 
	"FIL_UNCHANGED_REC___sys_row_id as sys_row_id", 
	"FIL_UNCHANGED_REC___LOCATION_ID as LOCATION_ID", 
	"FIL_UNCHANGED_REC___RACK_LEVEL_ID as RACK_LEVEL_ID", 
	"FIL_UNCHANGED_REC___RACK_TYPE as RACK_TYPE", 
	"FIL_UNCHANGED_REC___LEVEL_PRIORITY as LEVEL_PRIORITY", 
	"FIL_UNCHANGED_REC___LEVEL_NUMBER as LEVEL_NUMBER", 
	"FIL_UNCHANGED_REC___LEVEL_WT_LIMIT as LEVEL_WT_LIMIT", 
	"FIL_UNCHANGED_REC___LEVEL_HT as LEVEL_HT", 
	"FIL_UNCHANGED_REC___LEVEL_WIDTH as LEVEL_WIDTH", 
	"FIL_UNCHANGED_REC___LEVEL_DEPTH as LEVEL_DEPTH", 
	"FIL_UNCHANGED_REC___USE_LEV_MAP_STR as USE_LEV_MAP_STR", 
	"FIL_UNCHANGED_REC___LEV_MAP_STR as LEV_MAP_STR", 
	"FIL_UNCHANGED_REC___USE_POS_MAP_STR as USE_POS_MAP_STR", 
	"FIL_UNCHANGED_REC___POS_MAP_STR as POS_MAP_STR", 
	"FIL_UNCHANGED_REC___NBR_OF_SLOTS as NBR_OF_SLOTS", 
	"FIL_UNCHANGED_REC___SLOT_WT_LIMIT as SLOT_WT_LIMIT", 
	"FIL_UNCHANGED_REC___MIN_SL_WIDTH as MIN_SL_WIDTH", 
	"FIL_UNCHANGED_REC___MAX_OVERHANG_PCT as MAX_OVERHANG_PCT", 
	"FIL_UNCHANGED_REC___SLOT_UNITS as SLOT_UNITS", 
	"FIL_UNCHANGED_REC___SHIP_UNITS as SHIP_UNITS", 
	"FIL_UNCHANGED_REC___COST_TO_PICK as COST_TO_PICK", 
	"FIL_UNCHANGED_REC___MAX_LANE_WT as MAX_LANE_WT", 
	"FIL_UNCHANGED_REC___MIN_ITEM_WIDTH as MIN_ITEM_WIDTH", 
	"FIL_UNCHANGED_REC___HT_CLEARANCE as HT_CLEARANCE", 
	"FIL_UNCHANGED_REC___SIDE_CLEAR as SIDE_CLEAR", 
	"FIL_UNCHANGED_REC___MAX_STACKING as MAX_STACKING", 
	"FIL_UNCHANGED_REC___MAX_LANES as MAX_LANES", 
	"FIL_UNCHANGED_REC___GUIDE_WIDTH as GUIDE_WIDTH", 
	"FIL_UNCHANGED_REC___LANE_GUIDES as LANE_GUIDES", 
	"FIL_UNCHANGED_REC___SLOT_GUIDES as SLOT_GUIDES", 
	"FIL_UNCHANGED_REC___MOVE_GUIDES as MOVE_GUIDES", 
	"FIL_UNCHANGED_REC___USE_FULL_WID as USE_FULL_WID", 
	"FIL_UNCHANGED_REC___SHELF_THICKNESS as SHELF_THICKNESS", 
	"FIL_UNCHANGED_REC___LABEL_POS as LABEL_POS", 
	"FIL_UNCHANGED_REC___MAX_PICK_HT as MAX_PICK_HT", 
	"FIL_UNCHANGED_REC___MAX_SL_WID as MAX_SL_WID", 
	"FIL_UNCHANGED_REC___ONE_FACING_PER_DSW as ONE_FACING_PER_DSW", 
	"FIL_UNCHANGED_REC___USE_INCREMENT as USE_INCREMENT", 
	"FIL_UNCHANGED_REC___WIDTH_INCREMENT as WIDTH_INCREMENT", 
	"FIL_UNCHANGED_REC___USE_VERT_DIV as USE_VERT_DIV", 
	"FIL_UNCHANGED_REC___VERT_DIV_HT as VERT_DIV_HT", 
	"FIL_UNCHANGED_REC___MIN_CHANNEL_WID as MIN_CHANNEL_WID", 
	"FIL_UNCHANGED_REC___MAX_CHANNEL_WID as MAX_CHANNEL_WID", 
	"FIL_UNCHANGED_REC___MAX_CHANNEL_WT as MAX_CHANNEL_WT", 
	"FIL_UNCHANGED_REC___MAX_ADJ_SLOTS as MAX_ADJ_SLOTS", 
	"FIL_UNCHANGED_REC___MAX_EJECTOR_WT as MAX_EJECTOR_WT", 
	"FIL_UNCHANGED_REC___AFRAME_ROTATE as AFRAME_ROTATE", 
	"FIL_UNCHANGED_REC___AFRAME_MIN_HT as AFRAME_MIN_HT", 
	"FIL_UNCHANGED_REC___AFRAME_MAX_HT as AFRAME_MAX_HT", 
	"FIL_UNCHANGED_REC___AFRAME_MIN_LEN as AFRAME_MIN_LEN", 
	"FIL_UNCHANGED_REC___AFRAME_MAX_LEN as AFRAME_MAX_LEN", 
	"FIL_UNCHANGED_REC___AFRAME_MIN_WID as AFRAME_MIN_WID", 
	"FIL_UNCHANGED_REC___AFRAME_MAX_WID as AFRAME_MAX_WID", 
	"FIL_UNCHANGED_REC___AFRAME_MIN_WT as AFRAME_MIN_WT", 
	"FIL_UNCHANGED_REC___AFRAME_MAX_WT as AFRAME_MAX_WT", 
	"FIL_UNCHANGED_REC___REACH_DIST as REACH_DIST", 
	"FIL_UNCHANGED_REC___MOVE_GUIDES_RGT as MOVE_GUIDES_RGT", 
	"FIL_UNCHANGED_REC___MOVE_GUIDES_LFT as MOVE_GUIDES_LFT", 
	"FIL_UNCHANGED_REC___RESERVED_1 as RESERVED_1", 
	"FIL_UNCHANGED_REC___RESERVED_2 as RESERVED_2", 
	"FIL_UNCHANGED_REC___RESERVED_3 as RESERVED_3", 
	"FIL_UNCHANGED_REC___RESERVED_4 as RESERVED_4", 
	"FIL_UNCHANGED_REC___MOD_USER as MOD_USER", 
	"FIL_UNCHANGED_REC___CREATE_DATE_TIME as CREATE_DATE_TIME", 
	"FIL_UNCHANGED_REC___MOD_DATE_TIME as MOD_DATE_TIME", 
	"FIL_UNCHANGED_REC___in_LOCATION_ID as in_LOCATION_ID", 
	"FIL_UNCHANGED_REC___WM_RACK_LEVEL_ID as WM_RACK_LEVEL_ID", 
	"FIL_UNCHANGED_REC___WM_RACK_TYPE_ID as WM_RACK_TYPE_ID", 
	"FIL_UNCHANGED_REC___LEVEL_PRIORITY1 as LEVEL_PRIORITY1", 
	"FIL_UNCHANGED_REC___LEVEL_NBR as LEVEL_NBR", 
	"FIL_UNCHANGED_REC___LEVEL_WT_LIMIT1 as LEVEL_WT_LIMIT1", 
	"FIL_UNCHANGED_REC___LEVEL_HT1 as LEVEL_HT1", 
	"FIL_UNCHANGED_REC___LEVEL_WIDTH1 as LEVEL_WIDTH1", 
	"FIL_UNCHANGED_REC___LEVEL_DEPTH1 as LEVEL_DEPTH1", 
	"FIL_UNCHANGED_REC___USE_LEV_MAP_STR_FLAG as USE_LEV_MAP_STR_FLAG", 
	"FIL_UNCHANGED_REC___LEV_MAP_STR1 as LEV_MAP_STR1", 
	"FIL_UNCHANGED_REC___USE_POS_MAP_STR_FLAG as USE_POS_MAP_STR_FLAG", 
	"FIL_UNCHANGED_REC___POS_MAP_STR1 as POS_MAP_STR1", 
	"FIL_UNCHANGED_REC___NBR_OF_SLOTS1 as NBR_OF_SLOTS1", 
	"FIL_UNCHANGED_REC___SLOT_WT_LIMIT1 as SLOT_WT_LIMIT1", 
	"FIL_UNCHANGED_REC___MIN_SL_WIDTH1 as MIN_SL_WIDTH1", 
	"FIL_UNCHANGED_REC___MIN_ITEM_WIDTH1 as MIN_ITEM_WIDTH1", 
	"FIL_UNCHANGED_REC___MAX_OVERHANG_PCT1 as MAX_OVERHANG_PCT1", 
	"FIL_UNCHANGED_REC___SLOT_UNITS1 as SLOT_UNITS1", 
	"FIL_UNCHANGED_REC___SHIP_UNITS1 as SHIP_UNITS1", 
	"FIL_UNCHANGED_REC___COST_TO_PICK1 as COST_TO_PICK1", 
	"FIL_UNCHANGED_REC___MAX_LANE_WT1 as MAX_LANE_WT1", 
	"FIL_UNCHANGED_REC___HT_CLEARANCE1 as HT_CLEARANCE1", 
	"FIL_UNCHANGED_REC___SIDE_CLEAR1 as SIDE_CLEAR1", 
	"FIL_UNCHANGED_REC___MAX_STACKING1 as MAX_STACKING1", 
	"FIL_UNCHANGED_REC___MAX_LANES1 as MAX_LANES1", 
	"FIL_UNCHANGED_REC___GUIDE_WIDTH1 as GUIDE_WIDTH1", 
	"FIL_UNCHANGED_REC___LANE_GUIDES1 as LANE_GUIDES1", 
	"FIL_UNCHANGED_REC___SLOT_GUIDES1 as SLOT_GUIDES1", 
	"FIL_UNCHANGED_REC___MOVE_GUIDES1 as MOVE_GUIDES1", 
	"FIL_UNCHANGED_REC___USE_FULL_WID_FLAG as USE_FULL_WID_FLAG", 
	"FIL_UNCHANGED_REC___SHELF_THICKNESS1 as SHELF_THICKNESS1", 
	"FIL_UNCHANGED_REC___LABEL_POS1 as LABEL_POS1", 
	"FIL_UNCHANGED_REC___MAX_PICK_HT1 as MAX_PICK_HT1", 
	"FIL_UNCHANGED_REC___MAX_SL_WID1 as MAX_SL_WID1", 
	"FIL_UNCHANGED_REC___ONE_FACING_PER_DSW_FLAG as ONE_FACING_PER_DSW_FLAG", 
	"FIL_UNCHANGED_REC___USE_INCREMENT_FLAG as USE_INCREMENT_FLAG", 
	"FIL_UNCHANGED_REC___WIDTH_INCREMENT1 as WIDTH_INCREMENT1", 
	"FIL_UNCHANGED_REC___USE_VERT_DIV_FLAG as USE_VERT_DIV_FLAG", 
	"FIL_UNCHANGED_REC___VERT_DIV_HT1 as VERT_DIV_HT1", 
	"FIL_UNCHANGED_REC___MIN_CHANNEL_WID1 as MIN_CHANNEL_WID1", 
	"FIL_UNCHANGED_REC___MAX_CHANNEL_WID1 as MAX_CHANNEL_WID1", 
	"FIL_UNCHANGED_REC___MAX_CHANNEL_WT1 as MAX_CHANNEL_WT1", 
	"FIL_UNCHANGED_REC___MAX_ADJ_SLOTS1 as MAX_ADJ_SLOTS1", 
	"FIL_UNCHANGED_REC___MAX_EJECTOR_WT1 as MAX_EJECTOR_WT1", 
	"FIL_UNCHANGED_REC___AFRAME_ROTATE1 as AFRAME_ROTATE1", 
	"FIL_UNCHANGED_REC___AFRAME_MIN_HT1 as AFRAME_MIN_HT1", 
	"FIL_UNCHANGED_REC___AFRAME_MAX_HT1 as AFRAME_MAX_HT1", 
	"FIL_UNCHANGED_REC___AFRAME_MIN_LEN1 as AFRAME_MIN_LEN1", 
	"FIL_UNCHANGED_REC___AFRAME_MAX_LEN1 as AFRAME_MAX_LEN1", 
	"FIL_UNCHANGED_REC___AFRAME_MIN_WID1 as AFRAME_MIN_WID1", 
	"FIL_UNCHANGED_REC___AFRAME_MAX_WID1 as AFRAME_MAX_WID1", 
	"FIL_UNCHANGED_REC___AFRAME_MIN_WT1 as AFRAME_MIN_WT1", 
	"FIL_UNCHANGED_REC___AFRAME_MAX_WT1 as AFRAME_MAX_WT1", 
	"FIL_UNCHANGED_REC___REACH_DIST1 as REACH_DIST1", 
	"FIL_UNCHANGED_REC___MOVE_GUIDES_RGT1 as MOVE_GUIDES_RGT1", 
	"FIL_UNCHANGED_REC___MOVE_GUIDES_LFT1 as MOVE_GUIDES_LFT1", 
	"FIL_UNCHANGED_REC___RESERVED_11 as RESERVED_11", 
	"FIL_UNCHANGED_REC___RESERVED_21 as RESERVED_21", 
	"FIL_UNCHANGED_REC___RESERVED_31 as RESERVED_31", 
	"FIL_UNCHANGED_REC___RESERVED_41 as RESERVED_41", 
	"FIL_UNCHANGED_REC___WM_MOD_USER as WM_MOD_USER", 
	"FIL_UNCHANGED_REC___WM_CREATE_TSTMP as WM_CREATE_TSTMP", 
	"FIL_UNCHANGED_REC___WM_MOD_TSTMP as WM_MOD_TSTMP", 
	"FIL_UNCHANGED_REC___DELETE_FLAG as DELETE_FLAG", 
	"FIL_UNCHANGED_REC___in_LOAD_TSTMP as in_LOAD_TSTMP", 
	"IF(FIL_UNCHANGED_REC___RACK_LEVEL_ID IS NULL AND FIL_UNCHANGED_REC___WM_RACK_LEVEL_ID IS NOT NULL, 1, 0) as DELETE_FLAG_exp", 
	"CURRENT_TIMESTAMP() as UPDATE_TSTMP", 
	"IF(FIL_UNCHANGED_REC___in_LOAD_TSTMP IS NULL, CURRENT_TIMESTAMP(), FIL_UNCHANGED_REC___in_LOAD_TSTMP) as LOAD_TSTMP_exp", 
	"IF(FIL_UNCHANGED_REC___RACK_LEVEL_ID IS NOT NULL AND FIL_UNCHANGED_REC___WM_RACK_LEVEL_ID IS NULL, 'INSERT', IF(FIL_UNCHANGED_REC___RACK_LEVEL_ID IS NOT NULL AND FIL_UNCHANGED_REC___WM_RACK_LEVEL_ID IS NOT NULL AND ( FIL_UNCHANGED_REC___v_WM_CREATE_TSTMP <> FIL_UNCHANGED_REC___v_CREATE_DATE_TIME OR FIL_UNCHANGED_REC___v_WM_MOD_TSTMP <> FIL_UNCHANGED_REC___v_MOD_DATE_TIME ), 'UPDATE', NULL)) as o_UPD_VALIDATOR"
)

# COMMAND ----------
# Processing node UPD_INS_UPD, type UPDATE_STRATEGY . Note: using additional SELECT to rename incoming columns
# COLUMN COUNT: 68

# for each involved DataFrame, append the dataframe name to each column
EXP_UPD_VALIDATOR_temp = EXP_UPD_VALIDATOR.toDF(*["EXP_UPD_VALIDATOR___" + col for col in EXP_UPD_VALIDATOR.columns])

UPD_INS_UPD = EXP_UPD_VALIDATOR_temp.selectExpr( 
	"EXP_UPD_VALIDATOR___LOCATION_ID as LOCATION_ID1", 
	"EXP_UPD_VALIDATOR___RACK_LEVEL_ID as RACK_LEVEL_ID1", 
	"EXP_UPD_VALIDATOR___RACK_TYPE as RACK_TYPE1", 
	"EXP_UPD_VALIDATOR___LEVEL_PRIORITY as LEVEL_PRIORITY2", 
	"EXP_UPD_VALIDATOR___LEVEL_NUMBER as LEVEL_NUMBER1", 
	"EXP_UPD_VALIDATOR___LEVEL_WT_LIMIT as LEVEL_WT_LIMIT2", 
	"EXP_UPD_VALIDATOR___LEVEL_HT as LEVEL_HT2", 
	"EXP_UPD_VALIDATOR___LEVEL_WIDTH as LEVEL_WIDTH2", 
	"EXP_UPD_VALIDATOR___LEVEL_DEPTH as LEVEL_DEPTH2", 
	"EXP_UPD_VALIDATOR___USE_LEV_MAP_STR as USE_LEV_MAP_STR1", 
	"EXP_UPD_VALIDATOR___LEV_MAP_STR as LEV_MAP_STR2", 
	"EXP_UPD_VALIDATOR___USE_POS_MAP_STR as USE_POS_MAP_STR1", 
	"EXP_UPD_VALIDATOR___POS_MAP_STR as POS_MAP_STR2", 
	"EXP_UPD_VALIDATOR___NBR_OF_SLOTS as NBR_OF_SLOTS2", 
	"EXP_UPD_VALIDATOR___SLOT_WT_LIMIT as SLOT_WT_LIMIT2", 
	"EXP_UPD_VALIDATOR___MIN_SL_WIDTH as MIN_SL_WIDTH2", 
	"EXP_UPD_VALIDATOR___MIN_ITEM_WIDTH as MIN_ITEM_WIDTH2", 
	"EXP_UPD_VALIDATOR___MAX_OVERHANG_PCT as MAX_OVERHANG_PCT2", 
	"EXP_UPD_VALIDATOR___SLOT_UNITS as SLOT_UNITS2", 
	"EXP_UPD_VALIDATOR___SHIP_UNITS as SHIP_UNITS2", 
	"EXP_UPD_VALIDATOR___COST_TO_PICK as COST_TO_PICK2", 
	"EXP_UPD_VALIDATOR___MAX_LANE_WT as MAX_LANE_WT2", 
	"EXP_UPD_VALIDATOR___HT_CLEARANCE as HT_CLEARANCE2", 
	"EXP_UPD_VALIDATOR___SIDE_CLEAR as SIDE_CLEAR2", 
	"EXP_UPD_VALIDATOR___MAX_STACKING as MAX_STACKING2", 
	"EXP_UPD_VALIDATOR___MAX_LANES as MAX_LANES2", 
	"EXP_UPD_VALIDATOR___GUIDE_WIDTH as GUIDE_WIDTH2", 
	"EXP_UPD_VALIDATOR___LANE_GUIDES as LANE_GUIDES2", 
	"EXP_UPD_VALIDATOR___SLOT_GUIDES as SLOT_GUIDES2", 
	"EXP_UPD_VALIDATOR___MOVE_GUIDES as MOVE_GUIDES2", 
	"EXP_UPD_VALIDATOR___USE_FULL_WID as USE_FULL_WID1", 
	"EXP_UPD_VALIDATOR___SHELF_THICKNESS as SHELF_THICKNESS2", 
	"EXP_UPD_VALIDATOR___LABEL_POS as LABEL_POS2", 
	"EXP_UPD_VALIDATOR___MAX_PICK_HT as MAX_PICK_HT2", 
	"EXP_UPD_VALIDATOR___MAX_SL_WID as MAX_SL_WID2", 
	"EXP_UPD_VALIDATOR___ONE_FACING_PER_DSW as ONE_FACING_PER_DSW1", 
	"EXP_UPD_VALIDATOR___USE_INCREMENT as USE_INCREMENT1", 
	"EXP_UPD_VALIDATOR___WIDTH_INCREMENT as WIDTH_INCREMENT2", 
	"EXP_UPD_VALIDATOR___USE_VERT_DIV as USE_VERT_DIV1", 
	"EXP_UPD_VALIDATOR___VERT_DIV_HT as VERT_DIV_HT2", 
	"EXP_UPD_VALIDATOR___MIN_CHANNEL_WID as MIN_CHANNEL_WID2", 
	"EXP_UPD_VALIDATOR___MAX_CHANNEL_WID as MAX_CHANNEL_WID2", 
	"EXP_UPD_VALIDATOR___MAX_CHANNEL_WT as MAX_CHANNEL_WT2", 
	"EXP_UPD_VALIDATOR___MAX_ADJ_SLOTS as MAX_ADJ_SLOTS2", 
	"EXP_UPD_VALIDATOR___MAX_EJECTOR_WT as MAX_EJECTOR_WT2", 
	"EXP_UPD_VALIDATOR___AFRAME_ROTATE as AFRAME_ROTATE2", 
	"EXP_UPD_VALIDATOR___AFRAME_MIN_HT as AFRAME_MIN_HT2", 
	"EXP_UPD_VALIDATOR___AFRAME_MAX_HT as AFRAME_MAX_HT2", 
	"EXP_UPD_VALIDATOR___AFRAME_MIN_LEN as AFRAME_MIN_LEN2", 
	"EXP_UPD_VALIDATOR___AFRAME_MAX_LEN as AFRAME_MAX_LEN2", 
	"EXP_UPD_VALIDATOR___AFRAME_MIN_WID as AFRAME_MIN_WID2", 
	"EXP_UPD_VALIDATOR___AFRAME_MAX_WID as AFRAME_MAX_WID2", 
	"EXP_UPD_VALIDATOR___AFRAME_MIN_WT as AFRAME_MIN_WT2", 
	"EXP_UPD_VALIDATOR___AFRAME_MAX_WT as AFRAME_MAX_WT2", 
	"EXP_UPD_VALIDATOR___REACH_DIST as REACH_DIST2", 
	"EXP_UPD_VALIDATOR___MOVE_GUIDES_RGT as MOVE_GUIDES_RGT2", 
	"EXP_UPD_VALIDATOR___MOVE_GUIDES_LFT as MOVE_GUIDES_LFT2", 
	"EXP_UPD_VALIDATOR___RESERVED_1 as RESERVED_12", 
	"EXP_UPD_VALIDATOR___RESERVED_2 as RESERVED_22", 
	"EXP_UPD_VALIDATOR___RESERVED_3 as RESERVED_32", 
	"EXP_UPD_VALIDATOR___RESERVED_4 as RESERVED_42", 
	"EXP_UPD_VALIDATOR___MOD_USER as MOD_USER1", 
	"EXP_UPD_VALIDATOR___CREATE_DATE_TIME as CREATE_DATE_TIME1", 
	"EXP_UPD_VALIDATOR___MOD_DATE_TIME as MOD_DATE_TIME1", 
	"EXP_UPD_VALIDATOR___DELETE_FLAG_exp as DELETE_FLAG_exp1", 
	"EXP_UPD_VALIDATOR___UPDATE_TSTMP as UPDATE_TSTMP1", 
	"EXP_UPD_VALIDATOR___LOAD_TSTMP_exp as LOAD_TSTMP_exp1", 
	"EXP_UPD_VALIDATOR___o_UPD_VALIDATOR as o_UPD_VALIDATOR1"
).withColumn('pyspark_data_action', when(col('o_UPD_VALIDATOR1') ==(lit('INSERT')),lit(0)).when(col('o_UPD_VALIDATOR1') ==(lit('UPDATE')),lit(1)))

# COMMAND ----------
# Processing node Shortcut_to_WM_RACK_TYPE_LEVEL1, type TARGET 
# COLUMN COUNT: 67


Shortcut_to_WM_RACK_TYPE_LEVEL1 = UPD_INS_UPD.selectExpr(
	"CAST(LOCATION_ID1 AS BIGINT) as LOCATION_ID",
	"CAST(RACK_LEVEL_ID1 AS BIGINT) as WM_RACK_LEVEL_ID",
	"CAST(RACK_TYPE1 AS BIGINT) as WM_RACK_TYPE_ID",
	"CAST(LEVEL_PRIORITY2 AS BIGINT) as LEVEL_PRIORITY",
	"CAST(LEVEL_NUMBER1 AS BIGINT) as LEVEL_NBR",
	"CAST(LEVEL_WT_LIMIT2 AS DECIMAL(13,4)) as LEVEL_WT_LIMIT",
	"CAST(LEVEL_HT2 AS DECIMAL(13,4)) as LEVEL_HT",
	"CAST(LEVEL_WIDTH2 AS DECIMAL(13,4)) as LEVEL_WIDTH",
	"CAST(LEVEL_DEPTH2 AS DECIMAL(13,4)) as LEVEL_DEPTH",
	"CAST(USE_LEV_MAP_STR1 AS TINYINT) as USE_LEV_MAP_STR_FLAG",
	"CAST(LEV_MAP_STR2 AS STRING) as LEV_MAP_STR",
	"CAST(USE_POS_MAP_STR1 AS TINYINT) as USE_POS_MAP_STR_FLAG",
	"CAST(POS_MAP_STR2 AS STRING) as POS_MAP_STR",
	"CAST(NBR_OF_SLOTS2 AS BIGINT) as NBR_OF_SLOTS",
	"CAST(SLOT_WT_LIMIT2 AS DECIMAL(13,4)) as SLOT_WT_LIMIT",
	"CAST(MIN_SL_WIDTH2 AS DECIMAL(13,4)) as MIN_SL_WIDTH",
	"CAST(MIN_ITEM_WIDTH2 AS DECIMAL(13,4)) as MIN_ITEM_WIDTH",
	"CAST(MAX_OVERHANG_PCT2 AS BIGINT) as MAX_OVERHANG_PCT",
	"CAST(SLOT_UNITS2 AS BIGINT) as SLOT_UNITS",
	"CAST(SHIP_UNITS2 AS BIGINT) as SHIP_UNITS",
	"CAST(COST_TO_PICK2 AS DECIMAL(13,4)) as COST_TO_PICK",
	"CAST(MAX_LANE_WT2 AS DECIMAL(13,4)) as MAX_LANE_WT",
	"CAST(HT_CLEARANCE2 AS DECIMAL(13,4)) as HT_CLEARANCE",
	"CAST(SIDE_CLEAR2 AS DECIMAL(13,4)) as SIDE_CLEAR",
	"CAST(MAX_STACKING2 AS BIGINT) as MAX_STACKING",
	"CAST(MAX_LANES2 AS BIGINT) as MAX_LANES",
	"CAST(GUIDE_WIDTH2 AS DECIMAL(13,4)) as GUIDE_WIDTH",
	"CAST(LANE_GUIDES2 AS TINYINT) as LANE_GUIDES",
	"CAST(SLOT_GUIDES2 AS TINYINT) as SLOT_GUIDES",
	"CAST(MOVE_GUIDES2 AS TINYINT) as MOVE_GUIDES",
	"CAST(USE_FULL_WID1 AS TINYINT) as USE_FULL_WID_FLAG",
	"CAST(SHELF_THICKNESS2 AS DECIMAL(9,4)) as SHELF_THICKNESS",
	"CAST(LABEL_POS2 AS DECIMAL(9,4)) as LABEL_POS",
	"CAST(MAX_PICK_HT2 AS DECIMAL(9,4)) as MAX_PICK_HT",
	"CAST(MAX_SL_WID2 AS DECIMAL(13,4)) as MAX_SL_WID",
	"CAST(ONE_FACING_PER_DSW1 AS TINYINT) as ONE_FACING_PER_DSW_FLAG",
	"CAST(USE_INCREMENT1 AS TINYINT) as USE_INCREMENT_FLAG",
	"CAST(WIDTH_INCREMENT2 AS DECIMAL(13,4)) as WIDTH_INCREMENT",
	"CAST(USE_VERT_DIV1 AS TINYINT) as USE_VERT_DIV_FLAG",
	"CAST(VERT_DIV_HT2 AS DECIMAL(13,4)) as VERT_DIV_HT",
	"CAST(MIN_CHANNEL_WID2 AS DECIMAL(13,4)) as MIN_CHANNEL_WID",
	"CAST(MAX_CHANNEL_WID2 AS DECIMAL(13,4)) as MAX_CHANNEL_WID",
	"CAST(MAX_CHANNEL_WT2 AS DECIMAL(13,4)) as MAX_CHANNEL_WT",
	"CAST(MAX_ADJ_SLOTS2 AS BIGINT) as MAX_ADJ_SLOTS",
	"CAST(MAX_EJECTOR_WT2 AS DECIMAL(13,4)) as MAX_EJECTOR_WT",
	"CAST(AFRAME_ROTATE2 AS TINYINT) as AFRAME_ROTATE",
	"CAST(AFRAME_MIN_HT2 AS DECIMAL(13,4)) as AFRAME_MIN_HT",
	"CAST(AFRAME_MAX_HT2 AS DECIMAL(13,4)) as AFRAME_MAX_HT",
	"CAST(AFRAME_MIN_LEN2 AS DECIMAL(13,4)) as AFRAME_MIN_LEN",
	"CAST(AFRAME_MAX_LEN2 AS DECIMAL(13,4)) as AFRAME_MAX_LEN",
	"CAST(AFRAME_MIN_WID2 AS DECIMAL(13,4)) as AFRAME_MIN_WID",
	"CAST(AFRAME_MAX_WID2 AS DECIMAL(13,4)) as AFRAME_MAX_WID",
	"CAST(AFRAME_MIN_WT2 AS DECIMAL(13,4)) as AFRAME_MIN_WT",
	"CAST(AFRAME_MAX_WT2 AS DECIMAL(13,4)) as AFRAME_MAX_WT",
	"CAST(REACH_DIST2 AS DECIMAL(13,4)) as REACH_DIST",
	"CAST(MOVE_GUIDES_RGT2 AS TINYINT) as MOVE_GUIDES_RGT",
	"CAST(MOVE_GUIDES_LFT2 AS TINYINT) as MOVE_GUIDES_LFT",
	"CAST(RESERVED_12 AS STRING) as RESERVED_1",
	"CAST(RESERVED_22 AS STRING) as RESERVED_2",
	"CAST(RESERVED_32 AS BIGINT) as RESERVED_3",
	"CAST(RESERVED_42 AS BIGINT) as RESERVED_4",
	"CAST(MOD_USER1 AS STRING) as WM_MOD_USER",
	"CAST(CREATE_DATE_TIME1 AS TIMESTAMP) as WM_CREATE_TSTMP",
	"CAST(MOD_DATE_TIME1 AS TIMESTAMP) as WM_MOD_TSTMP",
	"CAST(DELETE_FLAG_exp1 AS TINYINT) as DELETE_FLAG",
	"CAST(UPDATE_TSTMP1 AS TIMESTAMP) as UPDATE_TSTMP",
	"CAST(LOAD_TSTMP_exp1 AS TIMESTAMP) as LOAD_TSTMP" , 
    "pyspark_data_action"
)


try:
  primary_key = """source.LOCATION_ID = target.LOCATION_ID AND source.WM_RACK_LEVEL_ID = target.WM_RACK_LEVEL_ID"""
  # refined_perf_table = "WM_RACK_TYPE_LEVEL"
  executeMerge(Shortcut_to_WM_RACK_TYPE_LEVEL1, refined_perf_table, primary_key)
  logger.info(f"Merge with {refined_perf_table} completed]")
  logPrevRunDt("WM_RACK_TYPE_LEVEL", "WM_RACK_TYPE_LEVEL", "Completed", "N/A", f"{raw}.log_run_details")
except Exception as e:
  logPrevRunDt("WM_RACK_TYPE_LEVEL", "WM_RACK_TYPE_LEVEL","Failed",str(e), f"{raw}.log_run_details", )
  raise e


# post sql

# soft_delete_logic_WM_Rack_Type_Level= ' $$soft_delete_logic_WM_Rack_Type_Level=
# update WM_Rack_Type_Level set delete_flag=1 , update_tstmp=current_date
#  where (location_id, WM_Rack_Type_ID) in (select location_id, WM_Rack_Type_ID 
#                                           from  WM_Rack_Type_Level  base_table 
#                                           where base_table.DELETE_FLAG=0
#                                            and (cast(base_table.WM_CREATE_TSTMP as date) >= (cast('$$Prev_Run_Dt' as date )-14) 
#                                                 or cast(base_table.WM_MOD_TSTMP as date) >= (cast('$$Prev_Run_Dt' as date )-14) ) and (location_id, WM_Rack_Type_ID) not in (select   SP.location_id, pre_table.Rack_level_ID from  WM_Rack_Type_Level_pre pre_table, site_profile SP where SP.store_nbr =pre_table.dc_nbr));


#Commenting soft delete logic that has an Informatica bug and doesn't have to be done
# update wm_trailer_contents set delete_flag=1, update_tstmp=current_timestamp where
# soft_delete_logic_WM_Rack_Type_Level= f""" 
# select  location_id, WM_Rack_Type_ID 
# from {refined_perf_table}  
# where (location_id, WM_Rack_Type_ID) in 
# (select location_id, WM_Rack_Type_ID 
# from  {refined_perf_table}  base_table 
# where base_table.DELETE_FLAG=0 
# and ( cast(base_table.WM_CREATE_TSTMP as date) >= (cast('{Prev_Run_Dt}' as date )-14) 
# 		or cast(base_table.WM_MOD_TSTMP as date) >= (cast('{Prev_Run_Dt}' as date )-14))
# and (location_id, WM_Rack_Type_ID) not in 
# ( select   SP.location_id, pre_table.Rack_level_ID 
# from  {raw_perf_table} pre_table, {site_profile_table} SP 
# where SP.store_nbr =pre_table.dc_nbr))"""

# sd_df = spark.sql(soft_delete_logic_WM_Rack_Type_Level)

# sd_df.createOrReplaceTempView('WM_RACK_TYPE_LEVEL_SD')

# spark.sql(f"""
#           MERGE INTO {refined_perf_table} tgt
#           USING  WM_RACK_TYPE_LEVEL_SD src
#           ON src.location_id = tgt.location_id and src.WM_Rack_Type_ID = tgt.WM_Rack_Type_ID
#           WHEN MATCHED THEN UPDATE
#           SET tgt.delete_flag = 1,
#           tgt.update_tstmp=current_timestamp
#           """)

	
