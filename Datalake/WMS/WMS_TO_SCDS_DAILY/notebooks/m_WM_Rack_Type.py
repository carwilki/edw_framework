#Code converted on 2023-06-22 20:25:32
import os
import argparse
from pyspark.sql import *
from pyspark.sql.functions import *
from pyspark.sql.window import Window
from pyspark.sql.types import *
from datetime import datetime
from pyspark.dbutils import DBUtils
from Datalake.utils.genericUtilities import *
from Datalake.utils.configs import *
from Datalake.utils.mergeUtils import *
from Datalake.utils.logger import *
# COMMAND ----------

parser = argparse.ArgumentParser()
spark = SparkSession.getActiveSession()
dbutils = DBUtils(spark)

parser.add_argument('env', type=str, help='Env Variable')
args = parser.parse_args()
env = args.env
# env = 'dev'

if env is None or env == '':
    raise ValueError('env is not set')

refine = getEnvPrefix(env) + 'refine'
raw = getEnvPrefix(env) + 'raw'
legacy = getEnvPrefix(env) + 'legacy'

# Set global variables
starttime = datetime.now() #start timestamp of the script
refined_perf_table = f"{refine}.WM_RACK_TYPE"
raw_perf_table = f"{raw}.WM_RACK_TYPE_PRE"
site_profile_table = f"{legacy}.SITE_PROFILE"


Prev_Run_Dt=genPrevRunDt(refined_perf_table.split(".")[1], refine,raw)
Del_Logic= ' -- ' # args.Del_Logic

# COMMAND ----------
# Processing node SQ_Shortcut_to_WM_RACK_TYPE_PRE, type SOURCE 
# COLUMN COUNT: 80

SQ_Shortcut_to_WM_RACK_TYPE_PRE = spark.sql(f"""SELECT
DC_NBR,
RACK_TYPE,
WHSE_CODE,
RT_NAME,
RACK_TYPE_DESC,
SEQUENCE,
REF_LEVEL_ID,
RACK_CLASS,
FIX_LABELS,
LABEL_WID,
OVERLAP_DIST,
MOVABLE_LABEL,
HN_CONSIDER,
UPRIGHT_THICKNESS,
FUNCTION_TYPE,
OVERSTOCK_CONSIDER,
USE_3D_SLOT,
WEEKS_IN_SLOT_CONSTRAINT,
NUM_OF_BAYS_AVAIL,
WEEK_IN_SLOT,
PARENT_BT,
WT_LIMIT,
HT,
WIDTH,
DEPTH,
CASE_HT_MIN,
CASE_HT_MAX,
CASE_LEN_MIN,
CASE_LEN_MAX,
CASE_WID_MIN,
CASE_WID_MAX,
CASE_WT_MIN,
CASE_WT_MAX,
CASE_CUBE_MIN,
CASE_CUBE_MAX,
CASE_INVEN_MIN,
CASE_INVEN_MAX,
CASE_MOVE_MIN,
CASE_MOVE_MAX,
CASE_HITS_MIN,
CASE_HITS_MAX,
INNER_HT_MIN,
INNER_HT_MAX,
INNER_LEN_MIN,
INNER_LEN_MAX,
INNER_WID_MIN,
INNER_WID_MAX,
INNER_WT_MIN,
INNER_WT_MAX,
INNER_CUBE_MIN,
INNER_CUBE_MAX,
EACH_HT_MIN,
EACH_HT_MAX,
EACH_LEN_MIN,
EACH_LEN_MAX,
EACH_WID_MAX,
EACH_WT_MIN,
EACH_WT_MAX,
EACH_CUBE_MIN,
EACH_CUBE_MAX,
PALLET_INVEN_MIN,
PALLET_INVEN_MAX,
EACH_WID_MIN,
CUBE_MOVE_MIN,
CUBE_MOVE_MAX,
CUBE_INVEN_MIN,
CUBE_INVEN_MAX,
CUBE_HITS_MIN,
CUBE_HITS_MAX,
VISC_MIN,
VISC_MAX,
FILL_PERCENT_MIN,
FILL_PERCENT_MAX,
RESERVED_1,
RESERVED_2,
RESERVED_3,
RESERVED_4,
CREATE_DATE_TIME,
MOD_DATE_TIME,
MOD_USER
FROM {raw_perf_table}""").withColumn("sys_row_id", monotonically_increasing_id())

# COMMAND ----------
# Processing node EXP_INT_CONVERSION, type EXPRESSION 
# COLUMN COUNT: 80

# for each involved DataFrame, append the dataframe name to each column
SQ_Shortcut_to_WM_RACK_TYPE_PRE_temp = SQ_Shortcut_to_WM_RACK_TYPE_PRE.toDF(*["SQ_Shortcut_to_WM_RACK_TYPE_PRE___" + col for col in SQ_Shortcut_to_WM_RACK_TYPE_PRE.columns])

EXP_INT_CONVERSION = SQ_Shortcut_to_WM_RACK_TYPE_PRE_temp.selectExpr( 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___sys_row_id as sys_row_id", 
	"cast(SQ_Shortcut_to_WM_RACK_TYPE_PRE___DC_NBR as int) as o_DC_NBR", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___RACK_TYPE as RACK_TYPE", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___WHSE_CODE as WHSE_CODE", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___RT_NAME as RT_NAME", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___RACK_TYPE_DESC as RACK_TYPE_DESC", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___SEQUENCE as SEQUENCE", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___REF_LEVEL_ID as REF_LEVEL_ID", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___RACK_CLASS as RACK_CLASS", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___FIX_LABELS as FIX_LABELS", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___LABEL_WID as LABEL_WID", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___OVERLAP_DIST as OVERLAP_DIST", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___MOVABLE_LABEL as MOVABLE_LABEL", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___HN_CONSIDER as HN_CONSIDER", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___UPRIGHT_THICKNESS as UPRIGHT_THICKNESS", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___FUNCTION_TYPE as FUNCTION_TYPE", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___OVERSTOCK_CONSIDER as OVERSTOCK_CONSIDER", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___USE_3D_SLOT as USE_3D_SLOT", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___WEEKS_IN_SLOT_CONSTRAINT as WEEKS_IN_SLOT_CONSTRAINT", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___NUM_OF_BAYS_AVAIL as NUM_OF_BAYS_AVAIL", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___WEEK_IN_SLOT as WEEK_IN_SLOT", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___PARENT_BT as PARENT_BT", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___WT_LIMIT as WT_LIMIT", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___HT as HT", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___WIDTH as WIDTH", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___DEPTH as DEPTH", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___CASE_HT_MIN as CASE_HT_MIN", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___CASE_HT_MAX as CASE_HT_MAX", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___CASE_LEN_MIN as CASE_LEN_MIN", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___CASE_LEN_MAX as CASE_LEN_MAX", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___CASE_WID_MIN as CASE_WID_MIN", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___CASE_WID_MAX as CASE_WID_MAX", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___CASE_WT_MIN as CASE_WT_MIN", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___CASE_WT_MAX as CASE_WT_MAX", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___CASE_CUBE_MIN as CASE_CUBE_MIN", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___CASE_CUBE_MAX as CASE_CUBE_MAX", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___CASE_INVEN_MIN as CASE_INVEN_MIN", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___CASE_INVEN_MAX as CASE_INVEN_MAX", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___CASE_MOVE_MIN as CASE_MOVE_MIN", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___CASE_MOVE_MAX as CASE_MOVE_MAX", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___CASE_HITS_MIN as CASE_HITS_MIN", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___CASE_HITS_MAX as CASE_HITS_MAX", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___INNER_HT_MIN as INNER_HT_MIN", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___INNER_HT_MAX as INNER_HT_MAX", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___INNER_LEN_MIN as INNER_LEN_MIN", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___INNER_LEN_MAX as INNER_LEN_MAX", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___INNER_WID_MIN as INNER_WID_MIN", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___INNER_WID_MAX as INNER_WID_MAX", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___INNER_WT_MIN as INNER_WT_MIN", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___INNER_WT_MAX as INNER_WT_MAX", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___INNER_CUBE_MIN as INNER_CUBE_MIN", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___INNER_CUBE_MAX as INNER_CUBE_MAX", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___EACH_HT_MIN as EACH_HT_MIN", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___EACH_HT_MAX as EACH_HT_MAX", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___EACH_LEN_MIN as EACH_LEN_MIN", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___EACH_LEN_MAX as EACH_LEN_MAX", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___EACH_WID_MAX as EACH_WID_MAX", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___EACH_WT_MIN as EACH_WT_MIN", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___EACH_WT_MAX as EACH_WT_MAX", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___EACH_CUBE_MIN as EACH_CUBE_MIN", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___EACH_CUBE_MAX as EACH_CUBE_MAX", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___PALLET_INVEN_MIN as PALLET_INVEN_MIN", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___PALLET_INVEN_MAX as PALLET_INVEN_MAX", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___EACH_WID_MIN as EACH_WID_MIN", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___CUBE_MOVE_MIN as CUBE_MOVE_MIN", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___CUBE_MOVE_MAX as CUBE_MOVE_MAX", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___CUBE_INVEN_MIN as CUBE_INVEN_MIN", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___CUBE_INVEN_MAX as CUBE_INVEN_MAX", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___CUBE_HITS_MIN as CUBE_HITS_MIN", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___CUBE_HITS_MAX as CUBE_HITS_MAX", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___VISC_MIN as VISC_MIN", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___VISC_MAX as VISC_MAX", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___FILL_PERCENT_MIN as FILL_PERCENT_MIN", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___FILL_PERCENT_MAX as FILL_PERCENT_MAX", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___RESERVED_1 as RESERVED_1", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___RESERVED_2 as RESERVED_2", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___RESERVED_3 as RESERVED_3", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___RESERVED_4 as RESERVED_4", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___CREATE_DATE_TIME as CREATE_DATE_TIME", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___MOD_DATE_TIME as MOD_DATE_TIME", 
	"SQ_Shortcut_to_WM_RACK_TYPE_PRE___MOD_USER as MOD_USER" 
)

# COMMAND ----------
# Processing node SQ_Shortcut_to_WM_RACK_TYPE, type SOURCE 
# COLUMN COUNT: 82

SQ_Shortcut_to_WM_RACK_TYPE = spark.sql(f"""SELECT
LOCATION_ID,
WM_RACK_TYPE_ID,
WM_WHSE_CD,
WM_RACK_TYPE_NAME,
WM_RACK_TYPE_DESC,
SEQ_NBR,
WM_REF_LEVEL_ID,
RACK_CLASS,
FIX_LABELS,
MOVABLE_LABEL,
LABEL_WID,
OVERLAP_DIST,
HN_CONSIDER,
UPRIGHT_THICKNESS,
FUNCTION_TYPE,
OVERSTOCK_CONSIDER,
USE_3D_SLOT,
WEEKS_IN_SLOT_CONSTRAINT,
NUM_OF_BAYS_AVAIL,
WEEK_IN_SLOT,
PARENT_BT,
WT_LIMIT,
HT,
WIDTH,
DEPTH,
CASE_HT_MIN,
CASE_HT_MAX,
CASE_LEN_MIN,
CASE_LEN_MAX,
CASE_WID_MIN,
CASE_WID_MAX,
CASE_WT_MIN,
CASE_WT_MAX,
CASE_CUBE_MIN,
CASE_CUBE_MAX,
CASE_INVEN_MIN,
CASE_INVEN_MAX,
CASE_MOVE_MIN,
CASE_MOVE_MAX,
CASE_HITS_MIN,
CASE_HITS_MAX,
INNER_HT_MIN,
INNER_HT_MAX,
INNER_LEN_MIN,
INNER_LEN_MAX,
INNER_WID_MIN,
INNER_WID_MAX,
INNER_WT_MIN,
INNER_WT_MAX,
INNER_CUBE_MIN,
INNER_CUBE_MAX,
EACH_HT_MIN,
EACH_HT_MAX,
EACH_LEN_MIN,
EACH_LEN_MAX,
EACH_WID_MIN,
EACH_WID_MAX,
EACH_WT_MIN,
EACH_WT_MAX,
EACH_CUBE_MIN,
EACH_CUBE_MAX,
PALLET_INVEN_MIN,
PALLET_INVEN_MAX,
CUBE_MOVE_MIN,
CUBE_MOVE_MAX,
CUBE_HITS_MIN,
CUBE_HITS_MAX,
CUBE_INVEN_MIN,
CUBE_INVEN_MAX,
VISC_MIN,
VISC_MAX,
FILL_PERCENT_MIN,
FILL_PERCENT_MAX,
RESERVED_1,
RESERVED_2,
RESERVED_3,
RESERVED_4,
WM_MOD_USER,
WM_CREATE_TSTMP,
WM_MOD_TSTMP,
DELETE_FLAG,
LOAD_TSTMP
FROM {refined_perf_table}
WHERE {Del_Logic} 1=0 and 
DELETE_FLAG =0""").withColumn("sys_row_id", monotonically_increasing_id())

# COMMAND ----------
# Processing node SQ_Shortcut_to_SITE_PROFILE, type SOURCE 
# COLUMN COUNT: 2

SQ_Shortcut_to_SITE_PROFILE = spark.sql(f"""SELECT LOCATION_ID, STORE_NBR FROM {site_profile_table}""").withColumn("sys_row_id", monotonically_increasing_id())

# COMMAND ----------
# Processing node JNR_SITE_PROFILE, type JOINER 
# COLUMN COUNT: 82

JNR_SITE_PROFILE = SQ_Shortcut_to_SITE_PROFILE.join(EXP_INT_CONVERSION,[SQ_Shortcut_to_SITE_PROFILE.STORE_NBR == EXP_INT_CONVERSION.o_DC_NBR],'inner')

# COMMAND ----------
# Processing node JNR_WM_RACK_TYPE, type JOINER . Note: using additional SELECT to rename incoming columns
# COLUMN COUNT: 162

# for each involved DataFrame, append the dataframe name to each column
JNR_SITE_PROFILE_temp = JNR_SITE_PROFILE.toDF(*["JNR_SITE_PROFILE___" + col for col in JNR_SITE_PROFILE.columns])
SQ_Shortcut_to_WM_RACK_TYPE_temp = SQ_Shortcut_to_WM_RACK_TYPE.toDF(*["SQ_Shortcut_to_WM_RACK_TYPE___" + col for col in SQ_Shortcut_to_WM_RACK_TYPE.columns])

JNR_WM_RACK_TYPE = SQ_Shortcut_to_WM_RACK_TYPE_temp.join(JNR_SITE_PROFILE_temp,[SQ_Shortcut_to_WM_RACK_TYPE_temp.SQ_Shortcut_to_WM_RACK_TYPE___LOCATION_ID == JNR_SITE_PROFILE_temp.JNR_SITE_PROFILE___LOCATION_ID, SQ_Shortcut_to_WM_RACK_TYPE_temp.SQ_Shortcut_to_WM_RACK_TYPE___WM_RACK_TYPE_ID == JNR_SITE_PROFILE_temp.JNR_SITE_PROFILE___RACK_TYPE],'fullouter').selectExpr( 
	"JNR_SITE_PROFILE___RACK_TYPE as RACK_TYPE", 
	"JNR_SITE_PROFILE___WHSE_CODE as WHSE_CODE", 
	"JNR_SITE_PROFILE___RT_NAME as RT_NAME", 
	"JNR_SITE_PROFILE___RACK_TYPE_DESC as RACK_TYPE_DESC", 
	"JNR_SITE_PROFILE___SEQUENCE as SEQUENCE", 
	"JNR_SITE_PROFILE___REF_LEVEL_ID as REF_LEVEL_ID", 
	"JNR_SITE_PROFILE___RACK_CLASS as RACK_CLASS", 
	"JNR_SITE_PROFILE___FIX_LABELS as FIX_LABELS", 
	"JNR_SITE_PROFILE___LABEL_WID as LABEL_WID", 
	"JNR_SITE_PROFILE___OVERLAP_DIST as OVERLAP_DIST", 
	"JNR_SITE_PROFILE___MOVABLE_LABEL as MOVABLE_LABEL", 
	"JNR_SITE_PROFILE___HN_CONSIDER as HN_CONSIDER", 
	"JNR_SITE_PROFILE___UPRIGHT_THICKNESS as UPRIGHT_THICKNESS", 
	"JNR_SITE_PROFILE___FUNCTION_TYPE as FUNCTION_TYPE", 
	"JNR_SITE_PROFILE___OVERSTOCK_CONSIDER as OVERSTOCK_CONSIDER", 
	"JNR_SITE_PROFILE___USE_3D_SLOT as USE_3D_SLOT", 
	"JNR_SITE_PROFILE___WEEKS_IN_SLOT_CONSTRAINT as WEEKS_IN_SLOT_CONSTRAINT", 
	"JNR_SITE_PROFILE___NUM_OF_BAYS_AVAIL as NUM_OF_BAYS_AVAIL", 
	"JNR_SITE_PROFILE___WEEK_IN_SLOT as WEEK_IN_SLOT", 
	"JNR_SITE_PROFILE___PARENT_BT as PARENT_BT", 
	"JNR_SITE_PROFILE___WT_LIMIT as WT_LIMIT", 
	"JNR_SITE_PROFILE___HT as HT", 
	"JNR_SITE_PROFILE___WIDTH as WIDTH", 
	"JNR_SITE_PROFILE___DEPTH as DEPTH", 
	"JNR_SITE_PROFILE___CASE_HT_MIN as CASE_HT_MIN", 
	"JNR_SITE_PROFILE___CASE_HT_MAX as CASE_HT_MAX", 
	"JNR_SITE_PROFILE___CASE_LEN_MIN as CASE_LEN_MIN", 
	"JNR_SITE_PROFILE___CASE_LEN_MAX as CASE_LEN_MAX", 
	"JNR_SITE_PROFILE___CASE_WID_MIN as CASE_WID_MIN", 
	"JNR_SITE_PROFILE___CASE_WID_MAX as CASE_WID_MAX", 
	"JNR_SITE_PROFILE___CASE_WT_MIN as CASE_WT_MIN", 
	"JNR_SITE_PROFILE___CASE_WT_MAX as CASE_WT_MAX", 
	"JNR_SITE_PROFILE___CASE_CUBE_MIN as CASE_CUBE_MIN", 
	"JNR_SITE_PROFILE___CASE_CUBE_MAX as CASE_CUBE_MAX", 
	"JNR_SITE_PROFILE___CASE_INVEN_MIN as CASE_INVEN_MIN", 
	"JNR_SITE_PROFILE___CASE_INVEN_MAX as CASE_INVEN_MAX", 
	"JNR_SITE_PROFILE___CASE_MOVE_MIN as CASE_MOVE_MIN", 
	"JNR_SITE_PROFILE___CASE_MOVE_MAX as CASE_MOVE_MAX", 
	"JNR_SITE_PROFILE___CASE_HITS_MIN as CASE_HITS_MIN", 
	"JNR_SITE_PROFILE___CASE_HITS_MAX as CASE_HITS_MAX", 
	"JNR_SITE_PROFILE___INNER_HT_MIN as INNER_HT_MIN", 
	"JNR_SITE_PROFILE___INNER_HT_MAX as INNER_HT_MAX", 
	"JNR_SITE_PROFILE___INNER_LEN_MIN as INNER_LEN_MIN", 
	"JNR_SITE_PROFILE___INNER_LEN_MAX as INNER_LEN_MAX", 
	"JNR_SITE_PROFILE___INNER_WID_MIN as INNER_WID_MIN", 
	"JNR_SITE_PROFILE___INNER_WID_MAX as INNER_WID_MAX", 
	"JNR_SITE_PROFILE___INNER_WT_MIN as INNER_WT_MIN", 
	"JNR_SITE_PROFILE___INNER_WT_MAX as INNER_WT_MAX", 
	"JNR_SITE_PROFILE___INNER_CUBE_MIN as INNER_CUBE_MIN", 
	"JNR_SITE_PROFILE___INNER_CUBE_MAX as INNER_CUBE_MAX", 
	"JNR_SITE_PROFILE___EACH_HT_MIN as EACH_HT_MIN", 
	"JNR_SITE_PROFILE___EACH_HT_MAX as EACH_HT_MAX", 
	"JNR_SITE_PROFILE___EACH_LEN_MIN as EACH_LEN_MIN", 
	"JNR_SITE_PROFILE___EACH_LEN_MAX as EACH_LEN_MAX", 
	"JNR_SITE_PROFILE___EACH_WID_MAX as EACH_WID_MAX", 
	"JNR_SITE_PROFILE___EACH_WT_MIN as EACH_WT_MIN", 
	"JNR_SITE_PROFILE___EACH_WT_MAX as EACH_WT_MAX", 
	"JNR_SITE_PROFILE___EACH_CUBE_MIN as EACH_CUBE_MIN", 
	"JNR_SITE_PROFILE___EACH_CUBE_MAX as EACH_CUBE_MAX", 
	"JNR_SITE_PROFILE___PALLET_INVEN_MIN as PALLET_INVEN_MIN", 
	"JNR_SITE_PROFILE___PALLET_INVEN_MAX as PALLET_INVEN_MAX", 
	"JNR_SITE_PROFILE___EACH_WID_MIN as EACH_WID_MIN", 
	"JNR_SITE_PROFILE___CUBE_MOVE_MIN as CUBE_MOVE_MIN", 
	"JNR_SITE_PROFILE___CUBE_MOVE_MAX as CUBE_MOVE_MAX", 
	"JNR_SITE_PROFILE___CUBE_INVEN_MIN as CUBE_INVEN_MIN", 
	"JNR_SITE_PROFILE___CUBE_INVEN_MAX as CUBE_INVEN_MAX", 
	"JNR_SITE_PROFILE___CUBE_HITS_MIN as CUBE_HITS_MIN", 
	"JNR_SITE_PROFILE___CUBE_HITS_MAX as CUBE_HITS_MAX", 
	"JNR_SITE_PROFILE___VISC_MIN as VISC_MIN", 
	"JNR_SITE_PROFILE___VISC_MAX as VISC_MAX", 
	"JNR_SITE_PROFILE___FILL_PERCENT_MIN as FILL_PERCENT_MIN", 
	"JNR_SITE_PROFILE___FILL_PERCENT_MAX as FILL_PERCENT_MAX", 
	"JNR_SITE_PROFILE___RESERVED_1 as RESERVED_1", 
	"JNR_SITE_PROFILE___RESERVED_2 as RESERVED_2", 
	"JNR_SITE_PROFILE___RESERVED_3 as RESERVED_3", 
	"JNR_SITE_PROFILE___RESERVED_4 as RESERVED_4", 
	"JNR_SITE_PROFILE___CREATE_DATE_TIME as CREATE_DATE_TIME", 
	"JNR_SITE_PROFILE___MOD_DATE_TIME as MOD_DATE_TIME", 
	"JNR_SITE_PROFILE___MOD_USER as MOD_USER", 
	"JNR_SITE_PROFILE___LOCATION_ID as LOCATION_ID", 
	"SQ_Shortcut_to_WM_RACK_TYPE___LOCATION_ID as in_LOCATION_ID", 
	"SQ_Shortcut_to_WM_RACK_TYPE___WM_RACK_TYPE_ID as WM_RACK_TYPE_ID", 
	"SQ_Shortcut_to_WM_RACK_TYPE___WM_WHSE_CD as WM_WHSE_CD", 
	"SQ_Shortcut_to_WM_RACK_TYPE___WM_RACK_TYPE_NAME as WM_RACK_TYPE_NAME", 
	"SQ_Shortcut_to_WM_RACK_TYPE___WM_RACK_TYPE_DESC as WM_RACK_TYPE_DESC", 
	"SQ_Shortcut_to_WM_RACK_TYPE___SEQ_NBR as SEQ_NBR", 
	"SQ_Shortcut_to_WM_RACK_TYPE___WM_REF_LEVEL_ID as WM_REF_LEVEL_ID", 
	"SQ_Shortcut_to_WM_RACK_TYPE___RACK_CLASS as in_RACK_CLASS", 
	"SQ_Shortcut_to_WM_RACK_TYPE___FIX_LABELS as in_FIX_LABELS", 
	"SQ_Shortcut_to_WM_RACK_TYPE___MOVABLE_LABEL as in_MOVABLE_LABEL", 
	"SQ_Shortcut_to_WM_RACK_TYPE___LABEL_WID as in_LABEL_WID", 
	"SQ_Shortcut_to_WM_RACK_TYPE___OVERLAP_DIST as in_OVERLAP_DIST", 
	"SQ_Shortcut_to_WM_RACK_TYPE___HN_CONSIDER as in_HN_CONSIDER", 
	"SQ_Shortcut_to_WM_RACK_TYPE___UPRIGHT_THICKNESS as in_UPRIGHT_THICKNESS", 
	"SQ_Shortcut_to_WM_RACK_TYPE___FUNCTION_TYPE as in_FUNCTION_TYPE", 
	"SQ_Shortcut_to_WM_RACK_TYPE___OVERSTOCK_CONSIDER as in_OVERSTOCK_CONSIDER", 
	"SQ_Shortcut_to_WM_RACK_TYPE___USE_3D_SLOT as in_USE_3D_SLOT", 
	"SQ_Shortcut_to_WM_RACK_TYPE___WEEKS_IN_SLOT_CONSTRAINT as in_WEEKS_IN_SLOT_CONSTRAINT", 
	"SQ_Shortcut_to_WM_RACK_TYPE___NUM_OF_BAYS_AVAIL as in_NUM_OF_BAYS_AVAIL", 
	"SQ_Shortcut_to_WM_RACK_TYPE___WEEK_IN_SLOT as in_WEEK_IN_SLOT", 
	"SQ_Shortcut_to_WM_RACK_TYPE___PARENT_BT as in_PARENT_BT", 
	"SQ_Shortcut_to_WM_RACK_TYPE___WT_LIMIT as in_WT_LIMIT", 
	"SQ_Shortcut_to_WM_RACK_TYPE___HT as in_HT", 
	"SQ_Shortcut_to_WM_RACK_TYPE___WIDTH as in_WIDTH", 
	"SQ_Shortcut_to_WM_RACK_TYPE___DEPTH as in_DEPTH", 
	"SQ_Shortcut_to_WM_RACK_TYPE___CASE_HT_MIN as in_CASE_HT_MIN", 
	"SQ_Shortcut_to_WM_RACK_TYPE___CASE_HT_MAX as in_CASE_HT_MAX", 
	"SQ_Shortcut_to_WM_RACK_TYPE___CASE_LEN_MIN as CASE_LEN_MIN1", 
	"SQ_Shortcut_to_WM_RACK_TYPE___CASE_LEN_MAX as CASE_LEN_MAX1", 
	"SQ_Shortcut_to_WM_RACK_TYPE___CASE_WID_MIN as CASE_WID_MIN1", 
	"SQ_Shortcut_to_WM_RACK_TYPE___CASE_WID_MAX as CASE_WID_MAX1", 
	"SQ_Shortcut_to_WM_RACK_TYPE___CASE_WT_MIN as CASE_WT_MIN1", 
	"SQ_Shortcut_to_WM_RACK_TYPE___CASE_WT_MAX as CASE_WT_MAX1", 
	"SQ_Shortcut_to_WM_RACK_TYPE___CASE_CUBE_MIN as CASE_CUBE_MIN1", 
	"SQ_Shortcut_to_WM_RACK_TYPE___CASE_CUBE_MAX as CASE_CUBE_MAX1", 
	"SQ_Shortcut_to_WM_RACK_TYPE___CASE_INVEN_MIN as CASE_INVEN_MIN1", 
	"SQ_Shortcut_to_WM_RACK_TYPE___CASE_INVEN_MAX as CASE_INVEN_MAX1", 
	"SQ_Shortcut_to_WM_RACK_TYPE___CASE_MOVE_MIN as CASE_MOVE_MIN1", 
	"SQ_Shortcut_to_WM_RACK_TYPE___CASE_MOVE_MAX as CASE_MOVE_MAX1", 
	"SQ_Shortcut_to_WM_RACK_TYPE___CASE_HITS_MIN as CASE_HITS_MIN1", 
	"SQ_Shortcut_to_WM_RACK_TYPE___CASE_HITS_MAX as CASE_HITS_MAX1", 
	"SQ_Shortcut_to_WM_RACK_TYPE___INNER_HT_MIN as INNER_HT_MIN1", 
	"SQ_Shortcut_to_WM_RACK_TYPE___INNER_HT_MAX as INNER_HT_MAX1", 
	"SQ_Shortcut_to_WM_RACK_TYPE___INNER_LEN_MIN as INNER_LEN_MIN1", 
	"SQ_Shortcut_to_WM_RACK_TYPE___INNER_LEN_MAX as INNER_LEN_MAX1", 
	"SQ_Shortcut_to_WM_RACK_TYPE___INNER_WID_MIN as INNER_WID_MIN1", 
	"SQ_Shortcut_to_WM_RACK_TYPE___INNER_WID_MAX as INNER_WID_MAX1", 
	"SQ_Shortcut_to_WM_RACK_TYPE___INNER_WT_MIN as INNER_WT_MIN1", 
	"SQ_Shortcut_to_WM_RACK_TYPE___INNER_WT_MAX as INNER_WT_MAX1", 
	"SQ_Shortcut_to_WM_RACK_TYPE___INNER_CUBE_MIN as INNER_CUBE_MIN1", 
	"SQ_Shortcut_to_WM_RACK_TYPE___INNER_CUBE_MAX as INNER_CUBE_MAX1", 
	"SQ_Shortcut_to_WM_RACK_TYPE___EACH_HT_MIN as EACH_HT_MIN1", 
	"SQ_Shortcut_to_WM_RACK_TYPE___EACH_HT_MAX as EACH_HT_MAX1", 
	"SQ_Shortcut_to_WM_RACK_TYPE___EACH_LEN_MIN as EACH_LEN_MIN1", 
	"SQ_Shortcut_to_WM_RACK_TYPE___EACH_LEN_MAX as EACH_LEN_MAX1", 
	"SQ_Shortcut_to_WM_RACK_TYPE___EACH_WID_MIN as EACH_WID_MIN1", 
	"SQ_Shortcut_to_WM_RACK_TYPE___EACH_WID_MAX as EACH_WID_MAX1", 
	"SQ_Shortcut_to_WM_RACK_TYPE___EACH_WT_MIN as EACH_WT_MIN1", 
	"SQ_Shortcut_to_WM_RACK_TYPE___EACH_WT_MAX as EACH_WT_MAX1", 
	"SQ_Shortcut_to_WM_RACK_TYPE___EACH_CUBE_MIN as EACH_CUBE_MIN1", 
	"SQ_Shortcut_to_WM_RACK_TYPE___EACH_CUBE_MAX as in_EACH_CUBE_MAX", 
	"SQ_Shortcut_to_WM_RACK_TYPE___PALLET_INVEN_MIN as in_PALLET_INVEN_MIN", 
	"SQ_Shortcut_to_WM_RACK_TYPE___PALLET_INVEN_MAX as in_PALLET_INVEN_MAX", 
	"SQ_Shortcut_to_WM_RACK_TYPE___CUBE_MOVE_MIN as in_CUBE_MOVE_MIN", 
	"SQ_Shortcut_to_WM_RACK_TYPE___CUBE_MOVE_MAX as in_CUBE_MOVE_MAX", 
	"SQ_Shortcut_to_WM_RACK_TYPE___CUBE_HITS_MIN as in_CUBE_HITS_MIN", 
	"SQ_Shortcut_to_WM_RACK_TYPE___CUBE_HITS_MAX as in_CUBE_HITS_MAX", 
	"SQ_Shortcut_to_WM_RACK_TYPE___CUBE_INVEN_MIN as in_CUBE_INVEN_MIN", 
	"SQ_Shortcut_to_WM_RACK_TYPE___CUBE_INVEN_MAX as in_CUBE_INVEN_MAX", 
	"SQ_Shortcut_to_WM_RACK_TYPE___VISC_MIN as in_VISC_MIN", 
	"SQ_Shortcut_to_WM_RACK_TYPE___VISC_MAX as in_VISC_MAX", 
	"SQ_Shortcut_to_WM_RACK_TYPE___FILL_PERCENT_MIN as in_FILL_PERCENT_MIN", 
	"SQ_Shortcut_to_WM_RACK_TYPE___FILL_PERCENT_MAX as in_FILL_PERCENT_MAX", 
	"SQ_Shortcut_to_WM_RACK_TYPE___RESERVED_1 as in_RESERVED_1", 
	"SQ_Shortcut_to_WM_RACK_TYPE___RESERVED_2 as in_RESERVED_2", 
	"SQ_Shortcut_to_WM_RACK_TYPE___RESERVED_3 as in_RESERVED_3", 
	"SQ_Shortcut_to_WM_RACK_TYPE___RESERVED_4 as in_RESERVED_4", 
	"SQ_Shortcut_to_WM_RACK_TYPE___WM_MOD_USER as WM_MOD_USER", 
	"SQ_Shortcut_to_WM_RACK_TYPE___WM_CREATE_TSTMP as WM_CREATE_TSTMP", 
	"SQ_Shortcut_to_WM_RACK_TYPE___WM_MOD_TSTMP as WM_MOD_TSTMP", 
	"SQ_Shortcut_to_WM_RACK_TYPE___LOAD_TSTMP as in_LOAD_TSTMP", 
	"SQ_Shortcut_to_WM_RACK_TYPE___DELETE_FLAG as DELETE_FLAG")

# COMMAND ----------
# Processing node FIL_UNCHANGED_REC, type FILTER 
# COLUMN COUNT: 162

# for each involved DataFrame, append the dataframe name to each column
JNR_WM_RACK_TYPE_temp = JNR_WM_RACK_TYPE.toDF(*["JNR_WM_RACK_TYPE___" + col for col in JNR_WM_RACK_TYPE.columns])

FIL_UNCHANGED_REC = JNR_WM_RACK_TYPE_temp.selectExpr( 
	"JNR_WM_RACK_TYPE___RACK_TYPE as RACK_TYPE", 
	"JNR_WM_RACK_TYPE___WHSE_CODE as WHSE_CODE", 
	"JNR_WM_RACK_TYPE___RT_NAME as RT_NAME", 
	"JNR_WM_RACK_TYPE___RACK_TYPE_DESC as RACK_TYPE_DESC", 
	"JNR_WM_RACK_TYPE___SEQUENCE as SEQUENCE", 
	"JNR_WM_RACK_TYPE___REF_LEVEL_ID as REF_LEVEL_ID", 
	"JNR_WM_RACK_TYPE___RACK_CLASS as RACK_CLASS", 
	"JNR_WM_RACK_TYPE___FIX_LABELS as FIX_LABELS", 
	"JNR_WM_RACK_TYPE___LABEL_WID as LABEL_WID", 
	"JNR_WM_RACK_TYPE___OVERLAP_DIST as OVERLAP_DIST", 
	"JNR_WM_RACK_TYPE___MOVABLE_LABEL as MOVABLE_LABEL", 
	"JNR_WM_RACK_TYPE___HN_CONSIDER as HN_CONSIDER", 
	"JNR_WM_RACK_TYPE___UPRIGHT_THICKNESS as UPRIGHT_THICKNESS", 
	"JNR_WM_RACK_TYPE___FUNCTION_TYPE as FUNCTION_TYPE", 
	"JNR_WM_RACK_TYPE___OVERSTOCK_CONSIDER as OVERSTOCK_CONSIDER", 
	"JNR_WM_RACK_TYPE___USE_3D_SLOT as USE_3D_SLOT", 
	"JNR_WM_RACK_TYPE___WEEKS_IN_SLOT_CONSTRAINT as WEEKS_IN_SLOT_CONSTRAINT", 
	"JNR_WM_RACK_TYPE___NUM_OF_BAYS_AVAIL as NUM_OF_BAYS_AVAIL", 
	"JNR_WM_RACK_TYPE___WEEK_IN_SLOT as WEEK_IN_SLOT", 
	"JNR_WM_RACK_TYPE___PARENT_BT as PARENT_BT", 
	"JNR_WM_RACK_TYPE___WT_LIMIT as WT_LIMIT", 
	"JNR_WM_RACK_TYPE___HT as HT", 
	"JNR_WM_RACK_TYPE___WIDTH as WIDTH", 
	"JNR_WM_RACK_TYPE___DEPTH as DEPTH", 
	"JNR_WM_RACK_TYPE___CASE_HT_MIN as CASE_HT_MIN", 
	"JNR_WM_RACK_TYPE___CASE_HT_MAX as CASE_HT_MAX", 
	"JNR_WM_RACK_TYPE___CASE_LEN_MIN as CASE_LEN_MIN", 
	"JNR_WM_RACK_TYPE___CASE_LEN_MAX as CASE_LEN_MAX", 
	"JNR_WM_RACK_TYPE___CASE_WID_MIN as CASE_WID_MIN", 
	"JNR_WM_RACK_TYPE___CASE_WID_MAX as CASE_WID_MAX", 
	"JNR_WM_RACK_TYPE___CASE_WT_MIN as CASE_WT_MIN", 
	"JNR_WM_RACK_TYPE___CASE_WT_MAX as CASE_WT_MAX", 
	"JNR_WM_RACK_TYPE___CASE_CUBE_MIN as CASE_CUBE_MIN", 
	"JNR_WM_RACK_TYPE___CASE_CUBE_MAX as CASE_CUBE_MAX", 
	"JNR_WM_RACK_TYPE___CASE_INVEN_MIN as CASE_INVEN_MIN", 
	"JNR_WM_RACK_TYPE___CASE_INVEN_MAX as CASE_INVEN_MAX", 
	"JNR_WM_RACK_TYPE___CASE_MOVE_MIN as CASE_MOVE_MIN", 
	"JNR_WM_RACK_TYPE___CASE_MOVE_MAX as CASE_MOVE_MAX", 
	"JNR_WM_RACK_TYPE___CASE_HITS_MIN as CASE_HITS_MIN", 
	"JNR_WM_RACK_TYPE___CASE_HITS_MAX as CASE_HITS_MAX", 
	"JNR_WM_RACK_TYPE___INNER_HT_MIN as INNER_HT_MIN", 
	"JNR_WM_RACK_TYPE___INNER_HT_MAX as INNER_HT_MAX", 
	"JNR_WM_RACK_TYPE___INNER_LEN_MIN as INNER_LEN_MIN", 
	"JNR_WM_RACK_TYPE___INNER_LEN_MAX as INNER_LEN_MAX", 
	"JNR_WM_RACK_TYPE___INNER_WID_MIN as INNER_WID_MIN", 
	"JNR_WM_RACK_TYPE___INNER_WID_MAX as INNER_WID_MAX", 
	"JNR_WM_RACK_TYPE___INNER_WT_MIN as INNER_WT_MIN", 
	"JNR_WM_RACK_TYPE___INNER_WT_MAX as INNER_WT_MAX", 
	"JNR_WM_RACK_TYPE___INNER_CUBE_MIN as INNER_CUBE_MIN", 
	"JNR_WM_RACK_TYPE___INNER_CUBE_MAX as INNER_CUBE_MAX", 
	"JNR_WM_RACK_TYPE___EACH_HT_MIN as EACH_HT_MIN", 
	"JNR_WM_RACK_TYPE___EACH_HT_MAX as EACH_HT_MAX", 
	"JNR_WM_RACK_TYPE___EACH_LEN_MIN as EACH_LEN_MIN", 
	"JNR_WM_RACK_TYPE___EACH_LEN_MAX as EACH_LEN_MAX", 
	"JNR_WM_RACK_TYPE___EACH_WID_MAX as EACH_WID_MAX", 
	"JNR_WM_RACK_TYPE___EACH_WT_MIN as EACH_WT_MIN", 
	"JNR_WM_RACK_TYPE___EACH_WT_MAX as EACH_WT_MAX", 
	"JNR_WM_RACK_TYPE___EACH_CUBE_MIN as EACH_CUBE_MIN", 
	"JNR_WM_RACK_TYPE___EACH_CUBE_MAX as EACH_CUBE_MAX", 
	"JNR_WM_RACK_TYPE___PALLET_INVEN_MIN as PALLET_INVEN_MIN", 
	"JNR_WM_RACK_TYPE___PALLET_INVEN_MAX as PALLET_INVEN_MAX", 
	"JNR_WM_RACK_TYPE___EACH_WID_MIN as EACH_WID_MIN", 
	"JNR_WM_RACK_TYPE___CUBE_MOVE_MIN as CUBE_MOVE_MIN", 
	"JNR_WM_RACK_TYPE___CUBE_MOVE_MAX as CUBE_MOVE_MAX", 
	"JNR_WM_RACK_TYPE___CUBE_INVEN_MIN as CUBE_INVEN_MIN", 
	"JNR_WM_RACK_TYPE___CUBE_INVEN_MAX as CUBE_INVEN_MAX", 
	"JNR_WM_RACK_TYPE___CUBE_HITS_MIN as CUBE_HITS_MIN", 
	"JNR_WM_RACK_TYPE___CUBE_HITS_MAX as CUBE_HITS_MAX", 
	"JNR_WM_RACK_TYPE___VISC_MIN as VISC_MIN", 
	"JNR_WM_RACK_TYPE___VISC_MAX as VISC_MAX", 
	"JNR_WM_RACK_TYPE___FILL_PERCENT_MIN as FILL_PERCENT_MIN", 
	"JNR_WM_RACK_TYPE___FILL_PERCENT_MAX as FILL_PERCENT_MAX", 
	"JNR_WM_RACK_TYPE___RESERVED_1 as RESERVED_1", 
	"JNR_WM_RACK_TYPE___RESERVED_2 as RESERVED_2", 
	"JNR_WM_RACK_TYPE___RESERVED_3 as RESERVED_3", 
	"JNR_WM_RACK_TYPE___RESERVED_4 as RESERVED_4", 
	"JNR_WM_RACK_TYPE___CREATE_DATE_TIME as CREATE_DATE_TIME", 
	"JNR_WM_RACK_TYPE___MOD_DATE_TIME as MOD_DATE_TIME", 
	"JNR_WM_RACK_TYPE___MOD_USER as MOD_USER", 
	"JNR_WM_RACK_TYPE___LOCATION_ID as LOCATION_ID", 
	"JNR_WM_RACK_TYPE___in_LOCATION_ID as in_LOCATION_ID", 
	"JNR_WM_RACK_TYPE___WM_RACK_TYPE_ID as WM_RACK_TYPE_ID", 
	"JNR_WM_RACK_TYPE___WM_WHSE_CD as WM_WHSE_CD", 
	"JNR_WM_RACK_TYPE___WM_RACK_TYPE_NAME as WM_RACK_TYPE_NAME", 
	"JNR_WM_RACK_TYPE___WM_RACK_TYPE_DESC as WM_RACK_TYPE_DESC", 
	"JNR_WM_RACK_TYPE___SEQ_NBR as SEQ_NBR", 
	"JNR_WM_RACK_TYPE___WM_REF_LEVEL_ID as WM_REF_LEVEL_ID", 
	"JNR_WM_RACK_TYPE___in_RACK_CLASS as in_RACK_CLASS", 
	"JNR_WM_RACK_TYPE___in_FIX_LABELS as in_FIX_LABELS", 
	"JNR_WM_RACK_TYPE___in_MOVABLE_LABEL as in_MOVABLE_LABEL", 
	"JNR_WM_RACK_TYPE___in_LABEL_WID as in_LABEL_WID", 
	"JNR_WM_RACK_TYPE___in_OVERLAP_DIST as in_OVERLAP_DIST", 
	"JNR_WM_RACK_TYPE___in_HN_CONSIDER as in_HN_CONSIDER", 
	"JNR_WM_RACK_TYPE___in_UPRIGHT_THICKNESS as in_UPRIGHT_THICKNESS", 
	"JNR_WM_RACK_TYPE___in_FUNCTION_TYPE as in_FUNCTION_TYPE", 
	"JNR_WM_RACK_TYPE___in_OVERSTOCK_CONSIDER as in_OVERSTOCK_CONSIDER", 
	"JNR_WM_RACK_TYPE___in_USE_3D_SLOT as in_USE_3D_SLOT", 
	"JNR_WM_RACK_TYPE___in_WEEKS_IN_SLOT_CONSTRAINT as in_WEEKS_IN_SLOT_CONSTRAINT", 
	"JNR_WM_RACK_TYPE___in_NUM_OF_BAYS_AVAIL as in_NUM_OF_BAYS_AVAIL", 
	"JNR_WM_RACK_TYPE___in_WEEK_IN_SLOT as in_WEEK_IN_SLOT", 
	"JNR_WM_RACK_TYPE___in_PARENT_BT as in_PARENT_BT", 
	"JNR_WM_RACK_TYPE___in_WT_LIMIT as in_WT_LIMIT", 
	"JNR_WM_RACK_TYPE___in_HT as in_HT", 
	"JNR_WM_RACK_TYPE___in_WIDTH as in_WIDTH", 
	"JNR_WM_RACK_TYPE___in_DEPTH as in_DEPTH", 
	"JNR_WM_RACK_TYPE___in_CASE_HT_MIN as in_CASE_HT_MIN", 
	"JNR_WM_RACK_TYPE___in_CASE_HT_MAX as in_CASE_HT_MAX", 
	"JNR_WM_RACK_TYPE___CASE_LEN_MIN1 as CASE_LEN_MIN1", 
	"JNR_WM_RACK_TYPE___CASE_LEN_MAX1 as CASE_LEN_MAX1", 
	"JNR_WM_RACK_TYPE___CASE_WID_MIN1 as CASE_WID_MIN1", 
	"JNR_WM_RACK_TYPE___CASE_WID_MAX1 as CASE_WID_MAX1", 
	"JNR_WM_RACK_TYPE___CASE_WT_MIN1 as CASE_WT_MIN1", 
	"JNR_WM_RACK_TYPE___CASE_WT_MAX1 as CASE_WT_MAX1", 
	"JNR_WM_RACK_TYPE___CASE_CUBE_MIN1 as CASE_CUBE_MIN1", 
	"JNR_WM_RACK_TYPE___CASE_CUBE_MAX1 as CASE_CUBE_MAX1", 
	"JNR_WM_RACK_TYPE___CASE_INVEN_MIN1 as CASE_INVEN_MIN1", 
	"JNR_WM_RACK_TYPE___CASE_INVEN_MAX1 as CASE_INVEN_MAX1", 
	"JNR_WM_RACK_TYPE___CASE_MOVE_MIN1 as CASE_MOVE_MIN1", 
	"JNR_WM_RACK_TYPE___CASE_MOVE_MAX1 as CASE_MOVE_MAX1", 
	"JNR_WM_RACK_TYPE___CASE_HITS_MIN1 as CASE_HITS_MIN1", 
	"JNR_WM_RACK_TYPE___CASE_HITS_MAX1 as CASE_HITS_MAX1", 
	"JNR_WM_RACK_TYPE___INNER_HT_MIN1 as INNER_HT_MIN1", 
	"JNR_WM_RACK_TYPE___INNER_HT_MAX1 as INNER_HT_MAX1", 
	"JNR_WM_RACK_TYPE___INNER_LEN_MIN1 as INNER_LEN_MIN1", 
	"JNR_WM_RACK_TYPE___INNER_LEN_MAX1 as INNER_LEN_MAX1", 
	"JNR_WM_RACK_TYPE___INNER_WID_MIN1 as INNER_WID_MIN1", 
	"JNR_WM_RACK_TYPE___INNER_WID_MAX1 as INNER_WID_MAX1", 
	"JNR_WM_RACK_TYPE___INNER_WT_MIN1 as INNER_WT_MIN1", 
	"JNR_WM_RACK_TYPE___INNER_WT_MAX1 as INNER_WT_MAX1", 
	"JNR_WM_RACK_TYPE___INNER_CUBE_MIN1 as INNER_CUBE_MIN1", 
	"JNR_WM_RACK_TYPE___INNER_CUBE_MAX1 as INNER_CUBE_MAX1", 
	"JNR_WM_RACK_TYPE___EACH_HT_MIN1 as EACH_HT_MIN1", 
	"JNR_WM_RACK_TYPE___EACH_HT_MAX1 as EACH_HT_MAX1", 
	"JNR_WM_RACK_TYPE___EACH_LEN_MIN1 as EACH_LEN_MIN1", 
	"JNR_WM_RACK_TYPE___EACH_LEN_MAX1 as EACH_LEN_MAX1", 
	"JNR_WM_RACK_TYPE___EACH_WID_MIN1 as EACH_WID_MIN1", 
	"JNR_WM_RACK_TYPE___EACH_WID_MAX1 as EACH_WID_MAX1", 
	"JNR_WM_RACK_TYPE___EACH_WT_MIN1 as EACH_WT_MIN1", 
	"JNR_WM_RACK_TYPE___EACH_WT_MAX1 as EACH_WT_MAX1", 
	"JNR_WM_RACK_TYPE___EACH_CUBE_MIN1 as EACH_CUBE_MIN1", 
	"JNR_WM_RACK_TYPE___in_EACH_CUBE_MAX as in_EACH_CUBE_MAX", 
	"JNR_WM_RACK_TYPE___in_PALLET_INVEN_MIN as in_PALLET_INVEN_MIN", 
	"JNR_WM_RACK_TYPE___in_PALLET_INVEN_MAX as in_PALLET_INVEN_MAX", 
	"JNR_WM_RACK_TYPE___in_CUBE_MOVE_MIN as in_CUBE_MOVE_MIN", 
	"JNR_WM_RACK_TYPE___in_CUBE_MOVE_MAX as in_CUBE_MOVE_MAX", 
	"JNR_WM_RACK_TYPE___in_CUBE_HITS_MIN as in_CUBE_HITS_MIN", 
	"JNR_WM_RACK_TYPE___in_CUBE_HITS_MAX as in_CUBE_HITS_MAX", 
	"JNR_WM_RACK_TYPE___in_CUBE_INVEN_MIN as in_CUBE_INVEN_MIN", 
	"JNR_WM_RACK_TYPE___in_CUBE_INVEN_MAX as in_CUBE_INVEN_MAX", 
	"JNR_WM_RACK_TYPE___in_VISC_MIN as in_VISC_MIN", 
	"JNR_WM_RACK_TYPE___in_VISC_MAX as in_VISC_MAX", 
	"JNR_WM_RACK_TYPE___in_FILL_PERCENT_MIN as in_FILL_PERCENT_MIN", 
	"JNR_WM_RACK_TYPE___in_FILL_PERCENT_MAX as in_FILL_PERCENT_MAX", 
	"JNR_WM_RACK_TYPE___in_RESERVED_1 as in_RESERVED_1", 
	"JNR_WM_RACK_TYPE___in_RESERVED_2 as in_RESERVED_2", 
	"JNR_WM_RACK_TYPE___in_RESERVED_3 as in_RESERVED_3", 
	"JNR_WM_RACK_TYPE___in_RESERVED_4 as in_RESERVED_4", 
	"JNR_WM_RACK_TYPE___WM_MOD_USER as WM_MOD_USER", 
	"JNR_WM_RACK_TYPE___WM_CREATE_TSTMP as WM_CREATE_TSTMP", 
	"JNR_WM_RACK_TYPE___WM_MOD_TSTMP as WM_MOD_TSTMP", 
	"JNR_WM_RACK_TYPE___in_LOAD_TSTMP as in_LOAD_TSTMP", 
	"JNR_WM_RACK_TYPE___DELETE_FLAG as DELETE_FLAG").filter(expr("RACK_TYPE IS NULL OR WM_RACK_TYPE_ID IS NULL OR (NOT WM_RACK_TYPE_ID IS NULL AND (COALESCE(CREATE_DATE_TIME, date'1900-01-01') != COALESCE(WM_CREATE_TSTMP, date'1900-01-01')) OR (COALESCE(MOD_DATE_TIME, date'1900-01-01') != COALESCE(WM_MOD_TSTMP, date'1900-01-01')))")).withColumn("sys_row_id", monotonically_increasing_id())

# COMMAND ----------
# Processing node EXP_UPD_INS, type EXPRESSION 
# COLUMN COUNT: 165

# for each involved DataFrame, append the dataframe name to each column
FIL_UNCHANGED_REC_temp = FIL_UNCHANGED_REC.toDF(*["FIL_UNCHANGED_REC___" + col for col in FIL_UNCHANGED_REC.columns]) \
    .withColumn("FIL_UNCHANGED_REC___v_CREATE_DATE_TIME", expr("""IF(FIL_UNCHANGED_REC___CREATE_DATE_TIME IS NULL, date'1900-01-01', FIL_UNCHANGED_REC___CREATE_DATE_TIME)""")) \
	.withColumn("FIL_UNCHANGED_REC___v_MOD_DATE_TIME", expr("""IF(FIL_UNCHANGED_REC___MOD_DATE_TIME IS NULL, date'1900-01-01', FIL_UNCHANGED_REC___MOD_DATE_TIME)""")) \
	.withColumn("FIL_UNCHANGED_REC___v_WM_CREATE_TSTMP", expr("""IF(FIL_UNCHANGED_REC___WM_CREATE_TSTMP IS NULL, date'1900-01-01', FIL_UNCHANGED_REC___WM_CREATE_TSTMP)""")) \
	.withColumn("FIL_UNCHANGED_REC___v_WM_MOD_TSTMP", expr("""IF(FIL_UNCHANGED_REC___WM_MOD_TSTMP IS NULL, date'1900-01-01', FIL_UNCHANGED_REC___WM_MOD_TSTMP)"""))
    
EXP_UPD_INS = FIL_UNCHANGED_REC_temp.selectExpr( 
	"FIL_UNCHANGED_REC___sys_row_id as sys_row_id", 
	"FIL_UNCHANGED_REC___RACK_TYPE as RACK_TYPE", 
	"FIL_UNCHANGED_REC___WHSE_CODE as WHSE_CODE", 
	"FIL_UNCHANGED_REC___RT_NAME as RT_NAME", 
	"FIL_UNCHANGED_REC___RACK_TYPE_DESC as RACK_TYPE_DESC", 
	"FIL_UNCHANGED_REC___SEQUENCE as SEQUENCE", 
	"FIL_UNCHANGED_REC___REF_LEVEL_ID as REF_LEVEL_ID", 
	"FIL_UNCHANGED_REC___RACK_CLASS as RACK_CLASS", 
	"FIL_UNCHANGED_REC___FIX_LABELS as FIX_LABELS", 
	"FIL_UNCHANGED_REC___LABEL_WID as LABEL_WID", 
	"FIL_UNCHANGED_REC___OVERLAP_DIST as OVERLAP_DIST", 
	"FIL_UNCHANGED_REC___MOVABLE_LABEL as MOVABLE_LABEL", 
	"FIL_UNCHANGED_REC___HN_CONSIDER as HN_CONSIDER", 
	"FIL_UNCHANGED_REC___UPRIGHT_THICKNESS as UPRIGHT_THICKNESS", 
	"FIL_UNCHANGED_REC___FUNCTION_TYPE as FUNCTION_TYPE", 
	"FIL_UNCHANGED_REC___OVERSTOCK_CONSIDER as OVERSTOCK_CONSIDER", 
	"FIL_UNCHANGED_REC___USE_3D_SLOT as USE_3D_SLOT", 
	"FIL_UNCHANGED_REC___WEEKS_IN_SLOT_CONSTRAINT as WEEKS_IN_SLOT_CONSTRAINT", 
	"FIL_UNCHANGED_REC___NUM_OF_BAYS_AVAIL as NUM_OF_BAYS_AVAIL", 
	"FIL_UNCHANGED_REC___WEEK_IN_SLOT as WEEK_IN_SLOT", 
	"FIL_UNCHANGED_REC___PARENT_BT as PARENT_BT", 
	"FIL_UNCHANGED_REC___WT_LIMIT as WT_LIMIT", 
	"FIL_UNCHANGED_REC___HT as HT", 
	"FIL_UNCHANGED_REC___WIDTH as WIDTH", 
	"FIL_UNCHANGED_REC___DEPTH as DEPTH", 
	"FIL_UNCHANGED_REC___CASE_HT_MIN as CASE_HT_MIN", 
	"FIL_UNCHANGED_REC___CASE_HT_MAX as CASE_HT_MAX", 
	"FIL_UNCHANGED_REC___CASE_LEN_MIN as CASE_LEN_MIN", 
	"FIL_UNCHANGED_REC___CASE_LEN_MAX as CASE_LEN_MAX", 
	"FIL_UNCHANGED_REC___CASE_WID_MIN as CASE_WID_MIN", 
	"FIL_UNCHANGED_REC___CASE_WID_MAX as CASE_WID_MAX", 
	"FIL_UNCHANGED_REC___CASE_WT_MIN as CASE_WT_MIN", 
	"FIL_UNCHANGED_REC___CASE_WT_MAX as CASE_WT_MAX", 
	"FIL_UNCHANGED_REC___CASE_CUBE_MIN as CASE_CUBE_MIN", 
	"FIL_UNCHANGED_REC___CASE_CUBE_MAX as CASE_CUBE_MAX", 
	"FIL_UNCHANGED_REC___CASE_INVEN_MIN as CASE_INVEN_MIN", 
	"FIL_UNCHANGED_REC___CASE_INVEN_MAX as CASE_INVEN_MAX", 
	"FIL_UNCHANGED_REC___CASE_MOVE_MIN as CASE_MOVE_MIN", 
	"FIL_UNCHANGED_REC___CASE_MOVE_MAX as CASE_MOVE_MAX", 
	"FIL_UNCHANGED_REC___CASE_HITS_MIN as CASE_HITS_MIN", 
	"FIL_UNCHANGED_REC___CASE_HITS_MAX as CASE_HITS_MAX", 
	"FIL_UNCHANGED_REC___INNER_HT_MIN as INNER_HT_MIN", 
	"FIL_UNCHANGED_REC___INNER_HT_MAX as INNER_HT_MAX", 
	"FIL_UNCHANGED_REC___INNER_LEN_MIN as INNER_LEN_MIN", 
	"FIL_UNCHANGED_REC___INNER_LEN_MAX as INNER_LEN_MAX", 
	"FIL_UNCHANGED_REC___INNER_WID_MIN as INNER_WID_MIN", 
	"FIL_UNCHANGED_REC___INNER_WID_MAX as INNER_WID_MAX", 
	"FIL_UNCHANGED_REC___INNER_WT_MIN as INNER_WT_MIN", 
	"FIL_UNCHANGED_REC___INNER_WT_MAX as INNER_WT_MAX", 
	"FIL_UNCHANGED_REC___INNER_CUBE_MIN as INNER_CUBE_MIN", 
	"FIL_UNCHANGED_REC___INNER_CUBE_MAX as INNER_CUBE_MAX", 
	"FIL_UNCHANGED_REC___EACH_HT_MIN as EACH_HT_MIN", 
	"FIL_UNCHANGED_REC___EACH_HT_MAX as EACH_HT_MAX", 
	"FIL_UNCHANGED_REC___EACH_LEN_MIN as EACH_LEN_MIN", 
	"FIL_UNCHANGED_REC___EACH_LEN_MAX as EACH_LEN_MAX", 
	"FIL_UNCHANGED_REC___EACH_WID_MAX as EACH_WID_MAX", 
	"FIL_UNCHANGED_REC___EACH_WT_MIN as EACH_WT_MIN", 
	"FIL_UNCHANGED_REC___EACH_WT_MAX as EACH_WT_MAX", 
	"FIL_UNCHANGED_REC___EACH_CUBE_MIN as EACH_CUBE_MIN", 
	"FIL_UNCHANGED_REC___EACH_CUBE_MAX as EACH_CUBE_MAX", 
	"FIL_UNCHANGED_REC___PALLET_INVEN_MIN as PALLET_INVEN_MIN", 
	"FIL_UNCHANGED_REC___PALLET_INVEN_MAX as PALLET_INVEN_MAX", 
	"FIL_UNCHANGED_REC___EACH_WID_MIN as EACH_WID_MIN", 
	"FIL_UNCHANGED_REC___CUBE_MOVE_MIN as CUBE_MOVE_MIN", 
	"FIL_UNCHANGED_REC___CUBE_MOVE_MAX as CUBE_MOVE_MAX", 
	"FIL_UNCHANGED_REC___CUBE_INVEN_MIN as CUBE_INVEN_MIN", 
	"FIL_UNCHANGED_REC___CUBE_INVEN_MAX as CUBE_INVEN_MAX", 
	"FIL_UNCHANGED_REC___CUBE_HITS_MIN as CUBE_HITS_MIN", 
	"FIL_UNCHANGED_REC___CUBE_HITS_MAX as CUBE_HITS_MAX", 
	"FIL_UNCHANGED_REC___VISC_MIN as VISC_MIN", 
	"FIL_UNCHANGED_REC___VISC_MAX as VISC_MAX", 
	"FIL_UNCHANGED_REC___FILL_PERCENT_MIN as FILL_PERCENT_MIN", 
	"FIL_UNCHANGED_REC___FILL_PERCENT_MAX as FILL_PERCENT_MAX", 
	"FIL_UNCHANGED_REC___RESERVED_1 as RESERVED_1", 
	"FIL_UNCHANGED_REC___RESERVED_2 as RESERVED_2", 
	"FIL_UNCHANGED_REC___RESERVED_3 as RESERVED_3", 
	"FIL_UNCHANGED_REC___RESERVED_4 as RESERVED_4", 
	"FIL_UNCHANGED_REC___CREATE_DATE_TIME as CREATE_DATE_TIME", 
	"FIL_UNCHANGED_REC___MOD_DATE_TIME as MOD_DATE_TIME", 
	"FIL_UNCHANGED_REC___MOD_USER as MOD_USER", 
	"FIL_UNCHANGED_REC___LOCATION_ID as LOCATION_ID", 
	"FIL_UNCHANGED_REC___in_LOCATION_ID as in_LOCATION_ID", 
	"FIL_UNCHANGED_REC___WM_RACK_TYPE_ID as WM_RACK_TYPE_ID", 
	"FIL_UNCHANGED_REC___WM_WHSE_CD as WM_WHSE_CD", 
	"FIL_UNCHANGED_REC___WM_RACK_TYPE_NAME as WM_RACK_TYPE_NAME", 
	"FIL_UNCHANGED_REC___WM_RACK_TYPE_DESC as WM_RACK_TYPE_DESC", 
	"FIL_UNCHANGED_REC___SEQ_NBR as SEQ_NBR", 
	"FIL_UNCHANGED_REC___WM_REF_LEVEL_ID as WM_REF_LEVEL_ID", 
	"FIL_UNCHANGED_REC___in_RACK_CLASS as in_RACK_CLASS", 
	"FIL_UNCHANGED_REC___in_FIX_LABELS as in_FIX_LABELS", 
	"FIL_UNCHANGED_REC___in_MOVABLE_LABEL as in_MOVABLE_LABEL", 
	"FIL_UNCHANGED_REC___in_LABEL_WID as in_LABEL_WID", 
	"FIL_UNCHANGED_REC___in_OVERLAP_DIST as in_OVERLAP_DIST", 
	"FIL_UNCHANGED_REC___in_HN_CONSIDER as in_HN_CONSIDER", 
	"FIL_UNCHANGED_REC___in_UPRIGHT_THICKNESS as in_UPRIGHT_THICKNESS", 
	"FIL_UNCHANGED_REC___in_FUNCTION_TYPE as in_FUNCTION_TYPE", 
	"FIL_UNCHANGED_REC___in_OVERSTOCK_CONSIDER as in_OVERSTOCK_CONSIDER", 
	"FIL_UNCHANGED_REC___in_USE_3D_SLOT as in_USE_3D_SLOT", 
	"FIL_UNCHANGED_REC___in_WEEKS_IN_SLOT_CONSTRAINT as in_WEEKS_IN_SLOT_CONSTRAINT", 
	"FIL_UNCHANGED_REC___in_NUM_OF_BAYS_AVAIL as in_NUM_OF_BAYS_AVAIL", 
	"FIL_UNCHANGED_REC___in_WEEK_IN_SLOT as in_WEEK_IN_SLOT", 
	"FIL_UNCHANGED_REC___in_PARENT_BT as in_PARENT_BT", 
	"FIL_UNCHANGED_REC___in_WT_LIMIT as in_WT_LIMIT", 
	"FIL_UNCHANGED_REC___in_HT as in_HT", 
	"FIL_UNCHANGED_REC___in_WIDTH as in_WIDTH", 
	"FIL_UNCHANGED_REC___in_DEPTH as in_DEPTH", 
	"FIL_UNCHANGED_REC___in_CASE_HT_MIN as in_CASE_HT_MIN", 
	"FIL_UNCHANGED_REC___in_CASE_HT_MAX as in_CASE_HT_MAX", 
	"FIL_UNCHANGED_REC___CASE_LEN_MIN1 as CASE_LEN_MIN1", 
	"FIL_UNCHANGED_REC___CASE_LEN_MAX1 as CASE_LEN_MAX1", 
	"FIL_UNCHANGED_REC___CASE_WID_MIN1 as CASE_WID_MIN1", 
	"FIL_UNCHANGED_REC___CASE_WID_MAX1 as CASE_WID_MAX1", 
	"FIL_UNCHANGED_REC___CASE_WT_MIN1 as CASE_WT_MIN1", 
	"FIL_UNCHANGED_REC___CASE_WT_MAX1 as CASE_WT_MAX1", 
	"FIL_UNCHANGED_REC___CASE_CUBE_MIN1 as CASE_CUBE_MIN1", 
	"FIL_UNCHANGED_REC___CASE_CUBE_MAX1 as CASE_CUBE_MAX1", 
	"FIL_UNCHANGED_REC___CASE_INVEN_MIN1 as CASE_INVEN_MIN1", 
	"FIL_UNCHANGED_REC___CASE_INVEN_MAX1 as CASE_INVEN_MAX1", 
	"FIL_UNCHANGED_REC___CASE_MOVE_MIN1 as CASE_MOVE_MIN1", 
	"FIL_UNCHANGED_REC___CASE_MOVE_MAX1 as CASE_MOVE_MAX1", 
	"FIL_UNCHANGED_REC___CASE_HITS_MIN1 as CASE_HITS_MIN1", 
	"FIL_UNCHANGED_REC___CASE_HITS_MAX1 as CASE_HITS_MAX1", 
	"FIL_UNCHANGED_REC___INNER_HT_MIN1 as INNER_HT_MIN1", 
	"FIL_UNCHANGED_REC___INNER_HT_MAX1 as INNER_HT_MAX1", 
	"FIL_UNCHANGED_REC___INNER_LEN_MIN1 as INNER_LEN_MIN1", 
	"FIL_UNCHANGED_REC___INNER_LEN_MAX1 as INNER_LEN_MAX1", 
	"FIL_UNCHANGED_REC___INNER_WID_MIN1 as INNER_WID_MIN1", 
	"FIL_UNCHANGED_REC___INNER_WID_MAX1 as INNER_WID_MAX1", 
	"FIL_UNCHANGED_REC___INNER_WT_MIN1 as INNER_WT_MIN1", 
	"FIL_UNCHANGED_REC___INNER_WT_MAX1 as INNER_WT_MAX1", 
	"FIL_UNCHANGED_REC___INNER_CUBE_MIN1 as INNER_CUBE_MIN1", 
	"FIL_UNCHANGED_REC___INNER_CUBE_MAX1 as INNER_CUBE_MAX1", 
	"FIL_UNCHANGED_REC___EACH_HT_MIN1 as EACH_HT_MIN1", 
	"FIL_UNCHANGED_REC___EACH_HT_MAX1 as EACH_HT_MAX1", 
	"FIL_UNCHANGED_REC___EACH_LEN_MIN1 as EACH_LEN_MIN1", 
	"FIL_UNCHANGED_REC___EACH_LEN_MAX1 as EACH_LEN_MAX1", 
	"FIL_UNCHANGED_REC___EACH_WID_MIN1 as EACH_WID_MIN1", 
	"FIL_UNCHANGED_REC___EACH_WID_MAX1 as EACH_WID_MAX1", 
	"FIL_UNCHANGED_REC___EACH_WT_MIN1 as EACH_WT_MIN1", 
	"FIL_UNCHANGED_REC___EACH_WT_MAX1 as EACH_WT_MAX1", 
	"FIL_UNCHANGED_REC___EACH_CUBE_MIN1 as EACH_CUBE_MIN1", 
	"FIL_UNCHANGED_REC___in_EACH_CUBE_MAX as in_EACH_CUBE_MAX", 
	"FIL_UNCHANGED_REC___in_PALLET_INVEN_MIN as in_PALLET_INVEN_MIN", 
	"FIL_UNCHANGED_REC___in_PALLET_INVEN_MAX as in_PALLET_INVEN_MAX", 
	"FIL_UNCHANGED_REC___in_CUBE_MOVE_MIN as in_CUBE_MOVE_MIN", 
	"FIL_UNCHANGED_REC___in_CUBE_MOVE_MAX as in_CUBE_MOVE_MAX", 
	"FIL_UNCHANGED_REC___in_CUBE_HITS_MIN as in_CUBE_HITS_MIN", 
	"FIL_UNCHANGED_REC___in_CUBE_HITS_MAX as in_CUBE_HITS_MAX", 
	"FIL_UNCHANGED_REC___in_CUBE_INVEN_MIN as in_CUBE_INVEN_MIN", 
	"FIL_UNCHANGED_REC___in_CUBE_INVEN_MAX as in_CUBE_INVEN_MAX", 
	"FIL_UNCHANGED_REC___in_VISC_MIN as in_VISC_MIN", 
	"FIL_UNCHANGED_REC___in_VISC_MAX as in_VISC_MAX", 
	"FIL_UNCHANGED_REC___in_FILL_PERCENT_MIN as in_FILL_PERCENT_MIN", 
	"FIL_UNCHANGED_REC___in_FILL_PERCENT_MAX as in_FILL_PERCENT_MAX", 
	"FIL_UNCHANGED_REC___in_RESERVED_1 as in_RESERVED_1", 
	"FIL_UNCHANGED_REC___in_RESERVED_2 as in_RESERVED_2", 
	"FIL_UNCHANGED_REC___in_RESERVED_3 as in_RESERVED_3", 
	"FIL_UNCHANGED_REC___in_RESERVED_4 as in_RESERVED_4", 
	"FIL_UNCHANGED_REC___WM_MOD_USER as WM_MOD_USER", 
	"FIL_UNCHANGED_REC___WM_CREATE_TSTMP as WM_CREATE_TSTMP", 
	"FIL_UNCHANGED_REC___WM_MOD_TSTMP as WM_MOD_TSTMP", 
	"FIL_UNCHANGED_REC___DELETE_FLAG as DELETE_FLAG", 
	"CURRENT_TIMESTAMP() as UPDATE_TSTMP", 
	"IF(FIL_UNCHANGED_REC___in_LOAD_TSTMP IS NULL, CURRENT_TIMESTAMP(), FIL_UNCHANGED_REC___in_LOAD_TSTMP) as LOAD_TSTMP_exp", 
	"IF(FIL_UNCHANGED_REC___RACK_TYPE IS NULL AND FIL_UNCHANGED_REC___WM_RACK_TYPE_ID IS NOT NULL, 1, 0) as DELETE_FLAG_exp", 
	f"IF(FIL_UNCHANGED_REC___RACK_TYPE IS NOT NULL AND FIL_UNCHANGED_REC___WM_RACK_TYPE_ID IS NULL, 'INSERT', IF(FIL_UNCHANGED_REC___RACK_TYPE IS NULL AND FIL_UNCHANGED_REC___WM_RACK_TYPE_ID IS NOT NULL AND ( FIL_UNCHANGED_REC___v_WM_CREATE_TSTMP >= DATE_ADD('{Prev_Run_Dt}',-14) OR FIL_UNCHANGED_REC___v_WM_MOD_TSTMP >= DATE_ADD('{Prev_Run_Dt}',-14) ), 'DELETE', IF(FIL_UNCHANGED_REC___RACK_TYPE IS NOT NULL AND FIL_UNCHANGED_REC___WM_RACK_TYPE_ID IS NOT NULL AND ( FIL_UNCHANGED_REC___v_WM_CREATE_TSTMP <> FIL_UNCHANGED_REC___v_CREATE_DATE_TIME OR FIL_UNCHANGED_REC___v_WM_MOD_TSTMP <> FIL_UNCHANGED_REC___v_MOD_DATE_TIME ), 'UPDATE', NULL))) as o_UPD_VALIDATOR" 
)

# COMMAND ----------
# Processing node RTR_UPSERT_DELETE, type ROUTER . Note: using additional SELECT to rename incoming columns
# COLUMN COUNT: 166


# Creating output dataframe for RTR_UPSERT_DELETE, output group INSERT_UPDATE
RTR_UPSERT_DELETE_INSERT_UPDATE = EXP_UPD_INS.selectExpr( 
	"RACK_TYPE as RACK_TYPE", 
	"WHSE_CODE as WHSE_CODE", 
	"RT_NAME as RT_NAME", 
	"RACK_TYPE_DESC as RACK_TYPE_DESC", 
	"SEQUENCE as SEQUENCE", 
	"REF_LEVEL_ID as REF_LEVEL_ID", 
	"RACK_CLASS as RACK_CLASS", 
	"FIX_LABELS as FIX_LABELS", 
	"LABEL_WID as LABEL_WID", 
	"OVERLAP_DIST as OVERLAP_DIST", 
	"MOVABLE_LABEL as MOVABLE_LABEL", 
	"HN_CONSIDER as HN_CONSIDER", 
	"UPRIGHT_THICKNESS as UPRIGHT_THICKNESS", 
	"FUNCTION_TYPE as FUNCTION_TYPE", 
	"OVERSTOCK_CONSIDER as OVERSTOCK_CONSIDER", 
	"USE_3D_SLOT as USE_3D_SLOT", 
	"WEEKS_IN_SLOT_CONSTRAINT as WEEKS_IN_SLOT_CONSTRAINT", 
	"NUM_OF_BAYS_AVAIL as NUM_OF_BAYS_AVAIL", 
	"WEEK_IN_SLOT as WEEK_IN_SLOT", 
	"PARENT_BT as PARENT_BT", 
	"WT_LIMIT as WT_LIMIT", 
	"HT as HT", 
	"WIDTH as WIDTH", 
	"DEPTH as DEPTH", 
	"CASE_HT_MIN as CASE_HT_MIN", 
	"CASE_HT_MAX as CASE_HT_MAX", 
	"CASE_LEN_MIN as CASE_LEN_MIN", 
	"CASE_LEN_MAX as CASE_LEN_MAX", 
	"CASE_WID_MIN as CASE_WID_MIN", 
	"CASE_WID_MAX as CASE_WID_MAX", 
	"CASE_WT_MIN as CASE_WT_MIN", 
	"CASE_WT_MAX as CASE_WT_MAX", 
	"CASE_CUBE_MIN as CASE_CUBE_MIN", 
	"CASE_CUBE_MAX as CASE_CUBE_MAX", 
	"CASE_INVEN_MIN as CASE_INVEN_MIN", 
	"CASE_INVEN_MAX as CASE_INVEN_MAX", 
	"CASE_MOVE_MIN as CASE_MOVE_MIN", 
	"CASE_MOVE_MAX as CASE_MOVE_MAX", 
	"CASE_HITS_MIN as CASE_HITS_MIN", 
	"CASE_HITS_MAX as CASE_HITS_MAX", 
	"INNER_HT_MIN as INNER_HT_MIN", 
	"INNER_HT_MAX as INNER_HT_MAX", 
	"INNER_LEN_MIN as INNER_LEN_MIN", 
	"INNER_LEN_MAX as INNER_LEN_MAX", 
	"INNER_WID_MIN as INNER_WID_MIN", 
	"INNER_WID_MAX as INNER_WID_MAX", 
	"INNER_WT_MIN as INNER_WT_MIN", 
	"INNER_WT_MAX as INNER_WT_MAX", 
	"INNER_CUBE_MIN as INNER_CUBE_MIN", 
	"INNER_CUBE_MAX as INNER_CUBE_MAX", 
	"EACH_HT_MIN as EACH_HT_MIN", 
	"EACH_HT_MAX as EACH_HT_MAX", 
	"EACH_LEN_MIN as EACH_LEN_MIN", 
	"EACH_LEN_MAX as EACH_LEN_MAX", 
	"EACH_WID_MAX as EACH_WID_MAX", 
	"EACH_WT_MIN as EACH_WT_MIN", 
	"EACH_WT_MAX as EACH_WT_MAX", 
	"EACH_CUBE_MIN as EACH_CUBE_MIN", 
	"EACH_CUBE_MAX as EACH_CUBE_MAX", 
	"PALLET_INVEN_MIN as PALLET_INVEN_MIN", 
	"PALLET_INVEN_MAX as PALLET_INVEN_MAX", 
	"EACH_WID_MIN as EACH_WID_MIN", 
	"CUBE_MOVE_MIN as CUBE_MOVE_MIN", 
	"CUBE_MOVE_MAX as CUBE_MOVE_MAX", 
	"CUBE_INVEN_MIN as CUBE_INVEN_MIN", 
	"CUBE_INVEN_MAX as CUBE_INVEN_MAX", 
	"CUBE_HITS_MIN as CUBE_HITS_MIN", 
	"CUBE_HITS_MAX as CUBE_HITS_MAX", 
	"VISC_MIN as VISC_MIN", 
	"VISC_MAX as VISC_MAX", 
	"FILL_PERCENT_MIN as FILL_PERCENT_MIN", 
	"FILL_PERCENT_MAX as FILL_PERCENT_MAX", 
	"RESERVED_1 as RESERVED_1", 
	"RESERVED_2 as RESERVED_2", 
	"RESERVED_3 as RESERVED_3", 
	"RESERVED_4 as RESERVED_4", 
	"CREATE_DATE_TIME as CREATE_DATE_TIME", 
	"MOD_DATE_TIME as MOD_DATE_TIME", 
	"MOD_USER as MOD_USER", 
	"LOCATION_ID as LOCATION_ID", 
	"in_LOCATION_ID as in_LOCATION_ID", 
	"WM_RACK_TYPE_ID as WM_RACK_TYPE_ID", 
	"WM_WHSE_CD as WM_WHSE_CD", 
	"WM_RACK_TYPE_NAME as WM_RACK_TYPE_NAME", 
	"WM_RACK_TYPE_DESC as WM_RACK_TYPE_DESC", 
	"SEQ_NBR as SEQ_NBR", 
	"WM_REF_LEVEL_ID as WM_REF_LEVEL_ID", 
	"in_RACK_CLASS as in_RACK_CLASS", 
	"in_FIX_LABELS as in_FIX_LABELS", 
	"in_MOVABLE_LABEL as in_MOVABLE_LABEL", 
	"in_LABEL_WID as in_LABEL_WID", 
	"in_OVERLAP_DIST as in_OVERLAP_DIST", 
	"in_HN_CONSIDER as in_HN_CONSIDER", 
	"in_UPRIGHT_THICKNESS as in_UPRIGHT_THICKNESS", 
	"in_FUNCTION_TYPE as in_FUNCTION_TYPE", 
	"in_OVERSTOCK_CONSIDER as in_OVERSTOCK_CONSIDER", 
	"in_USE_3D_SLOT as in_USE_3D_SLOT", 
	"in_WEEKS_IN_SLOT_CONSTRAINT as in_WEEKS_IN_SLOT_CONSTRAINT", 
	"in_NUM_OF_BAYS_AVAIL as in_NUM_OF_BAYS_AVAIL", 
	"in_WEEK_IN_SLOT as in_WEEK_IN_SLOT", 
	"in_PARENT_BT as in_PARENT_BT", 
	"in_WT_LIMIT as in_WT_LIMIT", 
	"in_HT as in_HT", 
	"in_WIDTH as in_WIDTH", 
	"in_DEPTH as in_DEPTH", 
	"in_CASE_HT_MIN as in_CASE_HT_MIN", 
	"in_CASE_HT_MAX as in_CASE_HT_MAX", 
	"CASE_LEN_MIN1 as CASE_LEN_MIN1", 
	"CASE_LEN_MAX1 as CASE_LEN_MAX1", 
	"CASE_WID_MIN1 as CASE_WID_MIN1", 
	"CASE_WID_MAX1 as CASE_WID_MAX1", 
	"CASE_WT_MIN1 as CASE_WT_MIN1", 
	"CASE_WT_MAX1 as CASE_WT_MAX1", 
	"CASE_CUBE_MIN1 as CASE_CUBE_MIN1", 
	"CASE_CUBE_MAX1 as CASE_CUBE_MAX1", 
	"CASE_INVEN_MIN1 as CASE_INVEN_MIN1", 
	"CASE_INVEN_MAX1 as CASE_INVEN_MAX1", 
	"CASE_MOVE_MIN1 as CASE_MOVE_MIN1", 
	"CASE_MOVE_MAX1 as CASE_MOVE_MAX1", 
	"CASE_HITS_MIN1 as CASE_HITS_MIN1", 
	"CASE_HITS_MAX1 as CASE_HITS_MAX1", 
	"INNER_HT_MIN1 as INNER_HT_MIN1", 
	"INNER_HT_MAX1 as INNER_HT_MAX1", 
	"INNER_LEN_MIN1 as INNER_LEN_MIN1", 
	"INNER_LEN_MAX1 as INNER_LEN_MAX1", 
	"INNER_WID_MIN1 as INNER_WID_MIN1", 
	"INNER_WID_MAX1 as INNER_WID_MAX1", 
	"INNER_WT_MIN1 as INNER_WT_MIN1", 
	"INNER_WT_MAX1 as INNER_WT_MAX1", 
	"INNER_CUBE_MIN1 as INNER_CUBE_MIN1", 
	"INNER_CUBE_MAX1 as INNER_CUBE_MAX1", 
	"EACH_HT_MIN1 as EACH_HT_MIN1", 
	"EACH_HT_MAX1 as EACH_HT_MAX1", 
	"EACH_LEN_MIN1 as EACH_LEN_MIN1", 
	"EACH_LEN_MAX1 as EACH_LEN_MAX1", 
	"EACH_WID_MIN1 as EACH_WID_MIN1", 
	"EACH_WID_MAX1 as EACH_WID_MAX1", 
	"EACH_WT_MIN1 as EACH_WT_MIN1", 
	"EACH_WT_MAX1 as EACH_WT_MAX1", 
	"EACH_CUBE_MIN1 as EACH_CUBE_MIN1", 
	"in_EACH_CUBE_MAX as in_EACH_CUBE_MAX", 
	"in_PALLET_INVEN_MIN as in_PALLET_INVEN_MIN", 
	"in_PALLET_INVEN_MAX as in_PALLET_INVEN_MAX", 
	"in_CUBE_MOVE_MIN as in_CUBE_MOVE_MIN", 
	"in_CUBE_MOVE_MAX as in_CUBE_MOVE_MAX", 
	"in_CUBE_HITS_MIN as in_CUBE_HITS_MIN", 
	"in_CUBE_HITS_MAX as in_CUBE_HITS_MAX", 
	"in_CUBE_INVEN_MIN as in_CUBE_INVEN_MIN", 
	"in_CUBE_INVEN_MAX as in_CUBE_INVEN_MAX", 
	"in_VISC_MIN as in_VISC_MIN", 
	"in_VISC_MAX as in_VISC_MAX", 
	"in_FILL_PERCENT_MIN as in_FILL_PERCENT_MIN", 
	"in_FILL_PERCENT_MAX as in_FILL_PERCENT_MAX", 
	"in_RESERVED_1 as in_RESERVED_1", 
	"in_RESERVED_2 as in_RESERVED_2", 
	"in_RESERVED_3 as in_RESERVED_3", 
	"in_RESERVED_4 as in_RESERVED_4", 
	"WM_MOD_USER as WM_MOD_USER", 
	"WM_CREATE_TSTMP as WM_CREATE_TSTMP", 
	"WM_MOD_TSTMP as WM_MOD_TSTMP", 
	"DELETE_FLAG as DELETE_FLAG", 
	"UPDATE_TSTMP as UPDATE_TSTMP", 
	"LOAD_TSTMP_exp as LOAD_TSTMP_exp", 
	"DELETE_FLAG_exp as DELETE_FLAG_exp", 
	"o_UPD_VALIDATOR as o_UPD_VALIDATOR",
	"sys_row_id as sys_row_id"
).withColumn('in_LOAD_TSTMP', lit(None)
).select(col('sys_row_id'), 
	col('RACK_TYPE').alias('RACK_TYPE1'), 
	col('WHSE_CODE').alias('WHSE_CODE1'), 
	col('RT_NAME').alias('RT_NAME1'), 
	col('RACK_TYPE_DESC').alias('RACK_TYPE_DESC1'), 
	col('SEQUENCE').alias('SEQUENCE1'), 
	col('REF_LEVEL_ID').alias('REF_LEVEL_ID1'), 
	col('RACK_CLASS').alias('RACK_CLASS1'), 
	col('FIX_LABELS').alias('FIX_LABELS1'), 
	col('LABEL_WID').alias('LABEL_WID1'), 
	col('OVERLAP_DIST').alias('OVERLAP_DIST1'), 
	col('MOVABLE_LABEL').alias('MOVABLE_LABEL1'), 
	col('HN_CONSIDER').alias('HN_CONSIDER1'), 
	col('UPRIGHT_THICKNESS').alias('UPRIGHT_THICKNESS1'), 
	col('FUNCTION_TYPE').alias('FUNCTION_TYPE1'), 
	col('OVERSTOCK_CONSIDER').alias('OVERSTOCK_CONSIDER1'), 
	col('USE_3D_SLOT').alias('USE_3D_SLOT1'), 
	col('WEEKS_IN_SLOT_CONSTRAINT').alias('WEEKS_IN_SLOT_CONSTRAINT1'), 
	col('NUM_OF_BAYS_AVAIL').alias('NUM_OF_BAYS_AVAIL1'), 
	col('WEEK_IN_SLOT').alias('WEEK_IN_SLOT1'), 
	col('PARENT_BT').alias('PARENT_BT1'), 
	col('WT_LIMIT').alias('WT_LIMIT1'), 
	col('HT').alias('HT1'), 
	col('WIDTH').alias('WIDTH1'), 
	col('DEPTH').alias('DEPTH1'), 
	col('CASE_HT_MIN').alias('CASE_HT_MIN1'), 
	col('CASE_HT_MAX').alias('CASE_HT_MAX1'), 
	col('CASE_LEN_MIN').alias('CASE_LEN_MIN2'), 
	col('CASE_LEN_MAX').alias('CASE_LEN_MAX2'), 
	col('CASE_WID_MIN').alias('CASE_WID_MIN2'), 
	col('CASE_WID_MAX').alias('CASE_WID_MAX2'), 
	col('CASE_WT_MIN').alias('CASE_WT_MIN2'), 
	col('CASE_WT_MAX').alias('CASE_WT_MAX2'), 
	col('CASE_CUBE_MIN').alias('CASE_CUBE_MIN2'), 
	col('CASE_CUBE_MAX').alias('CASE_CUBE_MAX2'), 
	col('CASE_INVEN_MIN').alias('CASE_INVEN_MIN2'), 
	col('CASE_INVEN_MAX').alias('CASE_INVEN_MAX2'), 
	col('CASE_MOVE_MIN').alias('CASE_MOVE_MIN2'), 
	col('CASE_MOVE_MAX').alias('CASE_MOVE_MAX2'), 
	col('CASE_HITS_MIN').alias('CASE_HITS_MIN2'), 
	col('CASE_HITS_MAX').alias('CASE_HITS_MAX2'), 
	col('INNER_HT_MIN').alias('INNER_HT_MIN2'), 
	col('INNER_HT_MAX').alias('INNER_HT_MAX2'), 
	col('INNER_LEN_MIN').alias('INNER_LEN_MIN2'), 
	col('INNER_LEN_MAX').alias('INNER_LEN_MAX2'), 
	col('INNER_WID_MIN').alias('INNER_WID_MIN2'), 
	col('INNER_WID_MAX').alias('INNER_WID_MAX2'), 
	col('INNER_WT_MIN').alias('INNER_WT_MIN2'), 
	col('INNER_WT_MAX').alias('INNER_WT_MAX2'), 
	col('INNER_CUBE_MIN').alias('INNER_CUBE_MIN2'), 
	col('INNER_CUBE_MAX').alias('INNER_CUBE_MAX2'), 
	col('EACH_HT_MIN').alias('EACH_HT_MIN2'), 
	col('EACH_HT_MAX').alias('EACH_HT_MAX2'), 
	col('EACH_LEN_MIN').alias('EACH_LEN_MIN2'), 
	col('EACH_LEN_MAX').alias('EACH_LEN_MAX2'), 
	col('EACH_WID_MAX').alias('EACH_WID_MAX2'), 
	col('EACH_WT_MIN').alias('EACH_WT_MIN2'), 
	col('EACH_WT_MAX').alias('EACH_WT_MAX2'), 
	col('EACH_CUBE_MIN').alias('EACH_CUBE_MIN2'), 
	col('EACH_CUBE_MAX').alias('EACH_CUBE_MAX1'), 
	col('PALLET_INVEN_MIN').alias('PALLET_INVEN_MIN1'), 
	col('PALLET_INVEN_MAX').alias('PALLET_INVEN_MAX1'), 
	col('EACH_WID_MIN').alias('EACH_WID_MIN2'), 
	col('CUBE_MOVE_MIN').alias('CUBE_MOVE_MIN1'), 
	col('CUBE_MOVE_MAX').alias('CUBE_MOVE_MAX1'), 
	col('CUBE_INVEN_MIN').alias('CUBE_INVEN_MIN1'), 
	col('CUBE_INVEN_MAX').alias('CUBE_INVEN_MAX1'), 
	col('CUBE_HITS_MIN').alias('CUBE_HITS_MIN1'), 
	col('CUBE_HITS_MAX').alias('CUBE_HITS_MAX1'), 
	col('VISC_MIN').alias('VISC_MIN1'), 
	col('VISC_MAX').alias('VISC_MAX1'), 
	col('FILL_PERCENT_MIN').alias('FILL_PERCENT_MIN1'), 
	col('FILL_PERCENT_MAX').alias('FILL_PERCENT_MAX1'), 
	col('RESERVED_1').alias('RESERVED_11'), 
	col('RESERVED_2').alias('RESERVED_21'), 
	col('RESERVED_3').alias('RESERVED_31'), 
	col('RESERVED_4').alias('RESERVED_41'), 
	col('CREATE_DATE_TIME').alias('CREATE_DATE_TIME1'), 
	col('MOD_DATE_TIME').alias('MOD_DATE_TIME1'), 
	col('MOD_USER').alias('MOD_USER1'), 
	col('LOCATION_ID').alias('LOCATION_ID1'), 
	col('in_LOCATION_ID').alias('in_LOCATION_ID1'), 
	col('WM_RACK_TYPE_ID').alias('WM_RACK_TYPE_ID1'), 
	col('WM_WHSE_CD').alias('WM_WHSE_CD1'), 
	col('WM_RACK_TYPE_NAME').alias('WM_RACK_TYPE_NAME1'), 
	col('WM_RACK_TYPE_DESC').alias('WM_RACK_TYPE_DESC1'), 
	col('SEQ_NBR').alias('SEQ_NBR1'), 
	col('WM_REF_LEVEL_ID').alias('WM_REF_LEVEL_ID1'), 
	col('in_RACK_CLASS').alias('in_RACK_CLASS1'), 
	col('in_FIX_LABELS').alias('in_FIX_LABELS1'), 
	col('in_MOVABLE_LABEL').alias('in_MOVABLE_LABEL1'), 
	col('in_LABEL_WID').alias('in_LABEL_WID1'), 
	col('in_OVERLAP_DIST').alias('in_OVERLAP_DIST1'), 
	col('in_HN_CONSIDER').alias('in_HN_CONSIDER1'), 
	col('in_UPRIGHT_THICKNESS').alias('in_UPRIGHT_THICKNESS1'), 
	col('in_FUNCTION_TYPE').alias('in_FUNCTION_TYPE1'), 
	col('in_OVERSTOCK_CONSIDER').alias('in_OVERSTOCK_CONSIDER1'), 
	col('in_USE_3D_SLOT').alias('in_USE_3D_SLOT1'), 
	col('in_WEEKS_IN_SLOT_CONSTRAINT').alias('in_WEEKS_IN_SLOT_CONSTRAINT1'), 
	col('in_NUM_OF_BAYS_AVAIL').alias('in_NUM_OF_BAYS_AVAIL1'), 
	col('in_WEEK_IN_SLOT').alias('in_WEEK_IN_SLOT1'), 
	col('in_PARENT_BT').alias('in_PARENT_BT1'), 
	col('in_WT_LIMIT').alias('in_WT_LIMIT1'), 
	col('in_HT').alias('in_HT1'), 
	col('in_WIDTH').alias('in_WIDTH1'), 
	col('in_DEPTH').alias('in_DEPTH1'), 
	col('in_CASE_HT_MIN').alias('in_CASE_HT_MIN1'), 
	col('in_CASE_HT_MAX').alias('in_CASE_HT_MAX1'), 
	col('CASE_LEN_MIN1').alias('CASE_LEN_MIN11'), 
	col('CASE_LEN_MAX1').alias('CASE_LEN_MAX11'), 
	col('CASE_WID_MIN1').alias('CASE_WID_MIN11'), 
	col('CASE_WID_MAX1').alias('CASE_WID_MAX11'), 
	col('CASE_WT_MIN1').alias('CASE_WT_MIN11'), 
	col('CASE_WT_MAX1').alias('CASE_WT_MAX11'), 
	col('CASE_CUBE_MIN1').alias('CASE_CUBE_MIN11'), 
	col('CASE_CUBE_MAX1').alias('CASE_CUBE_MAX11'), 
	col('CASE_INVEN_MIN1').alias('CASE_INVEN_MIN11'), 
	col('CASE_INVEN_MAX1').alias('CASE_INVEN_MAX11'), 
	col('CASE_MOVE_MIN1').alias('CASE_MOVE_MIN11'), 
	col('CASE_MOVE_MAX1').alias('CASE_MOVE_MAX11'), 
	col('CASE_HITS_MIN1').alias('CASE_HITS_MIN11'), 
	col('CASE_HITS_MAX1').alias('CASE_HITS_MAX11'), 
	col('INNER_HT_MIN1').alias('INNER_HT_MIN11'), 
	col('INNER_HT_MAX1').alias('INNER_HT_MAX11'), 
	col('INNER_LEN_MIN1').alias('INNER_LEN_MIN11'), 
	col('INNER_LEN_MAX1').alias('INNER_LEN_MAX11'), 
	col('INNER_WID_MIN1').alias('INNER_WID_MIN11'), 
	col('INNER_WID_MAX1').alias('INNER_WID_MAX11'), 
	col('INNER_WT_MIN1').alias('INNER_WT_MIN11'), 
	col('INNER_WT_MAX1').alias('INNER_WT_MAX11'), 
	col('INNER_CUBE_MIN1').alias('INNER_CUBE_MIN11'), 
	col('INNER_CUBE_MAX1').alias('INNER_CUBE_MAX11'), 
	col('EACH_HT_MIN1').alias('EACH_HT_MIN11'), 
	col('EACH_HT_MAX1').alias('EACH_HT_MAX11'), 
	col('EACH_LEN_MIN1').alias('EACH_LEN_MIN11'), 
	col('EACH_LEN_MAX1').alias('EACH_LEN_MAX11'), 
	col('EACH_WID_MIN1').alias('EACH_WID_MIN11'), 
	col('EACH_WID_MAX1').alias('EACH_WID_MAX11'), 
	col('EACH_WT_MIN1').alias('EACH_WT_MIN11'), 
	col('EACH_WT_MAX1').alias('EACH_WT_MAX11'), 
	col('EACH_CUBE_MIN1').alias('EACH_CUBE_MIN11'), 
	col('in_EACH_CUBE_MAX').alias('in_EACH_CUBE_MAX1'), 
	col('in_PALLET_INVEN_MIN').alias('in_PALLET_INVEN_MIN1'), 
	col('in_PALLET_INVEN_MAX').alias('in_PALLET_INVEN_MAX1'), 
	col('in_CUBE_MOVE_MIN').alias('in_CUBE_MOVE_MIN1'), 
	col('in_CUBE_MOVE_MAX').alias('in_CUBE_MOVE_MAX1'), 
	col('in_CUBE_HITS_MIN').alias('in_CUBE_HITS_MIN1'), 
	col('in_CUBE_HITS_MAX').alias('in_CUBE_HITS_MAX1'), 
	col('in_CUBE_INVEN_MIN').alias('in_CUBE_INVEN_MIN1'), 
	col('in_CUBE_INVEN_MAX').alias('in_CUBE_INVEN_MAX1'), 
	col('in_VISC_MIN').alias('in_VISC_MIN1'), 
	col('in_VISC_MAX').alias('in_VISC_MAX1'), 
	col('in_FILL_PERCENT_MIN').alias('in_FILL_PERCENT_MIN1'), 
	col('in_FILL_PERCENT_MAX').alias('in_FILL_PERCENT_MAX1'), 
	col('in_RESERVED_1').alias('in_RESERVED_11'), 
	col('in_RESERVED_2').alias('in_RESERVED_21'), 
	col('in_RESERVED_3').alias('in_RESERVED_31'), 
	col('in_RESERVED_4').alias('in_RESERVED_41'), 
	col('WM_MOD_USER').alias('WM_MOD_USER1'), 
	col('WM_CREATE_TSTMP').alias('WM_CREATE_TSTMP1'), 
	col('WM_MOD_TSTMP').alias('WM_MOD_TSTMP1'), 
	col('in_LOAD_TSTMP').alias('in_LOAD_TSTMP1'), 
	col('DELETE_FLAG').alias('DELETE_FLAG1'), 
	col('UPDATE_TSTMP').alias('UPDATE_TSTMP1'), 
	col('LOAD_TSTMP_exp').alias('LOAD_TSTMP_exp1'), 
	col('DELETE_FLAG_exp').alias('DELETE_FLAG_exp1'), 
	col('o_UPD_VALIDATOR').alias('o_UPD_VALIDATOR1')).filter("o_UPD_VALIDATOR = 'INSERT' OR o_UPD_VALIDATOR = 'UPDATE'")

# Creating output dataframe for RTR_UPSERT_DELETE, output group NEWGROUP2
RTR_UPSERT_DELETE_NEWGROUP2 = EXP_UPD_INS.selectExpr( 
	"RACK_TYPE as RACK_TYPE", 
	"WHSE_CODE as WHSE_CODE", 
	"RT_NAME as RT_NAME", 
	"RACK_TYPE_DESC as RACK_TYPE_DESC", 
	"SEQUENCE as SEQUENCE", 
	"REF_LEVEL_ID as REF_LEVEL_ID", 
	"RACK_CLASS as RACK_CLASS", 
	"FIX_LABELS as FIX_LABELS", 
	"LABEL_WID as LABEL_WID", 
	"OVERLAP_DIST as OVERLAP_DIST", 
	"MOVABLE_LABEL as MOVABLE_LABEL", 
	"HN_CONSIDER as HN_CONSIDER", 
	"UPRIGHT_THICKNESS as UPRIGHT_THICKNESS", 
	"FUNCTION_TYPE as FUNCTION_TYPE", 
	"OVERSTOCK_CONSIDER as OVERSTOCK_CONSIDER", 
	"USE_3D_SLOT as USE_3D_SLOT", 
	"WEEKS_IN_SLOT_CONSTRAINT as WEEKS_IN_SLOT_CONSTRAINT", 
	"NUM_OF_BAYS_AVAIL as NUM_OF_BAYS_AVAIL", 
	"WEEK_IN_SLOT as WEEK_IN_SLOT", 
	"PARENT_BT as PARENT_BT", 
	"WT_LIMIT as WT_LIMIT", 
	"HT as HT", 
	"WIDTH as WIDTH", 
	"DEPTH as DEPTH", 
	"CASE_HT_MIN as CASE_HT_MIN", 
	"CASE_HT_MAX as CASE_HT_MAX", 
	"CASE_LEN_MIN as CASE_LEN_MIN", 
	"CASE_LEN_MAX as CASE_LEN_MAX", 
	"CASE_WID_MIN as CASE_WID_MIN", 
	"CASE_WID_MAX as CASE_WID_MAX", 
	"CASE_WT_MIN as CASE_WT_MIN", 
	"CASE_WT_MAX as CASE_WT_MAX", 
	"CASE_CUBE_MIN as CASE_CUBE_MIN", 
	"CASE_CUBE_MAX as CASE_CUBE_MAX", 
	"CASE_INVEN_MIN as CASE_INVEN_MIN", 
	"CASE_INVEN_MAX as CASE_INVEN_MAX", 
	"CASE_MOVE_MIN as CASE_MOVE_MIN", 
	"CASE_MOVE_MAX as CASE_MOVE_MAX", 
	"CASE_HITS_MIN as CASE_HITS_MIN", 
	"CASE_HITS_MAX as CASE_HITS_MAX", 
	"INNER_HT_MIN as INNER_HT_MIN", 
	"INNER_HT_MAX as INNER_HT_MAX", 
	"INNER_LEN_MIN as INNER_LEN_MIN", 
	"INNER_LEN_MAX as INNER_LEN_MAX", 
	"INNER_WID_MIN as INNER_WID_MIN", 
	"INNER_WID_MAX as INNER_WID_MAX", 
	"INNER_WT_MIN as INNER_WT_MIN", 
	"INNER_WT_MAX as INNER_WT_MAX", 
	"INNER_CUBE_MIN as INNER_CUBE_MIN", 
	"INNER_CUBE_MAX as INNER_CUBE_MAX", 
	"EACH_HT_MIN as EACH_HT_MIN", 
	"EACH_HT_MAX as EACH_HT_MAX", 
	"EACH_LEN_MIN as EACH_LEN_MIN", 
	"EACH_LEN_MAX as EACH_LEN_MAX", 
	"EACH_WID_MAX as EACH_WID_MAX", 
	"EACH_WT_MIN as EACH_WT_MIN", 
	"EACH_WT_MAX as EACH_WT_MAX", 
	"EACH_CUBE_MIN as EACH_CUBE_MIN", 
	"EACH_CUBE_MAX as EACH_CUBE_MAX", 
	"PALLET_INVEN_MIN as PALLET_INVEN_MIN", 
	"PALLET_INVEN_MAX as PALLET_INVEN_MAX", 
	"EACH_WID_MIN as EACH_WID_MIN", 
	"CUBE_MOVE_MIN as CUBE_MOVE_MIN", 
	"CUBE_MOVE_MAX as CUBE_MOVE_MAX", 
	"CUBE_INVEN_MIN as CUBE_INVEN_MIN", 
	"CUBE_INVEN_MAX as CUBE_INVEN_MAX", 
	"CUBE_HITS_MIN as CUBE_HITS_MIN", 
	"CUBE_HITS_MAX as CUBE_HITS_MAX", 
	"VISC_MIN as VISC_MIN", 
	"VISC_MAX as VISC_MAX", 
	"FILL_PERCENT_MIN as FILL_PERCENT_MIN", 
	"FILL_PERCENT_MAX as FILL_PERCENT_MAX", 
	"RESERVED_1 as RESERVED_1", 
	"RESERVED_2 as RESERVED_2", 
	"RESERVED_3 as RESERVED_3", 
	"RESERVED_4 as RESERVED_4", 
	"CREATE_DATE_TIME as CREATE_DATE_TIME", 
	"MOD_DATE_TIME as MOD_DATE_TIME", 
	"MOD_USER as MOD_USER", 
	"LOCATION_ID as LOCATION_ID", 
	"in_LOCATION_ID as in_LOCATION_ID", 
	"WM_RACK_TYPE_ID as WM_RACK_TYPE_ID", 
	"WM_WHSE_CD as WM_WHSE_CD", 
	"WM_RACK_TYPE_NAME as WM_RACK_TYPE_NAME", 
	"WM_RACK_TYPE_DESC as WM_RACK_TYPE_DESC", 
	"SEQ_NBR as SEQ_NBR", 
	"WM_REF_LEVEL_ID as WM_REF_LEVEL_ID", 
	"in_RACK_CLASS as in_RACK_CLASS", 
	"in_FIX_LABELS as in_FIX_LABELS", 
	"in_MOVABLE_LABEL as in_MOVABLE_LABEL", 
	"in_LABEL_WID as in_LABEL_WID", 
	"in_OVERLAP_DIST as in_OVERLAP_DIST", 
	"in_HN_CONSIDER as in_HN_CONSIDER", 
	"in_UPRIGHT_THICKNESS as in_UPRIGHT_THICKNESS", 
	"in_FUNCTION_TYPE as in_FUNCTION_TYPE", 
	"in_OVERSTOCK_CONSIDER as in_OVERSTOCK_CONSIDER", 
	"in_USE_3D_SLOT as in_USE_3D_SLOT", 
	"in_WEEKS_IN_SLOT_CONSTRAINT as in_WEEKS_IN_SLOT_CONSTRAINT", 
	"in_NUM_OF_BAYS_AVAIL as in_NUM_OF_BAYS_AVAIL", 
	"in_WEEK_IN_SLOT as in_WEEK_IN_SLOT", 
	"in_PARENT_BT as in_PARENT_BT", 
	"in_WT_LIMIT as in_WT_LIMIT", 
	"in_HT as in_HT", 
	"in_WIDTH as in_WIDTH", 
	"in_DEPTH as in_DEPTH", 
	"in_CASE_HT_MIN as in_CASE_HT_MIN", 
	"in_CASE_HT_MAX as in_CASE_HT_MAX", 
	"CASE_LEN_MIN1 as CASE_LEN_MIN1", 
	"CASE_LEN_MAX1 as CASE_LEN_MAX1", 
	"CASE_WID_MIN1 as CASE_WID_MIN1", 
	"CASE_WID_MAX1 as CASE_WID_MAX1", 
	"CASE_WT_MIN1 as CASE_WT_MIN1", 
	"CASE_WT_MAX1 as CASE_WT_MAX1", 
	"CASE_CUBE_MIN1 as CASE_CUBE_MIN1", 
	"CASE_CUBE_MAX1 as CASE_CUBE_MAX1", 
	"CASE_INVEN_MIN1 as CASE_INVEN_MIN1", 
	"CASE_INVEN_MAX1 as CASE_INVEN_MAX1", 
	"CASE_MOVE_MIN1 as CASE_MOVE_MIN1", 
	"CASE_MOVE_MAX1 as CASE_MOVE_MAX1", 
	"CASE_HITS_MIN1 as CASE_HITS_MIN1", 
	"CASE_HITS_MAX1 as CASE_HITS_MAX1", 
	"INNER_HT_MIN1 as INNER_HT_MIN1", 
	"INNER_HT_MAX1 as INNER_HT_MAX1", 
	"INNER_LEN_MIN1 as INNER_LEN_MIN1", 
	"INNER_LEN_MAX1 as INNER_LEN_MAX1", 
	"INNER_WID_MIN1 as INNER_WID_MIN1", 
	"INNER_WID_MAX1 as INNER_WID_MAX1", 
	"INNER_WT_MIN1 as INNER_WT_MIN1", 
	"INNER_WT_MAX1 as INNER_WT_MAX1", 
	"INNER_CUBE_MIN1 as INNER_CUBE_MIN1", 
	"INNER_CUBE_MAX1 as INNER_CUBE_MAX1", 
	"EACH_HT_MIN1 as EACH_HT_MIN1", 
	"EACH_HT_MAX1 as EACH_HT_MAX1", 
	"EACH_LEN_MIN1 as EACH_LEN_MIN1", 
	"EACH_LEN_MAX1 as EACH_LEN_MAX1", 
	"EACH_WID_MIN1 as EACH_WID_MIN1", 
	"EACH_WID_MAX1 as EACH_WID_MAX1", 
	"EACH_WT_MIN1 as EACH_WT_MIN1", 
	"EACH_WT_MAX1 as EACH_WT_MAX1", 
	"EACH_CUBE_MIN1 as EACH_CUBE_MIN1", 
	"in_EACH_CUBE_MAX as in_EACH_CUBE_MAX", 
	"in_PALLET_INVEN_MIN as in_PALLET_INVEN_MIN", 
	"in_PALLET_INVEN_MAX as in_PALLET_INVEN_MAX", 
	"in_CUBE_MOVE_MIN as in_CUBE_MOVE_MIN", 
	"in_CUBE_MOVE_MAX as in_CUBE_MOVE_MAX", 
	"in_CUBE_HITS_MIN as in_CUBE_HITS_MIN", 
	"in_CUBE_HITS_MAX as in_CUBE_HITS_MAX", 
	"in_CUBE_INVEN_MIN as in_CUBE_INVEN_MIN", 
	"in_CUBE_INVEN_MAX as in_CUBE_INVEN_MAX", 
	"in_VISC_MIN as in_VISC_MIN", 
	"in_VISC_MAX as in_VISC_MAX", 
	"in_FILL_PERCENT_MIN as in_FILL_PERCENT_MIN", 
	"in_FILL_PERCENT_MAX as in_FILL_PERCENT_MAX", 
	"in_RESERVED_1 as in_RESERVED_1", 
	"in_RESERVED_2 as in_RESERVED_2", 
	"in_RESERVED_3 as in_RESERVED_3", 
	"in_RESERVED_4 as in_RESERVED_4", 
	"WM_MOD_USER as WM_MOD_USER", 
	"WM_CREATE_TSTMP as WM_CREATE_TSTMP", 
	"WM_MOD_TSTMP as WM_MOD_TSTMP", 
	"DELETE_FLAG as DELETE_FLAG", 
	"UPDATE_TSTMP as UPDATE_TSTMP", 
	"LOAD_TSTMP_exp as LOAD_TSTMP_exp", 
	"DELETE_FLAG_exp as DELETE_FLAG_exp", 
	"o_UPD_VALIDATOR as o_UPD_VALIDATOR" ,
   "sys_row_id"
).withColumn('in_LOAD_TSTMP', lit(None)
).select(col('sys_row_id'), 
	col('RACK_TYPE').alias('RACK_TYPE3'), 
	col('WHSE_CODE').alias('WHSE_CODE3'), 
	col('RT_NAME').alias('RT_NAME3'), 
	col('RACK_TYPE_DESC').alias('RACK_TYPE_DESC3'), 
	col('SEQUENCE').alias('SEQUENCE3'), 
	col('REF_LEVEL_ID').alias('REF_LEVEL_ID3'), 
	col('RACK_CLASS').alias('RACK_CLASS3'), 
	col('FIX_LABELS').alias('FIX_LABELS3'), 
	col('LABEL_WID').alias('LABEL_WID3'), 
	col('OVERLAP_DIST').alias('OVERLAP_DIST3'), 
	col('MOVABLE_LABEL').alias('MOVABLE_LABEL3'), 
	col('HN_CONSIDER').alias('HN_CONSIDER3'), 
	col('UPRIGHT_THICKNESS').alias('UPRIGHT_THICKNESS3'), 
	col('FUNCTION_TYPE').alias('FUNCTION_TYPE3'), 
	col('OVERSTOCK_CONSIDER').alias('OVERSTOCK_CONSIDER3'), 
	col('USE_3D_SLOT').alias('USE_3D_SLOT3'), 
	col('WEEKS_IN_SLOT_CONSTRAINT').alias('WEEKS_IN_SLOT_CONSTRAINT3'), 
	col('NUM_OF_BAYS_AVAIL').alias('NUM_OF_BAYS_AVAIL3'), 
	col('WEEK_IN_SLOT').alias('WEEK_IN_SLOT3'), 
	col('PARENT_BT').alias('PARENT_BT3'), 
	col('WT_LIMIT').alias('WT_LIMIT3'), 
	col('HT').alias('HT3'), 
	col('WIDTH').alias('WIDTH3'), 
	col('DEPTH').alias('DEPTH3'), 
	col('CASE_HT_MIN').alias('CASE_HT_MIN3'), 
	col('CASE_HT_MAX').alias('CASE_HT_MAX3'), 
	col('CASE_LEN_MIN').alias('CASE_LEN_MIN4'), 
	col('CASE_LEN_MAX').alias('CASE_LEN_MAX4'), 
	col('CASE_WID_MIN').alias('CASE_WID_MIN4'), 
	col('CASE_WID_MAX').alias('CASE_WID_MAX4'), 
	col('CASE_WT_MIN').alias('CASE_WT_MIN4'), 
	col('CASE_WT_MAX').alias('CASE_WT_MAX4'), 
	col('CASE_CUBE_MIN').alias('CASE_CUBE_MIN4'), 
	col('CASE_CUBE_MAX').alias('CASE_CUBE_MAX4'), 
	col('CASE_INVEN_MIN').alias('CASE_INVEN_MIN4'), 
	col('CASE_INVEN_MAX').alias('CASE_INVEN_MAX4'), 
	col('CASE_MOVE_MIN').alias('CASE_MOVE_MIN4'), 
	col('CASE_MOVE_MAX').alias('CASE_MOVE_MAX4'), 
	col('CASE_HITS_MIN').alias('CASE_HITS_MIN4'), 
	col('CASE_HITS_MAX').alias('CASE_HITS_MAX4'), 
	col('INNER_HT_MIN').alias('INNER_HT_MIN4'), 
	col('INNER_HT_MAX').alias('INNER_HT_MAX4'), 
	col('INNER_LEN_MIN').alias('INNER_LEN_MIN4'), 
	col('INNER_LEN_MAX').alias('INNER_LEN_MAX4'), 
	col('INNER_WID_MIN').alias('INNER_WID_MIN4'), 
	col('INNER_WID_MAX').alias('INNER_WID_MAX4'), 
	col('INNER_WT_MIN').alias('INNER_WT_MIN4'), 
	col('INNER_WT_MAX').alias('INNER_WT_MAX4'), 
	col('INNER_CUBE_MIN').alias('INNER_CUBE_MIN4'), 
	col('INNER_CUBE_MAX').alias('INNER_CUBE_MAX4'), 
	col('EACH_HT_MIN').alias('EACH_HT_MIN4'), 
	col('EACH_HT_MAX').alias('EACH_HT_MAX4'), 
	col('EACH_LEN_MIN').alias('EACH_LEN_MIN4'), 
	col('EACH_LEN_MAX').alias('EACH_LEN_MAX4'), 
	col('EACH_WID_MAX').alias('EACH_WID_MAX4'), 
	col('EACH_WT_MIN').alias('EACH_WT_MIN4'), 
	col('EACH_WT_MAX').alias('EACH_WT_MAX4'), 
	col('EACH_CUBE_MIN').alias('EACH_CUBE_MIN4'), 
	col('EACH_CUBE_MAX').alias('EACH_CUBE_MAX3'), 
	col('PALLET_INVEN_MIN').alias('PALLET_INVEN_MIN3'), 
	col('PALLET_INVEN_MAX').alias('PALLET_INVEN_MAX3'), 
	col('EACH_WID_MIN').alias('EACH_WID_MIN4'), 
	col('CUBE_MOVE_MIN').alias('CUBE_MOVE_MIN3'), 
	col('CUBE_MOVE_MAX').alias('CUBE_MOVE_MAX3'), 
	col('CUBE_INVEN_MIN').alias('CUBE_INVEN_MIN3'), 
	col('CUBE_INVEN_MAX').alias('CUBE_INVEN_MAX3'), 
	col('CUBE_HITS_MIN').alias('CUBE_HITS_MIN3'), 
	col('CUBE_HITS_MAX').alias('CUBE_HITS_MAX3'), 
	col('VISC_MIN').alias('VISC_MIN3'), 
	col('VISC_MAX').alias('VISC_MAX3'), 
	col('FILL_PERCENT_MIN').alias('FILL_PERCENT_MIN3'), 
	col('FILL_PERCENT_MAX').alias('FILL_PERCENT_MAX3'), 
	col('RESERVED_1').alias('RESERVED_13'), 
	col('RESERVED_2').alias('RESERVED_23'), 
	col('RESERVED_3').alias('RESERVED_33'), 
	col('RESERVED_4').alias('RESERVED_43'), 
	col('CREATE_DATE_TIME').alias('CREATE_DATE_TIME3'), 
	col('MOD_DATE_TIME').alias('MOD_DATE_TIME3'), 
	col('MOD_USER').alias('MOD_USER3'), 
	col('LOCATION_ID').alias('LOCATION_ID3'), 
	col('in_LOCATION_ID').alias('in_LOCATION_ID3'), 
	col('WM_RACK_TYPE_ID').alias('WM_RACK_TYPE_ID3'), 
	col('WM_WHSE_CD').alias('WM_WHSE_CD3'), 
	col('WM_RACK_TYPE_NAME').alias('WM_RACK_TYPE_NAME3'), 
	col('WM_RACK_TYPE_DESC').alias('WM_RACK_TYPE_DESC3'), 
	col('SEQ_NBR').alias('SEQ_NBR3'), 
	col('WM_REF_LEVEL_ID').alias('WM_REF_LEVEL_ID3'), 
	col('in_RACK_CLASS').alias('in_RACK_CLASS3'), 
	col('in_FIX_LABELS').alias('in_FIX_LABELS3'), 
	col('in_MOVABLE_LABEL').alias('in_MOVABLE_LABEL3'), 
	col('in_LABEL_WID').alias('in_LABEL_WID3'), 
	col('in_OVERLAP_DIST').alias('in_OVERLAP_DIST3'), 
	col('in_HN_CONSIDER').alias('in_HN_CONSIDER3'), 
	col('in_UPRIGHT_THICKNESS').alias('in_UPRIGHT_THICKNESS3'), 
	col('in_FUNCTION_TYPE').alias('in_FUNCTION_TYPE3'), 
	col('in_OVERSTOCK_CONSIDER').alias('in_OVERSTOCK_CONSIDER3'), 
	col('in_USE_3D_SLOT').alias('in_USE_3D_SLOT3'), 
	col('in_WEEKS_IN_SLOT_CONSTRAINT').alias('in_WEEKS_IN_SLOT_CONSTRAINT3'), 
	col('in_NUM_OF_BAYS_AVAIL').alias('in_NUM_OF_BAYS_AVAIL3'), 
	col('in_WEEK_IN_SLOT').alias('in_WEEK_IN_SLOT3'), 
	col('in_PARENT_BT').alias('in_PARENT_BT3'), 
	col('in_WT_LIMIT').alias('in_WT_LIMIT3'), 
	col('in_HT').alias('in_HT3'), 
	col('in_WIDTH').alias('in_WIDTH3'), 
	col('in_DEPTH').alias('in_DEPTH3'), 
	col('in_CASE_HT_MIN').alias('in_CASE_HT_MIN3'), 
	col('in_CASE_HT_MAX').alias('in_CASE_HT_MAX3'), 
	col('CASE_LEN_MIN1').alias('CASE_LEN_MIN13'), 
	col('CASE_LEN_MAX1').alias('CASE_LEN_MAX13'), 
	col('CASE_WID_MIN1').alias('CASE_WID_MIN13'), 
	col('CASE_WID_MAX1').alias('CASE_WID_MAX13'), 
	col('CASE_WT_MIN1').alias('CASE_WT_MIN13'), 
	col('CASE_WT_MAX1').alias('CASE_WT_MAX13'), 
	col('CASE_CUBE_MIN1').alias('CASE_CUBE_MIN13'), 
	col('CASE_CUBE_MAX1').alias('CASE_CUBE_MAX13'), 
	col('CASE_INVEN_MIN1').alias('CASE_INVEN_MIN13'), 
	col('CASE_INVEN_MAX1').alias('CASE_INVEN_MAX13'), 
	col('CASE_MOVE_MIN1').alias('CASE_MOVE_MIN13'), 
	col('CASE_MOVE_MAX1').alias('CASE_MOVE_MAX13'), 
	col('CASE_HITS_MIN1').alias('CASE_HITS_MIN13'), 
	col('CASE_HITS_MAX1').alias('CASE_HITS_MAX13'), 
	col('INNER_HT_MIN1').alias('INNER_HT_MIN13'), 
	col('INNER_HT_MAX1').alias('INNER_HT_MAX13'), 
	col('INNER_LEN_MIN1').alias('INNER_LEN_MIN13'), 
	col('INNER_LEN_MAX1').alias('INNER_LEN_MAX13'), 
	col('INNER_WID_MIN1').alias('INNER_WID_MIN13'), 
	col('INNER_WID_MAX1').alias('INNER_WID_MAX13'), 
	col('INNER_WT_MIN1').alias('INNER_WT_MIN13'), 
	col('INNER_WT_MAX1').alias('INNER_WT_MAX13'), 
	col('INNER_CUBE_MIN1').alias('INNER_CUBE_MIN13'), 
	col('INNER_CUBE_MAX1').alias('INNER_CUBE_MAX13'), 
	col('EACH_HT_MIN1').alias('EACH_HT_MIN13'), 
	col('EACH_HT_MAX1').alias('EACH_HT_MAX13'), 
	col('EACH_LEN_MIN1').alias('EACH_LEN_MIN13'), 
	col('EACH_LEN_MAX1').alias('EACH_LEN_MAX13'), 
	col('EACH_WID_MIN1').alias('EACH_WID_MIN13'), 
	col('EACH_WID_MAX1').alias('EACH_WID_MAX13'), 
	col('EACH_WT_MIN1').alias('EACH_WT_MIN13'), 
	col('EACH_WT_MAX1').alias('EACH_WT_MAX13'), 
	col('EACH_CUBE_MIN1').alias('EACH_CUBE_MIN13'), 
	col('in_EACH_CUBE_MAX').alias('in_EACH_CUBE_MAX3'), 
	col('in_PALLET_INVEN_MIN').alias('in_PALLET_INVEN_MIN3'), 
	col('in_PALLET_INVEN_MAX').alias('in_PALLET_INVEN_MAX3'), 
	col('in_CUBE_MOVE_MIN').alias('in_CUBE_MOVE_MIN3'), 
	col('in_CUBE_MOVE_MAX').alias('in_CUBE_MOVE_MAX3'), 
	col('in_CUBE_HITS_MIN').alias('in_CUBE_HITS_MIN3'), 
	col('in_CUBE_HITS_MAX').alias('in_CUBE_HITS_MAX3'), 
	col('in_CUBE_INVEN_MIN').alias('in_CUBE_INVEN_MIN3'), 
	col('in_CUBE_INVEN_MAX').alias('in_CUBE_INVEN_MAX3'), 
	col('in_VISC_MIN').alias('in_VISC_MIN3'), 
	col('in_VISC_MAX').alias('in_VISC_MAX3'), 
	col('in_FILL_PERCENT_MIN').alias('in_FILL_PERCENT_MIN3'), 
	col('in_FILL_PERCENT_MAX').alias('in_FILL_PERCENT_MAX3'), 
	col('in_RESERVED_1').alias('in_RESERVED_13'), 
	col('in_RESERVED_2').alias('in_RESERVED_23'), 
	col('in_RESERVED_3').alias('in_RESERVED_33'), 
	col('in_RESERVED_4').alias('in_RESERVED_43'), 
	col('WM_MOD_USER').alias('WM_MOD_USER3'), 
	col('WM_CREATE_TSTMP').alias('WM_CREATE_TSTMP3'), 
	col('WM_MOD_TSTMP').alias('WM_MOD_TSTMP3'), 
	col('in_LOAD_TSTMP').alias('in_LOAD_TSTMP3'), 
	col('DELETE_FLAG').alias('DELETE_FLAG3'), 
	col('UPDATE_TSTMP').alias('UPDATE_TSTMP3'), 
	col('LOAD_TSTMP_exp').alias('LOAD_TSTMP_exp3'), 
	col('DELETE_FLAG_exp').alias('DELETE_FLAG_exp3'), 
	col('o_UPD_VALIDATOR').alias('o_UPD_VALIDATOR3')).filter("o_UPD_VALIDATOR = 'DELETE'")


# COMMAND ----------
# Processing node UPD_INS_UPD, type UPDATE_STRATEGY 
# COLUMN COUNT: 84

# for each involved DataFrame, append the dataframe name to each column
RTR_UPSERT_DELETE_INSERT_UPDATE_temp = RTR_UPSERT_DELETE_INSERT_UPDATE.toDF(*["RTR_UPSERT_DELETE_INSERT_UPDATE___" + col for col in RTR_UPSERT_DELETE_INSERT_UPDATE.columns])

UPD_INS_UPD = RTR_UPSERT_DELETE_INSERT_UPDATE_temp.selectExpr( 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___LOCATION_ID1 as LOCATION_ID1", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___RACK_TYPE1 as RACK_TYPE1", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___WHSE_CODE1 as WHSE_CODE1", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___RT_NAME1 as RT_NAME1", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___RACK_TYPE_DESC1 as RACK_TYPE_DESC1", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___SEQUENCE1 as SEQUENCE1", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___REF_LEVEL_ID1 as REF_LEVEL_ID1", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___RACK_CLASS1 as RACK_CLASS1", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___FIX_LABELS1 as FIX_LABELS1", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___LABEL_WID1 as LABEL_WID1", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___OVERLAP_DIST1 as OVERLAP_DIST1", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___MOVABLE_LABEL1 as MOVABLE_LABEL1", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___HN_CONSIDER1 as HN_CONSIDER1", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___UPRIGHT_THICKNESS1 as UPRIGHT_THICKNESS1", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___FUNCTION_TYPE1 as FUNCTION_TYPE1", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___OVERSTOCK_CONSIDER1 as OVERSTOCK_CONSIDER1", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___USE_3D_SLOT1 as USE_3D_SLOT1", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___WEEKS_IN_SLOT_CONSTRAINT1 as WEEKS_IN_SLOT_CONSTRAINT1", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___NUM_OF_BAYS_AVAIL1 as NUM_OF_BAYS_AVAIL1", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___WEEK_IN_SLOT1 as WEEK_IN_SLOT1", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___PARENT_BT1 as PARENT_BT1", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___WT_LIMIT1 as WT_LIMIT1", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___HT1 as HT1", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___WIDTH1 as WIDTH1", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___DEPTH1 as DEPTH1", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___CASE_HT_MIN1 as CASE_HT_MIN1", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___CASE_HT_MAX1 as CASE_HT_MAX1", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___CASE_LEN_MIN2 as CASE_LEN_MIN2", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___CASE_LEN_MAX2 as CASE_LEN_MAX2", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___CASE_WID_MIN2 as CASE_WID_MIN2", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___CASE_WID_MAX2 as CASE_WID_MAX2", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___CASE_WT_MIN2 as CASE_WT_MIN2", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___CASE_WT_MAX2 as CASE_WT_MAX2", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___CASE_CUBE_MIN2 as CASE_CUBE_MIN2", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___CASE_CUBE_MAX2 as CASE_CUBE_MAX2", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___CASE_INVEN_MIN2 as CASE_INVEN_MIN2", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___CASE_INVEN_MAX2 as CASE_INVEN_MAX2", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___CASE_MOVE_MIN2 as CASE_MOVE_MIN2", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___CASE_MOVE_MAX2 as CASE_MOVE_MAX2", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___CASE_HITS_MIN2 as CASE_HITS_MIN2", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___CASE_HITS_MAX2 as CASE_HITS_MAX2", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___INNER_HT_MIN2 as INNER_HT_MIN2", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___INNER_HT_MAX2 as INNER_HT_MAX2", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___INNER_LEN_MIN2 as INNER_LEN_MIN2", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___INNER_LEN_MAX2 as INNER_LEN_MAX2", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___INNER_WID_MIN2 as INNER_WID_MIN2", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___INNER_WID_MAX2 as INNER_WID_MAX2", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___INNER_WT_MIN2 as INNER_WT_MIN2", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___INNER_WT_MAX2 as INNER_WT_MAX2", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___INNER_CUBE_MIN2 as INNER_CUBE_MIN2", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___INNER_CUBE_MAX2 as INNER_CUBE_MAX2", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___EACH_HT_MIN2 as EACH_HT_MIN2", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___EACH_HT_MAX2 as EACH_HT_MAX2", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___EACH_LEN_MIN2 as EACH_LEN_MIN2", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___EACH_LEN_MAX2 as EACH_LEN_MAX2", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___EACH_WID_MIN2 as EACH_WID_MIN2", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___EACH_WID_MAX2 as EACH_WID_MAX2", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___EACH_WT_MIN2 as EACH_WT_MIN2", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___EACH_WT_MAX2 as EACH_WT_MAX2", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___EACH_CUBE_MIN2 as EACH_CUBE_MIN2", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___EACH_CUBE_MAX1 as EACH_CUBE_MAX1", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___PALLET_INVEN_MIN1 as PALLET_INVEN_MIN1", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___PALLET_INVEN_MAX1 as PALLET_INVEN_MAX1", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___CUBE_MOVE_MIN1 as CUBE_MOVE_MIN1", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___CUBE_MOVE_MAX1 as CUBE_MOVE_MAX1", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___CUBE_HITS_MIN1 as CUBE_HITS_MIN1", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___CUBE_HITS_MAX1 as CUBE_HITS_MAX1", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___CUBE_INVEN_MIN1 as CUBE_INVEN_MIN1", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___CUBE_INVEN_MAX1 as CUBE_INVEN_MAX1", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___VISC_MIN1 as VISC_MIN1", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___VISC_MAX1 as VISC_MAX1", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___FILL_PERCENT_MIN1 as FILL_PERCENT_MIN1", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___FILL_PERCENT_MAX1 as FILL_PERCENT_MAX1", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___RESERVED_11 as RESERVED_11", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___RESERVED_21 as RESERVED_21", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___RESERVED_31 as RESERVED_31", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___RESERVED_41 as RESERVED_41", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___MOD_USER1 as MOD_USER1", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___CREATE_DATE_TIME1 as CREATE_DATE_TIME1", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___MOD_DATE_TIME1 as MOD_DATE_TIME1", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___DELETE_FLAG_exp1 as DELETE_FLAG_exp1", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___UPDATE_TSTMP1 as UPDATE_TSTMP1", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___LOAD_TSTMP_exp1 as LOAD_TSTMP_exp1", 
	"RTR_UPSERT_DELETE_INSERT_UPDATE___o_UPD_VALIDATOR1 as o_UPD_VALIDATOR1"
).withColumn('pyspark_data_action', when(col('o_UPD_VALIDATOR1') ==(lit('INSERT')),lit(0)).when(col('o_UPD_VALIDATOR1') ==(lit('UPDATE')),lit(1)))


# COMMAND ----------
# Processing node UPD_DELETE, type UPDATE_STRATEGY 
# COLUMN COUNT: 83

# for each involved DataFrame, append the dataframe name to each column
RTR_UPSERT_DELETE_NEWGROUP2_temp = RTR_UPSERT_DELETE_NEWGROUP2.toDF(*["RTR_UPSERT_DELETE_NEWGROUP2___" + col for col in RTR_UPSERT_DELETE_NEWGROUP2.columns])

UPD_DELETE = RTR_UPSERT_DELETE_NEWGROUP2_temp.selectExpr( 
	"RTR_UPSERT_DELETE_NEWGROUP2___in_LOCATION_ID3 as in_LOCATION_ID3", 
	"RTR_UPSERT_DELETE_NEWGROUP2___WM_RACK_TYPE_ID3 as WM_RACK_TYPE_ID3", 
	"RTR_UPSERT_DELETE_NEWGROUP2___WM_WHSE_CD3 as WM_WHSE_CD3", 
	"RTR_UPSERT_DELETE_NEWGROUP2___WM_RACK_TYPE_NAME3 as WM_RACK_TYPE_NAME3", 
	"RTR_UPSERT_DELETE_NEWGROUP2___WM_RACK_TYPE_DESC3 as WM_RACK_TYPE_DESC3", 
	"RTR_UPSERT_DELETE_NEWGROUP2___SEQ_NBR3 as SEQ_NBR3", 
	"RTR_UPSERT_DELETE_NEWGROUP2___WM_REF_LEVEL_ID3 as WM_REF_LEVEL_ID3", 
	"RTR_UPSERT_DELETE_NEWGROUP2___in_RACK_CLASS3 as in_RACK_CLASS3", 
	"RTR_UPSERT_DELETE_NEWGROUP2___in_FIX_LABELS3 as in_FIX_LABELS3", 
	"RTR_UPSERT_DELETE_NEWGROUP2___in_MOVABLE_LABEL3 as in_MOVABLE_LABEL3", 
	"RTR_UPSERT_DELETE_NEWGROUP2___in_LABEL_WID3 as in_LABEL_WID3", 
	"RTR_UPSERT_DELETE_NEWGROUP2___in_OVERLAP_DIST3 as in_OVERLAP_DIST3", 
	"RTR_UPSERT_DELETE_NEWGROUP2___in_HN_CONSIDER3 as in_HN_CONSIDER3", 
	"RTR_UPSERT_DELETE_NEWGROUP2___in_UPRIGHT_THICKNESS3 as in_UPRIGHT_THICKNESS3", 
	"RTR_UPSERT_DELETE_NEWGROUP2___in_FUNCTION_TYPE3 as in_FUNCTION_TYPE3", 
	"RTR_UPSERT_DELETE_NEWGROUP2___in_OVERSTOCK_CONSIDER3 as in_OVERSTOCK_CONSIDER3", 
	"RTR_UPSERT_DELETE_NEWGROUP2___in_USE_3D_SLOT3 as in_USE_3D_SLOT3", 
	"RTR_UPSERT_DELETE_NEWGROUP2___in_WEEKS_IN_SLOT_CONSTRAINT3 as in_WEEKS_IN_SLOT_CONSTRAINT3", 
	"RTR_UPSERT_DELETE_NEWGROUP2___in_NUM_OF_BAYS_AVAIL3 as in_NUM_OF_BAYS_AVAIL3", 
	"RTR_UPSERT_DELETE_NEWGROUP2___in_WEEK_IN_SLOT3 as in_WEEK_IN_SLOT3", 
	"RTR_UPSERT_DELETE_NEWGROUP2___in_PARENT_BT3 as in_PARENT_BT3", 
	"RTR_UPSERT_DELETE_NEWGROUP2___in_WT_LIMIT3 as in_WT_LIMIT3", 
	"RTR_UPSERT_DELETE_NEWGROUP2___in_HT3 as in_HT3", 
	"RTR_UPSERT_DELETE_NEWGROUP2___in_WIDTH3 as in_WIDTH3", 
	"RTR_UPSERT_DELETE_NEWGROUP2___in_DEPTH3 as in_DEPTH3", 
	"RTR_UPSERT_DELETE_NEWGROUP2___in_CASE_HT_MIN3 as in_CASE_HT_MIN3", 
	"RTR_UPSERT_DELETE_NEWGROUP2___in_CASE_HT_MAX3 as in_CASE_HT_MAX3", 
	"RTR_UPSERT_DELETE_NEWGROUP2___CASE_LEN_MIN13 as CASE_LEN_MIN13", 
	"RTR_UPSERT_DELETE_NEWGROUP2___CASE_LEN_MAX13 as CASE_LEN_MAX13", 
	"RTR_UPSERT_DELETE_NEWGROUP2___CASE_WID_MIN13 as CASE_WID_MIN13", 
	"RTR_UPSERT_DELETE_NEWGROUP2___CASE_WID_MAX13 as CASE_WID_MAX13", 
	"RTR_UPSERT_DELETE_NEWGROUP2___CASE_WT_MIN13 as CASE_WT_MIN13", 
	"RTR_UPSERT_DELETE_NEWGROUP2___CASE_WT_MAX13 as CASE_WT_MAX13", 
	"RTR_UPSERT_DELETE_NEWGROUP2___CASE_CUBE_MIN13 as CASE_CUBE_MIN13", 
	"RTR_UPSERT_DELETE_NEWGROUP2___CASE_CUBE_MAX13 as CASE_CUBE_MAX13", 
	"RTR_UPSERT_DELETE_NEWGROUP2___CASE_INVEN_MIN13 as CASE_INVEN_MIN13", 
	"RTR_UPSERT_DELETE_NEWGROUP2___CASE_INVEN_MAX13 as CASE_INVEN_MAX13", 
	"RTR_UPSERT_DELETE_NEWGROUP2___CASE_MOVE_MIN13 as CASE_MOVE_MIN13", 
	"RTR_UPSERT_DELETE_NEWGROUP2___CASE_MOVE_MAX13 as CASE_MOVE_MAX13", 
	"RTR_UPSERT_DELETE_NEWGROUP2___CASE_HITS_MIN13 as CASE_HITS_MIN13", 
	"RTR_UPSERT_DELETE_NEWGROUP2___CASE_HITS_MAX13 as CASE_HITS_MAX13", 
	"RTR_UPSERT_DELETE_NEWGROUP2___INNER_HT_MIN13 as INNER_HT_MIN13", 
	"RTR_UPSERT_DELETE_NEWGROUP2___INNER_HT_MAX13 as INNER_HT_MAX13", 
	"RTR_UPSERT_DELETE_NEWGROUP2___INNER_LEN_MIN13 as INNER_LEN_MIN13", 
	"RTR_UPSERT_DELETE_NEWGROUP2___INNER_LEN_MAX13 as INNER_LEN_MAX13", 
	"RTR_UPSERT_DELETE_NEWGROUP2___INNER_WID_MIN13 as INNER_WID_MIN13", 
	"RTR_UPSERT_DELETE_NEWGROUP2___INNER_WID_MAX13 as INNER_WID_MAX13", 
	"RTR_UPSERT_DELETE_NEWGROUP2___INNER_WT_MIN13 as INNER_WT_MIN13", 
	"RTR_UPSERT_DELETE_NEWGROUP2___INNER_WT_MAX13 as INNER_WT_MAX13", 
	"RTR_UPSERT_DELETE_NEWGROUP2___INNER_CUBE_MIN13 as INNER_CUBE_MIN13", 
	"RTR_UPSERT_DELETE_NEWGROUP2___INNER_CUBE_MAX13 as INNER_CUBE_MAX13", 
	"RTR_UPSERT_DELETE_NEWGROUP2___EACH_HT_MIN13 as EACH_HT_MIN13", 
	"RTR_UPSERT_DELETE_NEWGROUP2___EACH_HT_MAX13 as EACH_HT_MAX13", 
	"RTR_UPSERT_DELETE_NEWGROUP2___EACH_LEN_MIN13 as EACH_LEN_MIN13", 
	"RTR_UPSERT_DELETE_NEWGROUP2___EACH_LEN_MAX13 as EACH_LEN_MAX13", 
	"RTR_UPSERT_DELETE_NEWGROUP2___EACH_WID_MIN13 as EACH_WID_MIN13", 
	"RTR_UPSERT_DELETE_NEWGROUP2___EACH_WID_MAX13 as EACH_WID_MAX13", 
	"RTR_UPSERT_DELETE_NEWGROUP2___EACH_WT_MIN13 as EACH_WT_MIN13", 
	"RTR_UPSERT_DELETE_NEWGROUP2___EACH_WT_MAX13 as EACH_WT_MAX13", 
	"RTR_UPSERT_DELETE_NEWGROUP2___EACH_CUBE_MIN13 as EACH_CUBE_MIN13", 
	"RTR_UPSERT_DELETE_NEWGROUP2___in_EACH_CUBE_MAX3 as in_EACH_CUBE_MAX3", 
	"RTR_UPSERT_DELETE_NEWGROUP2___in_PALLET_INVEN_MIN3 as in_PALLET_INVEN_MIN3", 
	"RTR_UPSERT_DELETE_NEWGROUP2___in_PALLET_INVEN_MAX3 as in_PALLET_INVEN_MAX3", 
	"RTR_UPSERT_DELETE_NEWGROUP2___in_CUBE_MOVE_MIN3 as in_CUBE_MOVE_MIN3", 
	"RTR_UPSERT_DELETE_NEWGROUP2___in_CUBE_MOVE_MAX3 as in_CUBE_MOVE_MAX3", 
	"RTR_UPSERT_DELETE_NEWGROUP2___in_CUBE_HITS_MIN3 as in_CUBE_HITS_MIN3", 
	"RTR_UPSERT_DELETE_NEWGROUP2___in_CUBE_HITS_MAX3 as in_CUBE_HITS_MAX3", 
	"RTR_UPSERT_DELETE_NEWGROUP2___in_CUBE_INVEN_MIN3 as in_CUBE_INVEN_MIN3", 
	"RTR_UPSERT_DELETE_NEWGROUP2___in_CUBE_INVEN_MAX3 as in_CUBE_INVEN_MAX3", 
	"RTR_UPSERT_DELETE_NEWGROUP2___in_VISC_MIN3 as in_VISC_MIN3", 
	"RTR_UPSERT_DELETE_NEWGROUP2___in_VISC_MAX3 as in_VISC_MAX3", 
	"RTR_UPSERT_DELETE_NEWGROUP2___in_FILL_PERCENT_MIN3 as in_FILL_PERCENT_MIN3", 
	"RTR_UPSERT_DELETE_NEWGROUP2___in_FILL_PERCENT_MAX3 as in_FILL_PERCENT_MAX3", 
	"RTR_UPSERT_DELETE_NEWGROUP2___in_RESERVED_13 as in_RESERVED_13", 
	"RTR_UPSERT_DELETE_NEWGROUP2___in_RESERVED_23 as in_RESERVED_23", 
	"RTR_UPSERT_DELETE_NEWGROUP2___in_RESERVED_33 as in_RESERVED_33", 
	"RTR_UPSERT_DELETE_NEWGROUP2___in_RESERVED_43 as in_RESERVED_43", 
	"RTR_UPSERT_DELETE_NEWGROUP2___WM_MOD_USER3 as WM_MOD_USER3", 
	"RTR_UPSERT_DELETE_NEWGROUP2___WM_CREATE_TSTMP3 as WM_CREATE_TSTMP3", 
	"RTR_UPSERT_DELETE_NEWGROUP2___WM_MOD_TSTMP3 as WM_MOD_TSTMP3", 
	"RTR_UPSERT_DELETE_NEWGROUP2___DELETE_FLAG_exp3 as DELETE_FLAG_exp3", 
	"RTR_UPSERT_DELETE_NEWGROUP2___UPDATE_TSTMP3 as UPDATE_TSTMP3", 
	"RTR_UPSERT_DELETE_NEWGROUP2___LOAD_TSTMP_exp3 as LOAD_TSTMP_exp3"
).withColumn('pyspark_data_action', lit(1))

# COMMAND ----------
# Processing node Shortcut_to_WM_RACK_TYPE2, type TARGET 
# COLUMN COUNT: 83


Shortcut_to_WM_RACK_TYPE2 = UPD_DELETE.selectExpr( 
	"CAST(in_LOCATION_ID3 AS BIGINT) as LOCATION_ID", 
	"CAST(WM_RACK_TYPE_ID3 AS BIGINT) as WM_RACK_TYPE_ID", 
	"CAST(WM_CREATE_TSTMP3 AS TIMESTAMP) as WM_CREATE_TSTMP", 
	"CAST(WM_MOD_TSTMP3 AS TIMESTAMP) as WM_MOD_TSTMP", 
	"CAST(DELETE_FLAG_exp3 AS TINYINT) as DELETE_FLAG" 
)
# Shortcut_to_WM_RACK_TYPE2.write.saveAsTable(f'{raw}.WM_RACK_TYPE')
Shortcut_to_WM_RACK_TYPE2.createOrReplaceTempView('WM_RACK_TYPE_DEL')

spark.sql(f"""
          MERGE INTO {refined_perf_table} trg
          USING WM_RACK_TYPE_DEL src
          ON (src.LOCATION_ID = trg.LOCATION_ID AND src.WM_RACK_TYPE_ID = trg.WM_RACK_TYPE_ID )
          WHEN MATCHED THEN UPDATE SET trg.DELETE_FLAG = src.DELETE_FLAG , trg.UPDATE_TSTMP = CURRENT_TIMESTAMP()
          """)


# COMMAND ----------
# Processing node Shortcut_to_WM_RACK_TYPE1, type TARGET 
# COLUMN COUNT: 83


Shortcut_to_WM_RACK_TYPE1 = UPD_INS_UPD.selectExpr(
	"CAST(LOCATION_ID1 AS BIGINT) as LOCATION_ID",
	"CAST(RACK_TYPE1 AS BIGINT) as WM_RACK_TYPE_ID",
	"CAST(WHSE_CODE1 AS STRING) as WM_WHSE_CD",
	"CAST(RT_NAME1 AS STRING) as WM_RACK_TYPE_NAME",
	"CAST(RACK_TYPE_DESC1 AS STRING) as WM_RACK_TYPE_DESC",
	"CAST(SEQUENCE1 AS BIGINT) as SEQ_NBR",
	"CAST(REF_LEVEL_ID1 AS BIGINT) as WM_REF_LEVEL_ID",
	"CAST(RACK_CLASS1 AS BIGINT) as RACK_CLASS",
	"CAST(FIX_LABELS1 AS TINYINT) as FIX_LABELS",
	"CAST(MOVABLE_LABEL1 AS TINYINT) as MOVABLE_LABEL",
	"CAST(LABEL_WID1 AS DECIMAL(13,4)) as LABEL_WID",
	"CAST(OVERLAP_DIST1 AS DECIMAL(13,4)) as OVERLAP_DIST",
	"CAST(HN_CONSIDER1 AS TINYINT) as HN_CONSIDER",
	"CAST(UPRIGHT_THICKNESS1 AS DECIMAL(9,4)) as UPRIGHT_THICKNESS",
	"CAST(FUNCTION_TYPE1 AS SMALLINT) as FUNCTION_TYPE",
	"CAST(OVERSTOCK_CONSIDER1 AS TINYINT) as OVERSTOCK_CONSIDER",
	"CAST(USE_3D_SLOT1 AS TINYINT) as USE_3D_SLOT",
	"CAST(WEEKS_IN_SLOT_CONSTRAINT1 AS TINYINT) as WEEKS_IN_SLOT_CONSTRAINT",
	"CAST(NUM_OF_BAYS_AVAIL1 AS DECIMAL(13,4)) as NUM_OF_BAYS_AVAIL",
	"CAST(WEEK_IN_SLOT1 AS DECIMAL(13,4)) as WEEK_IN_SLOT",
	"CAST(PARENT_BT1 AS BIGINT) as PARENT_BT",
	"CAST(WT_LIMIT1 AS DECIMAL(13,4)) as WT_LIMIT",
	"CAST(HT1 AS DECIMAL(13,4)) as HT",
	"CAST(WIDTH1 AS DECIMAL(13,4)) as WIDTH",
	"CAST(DEPTH1 AS DECIMAL(13,4)) as DEPTH",
	"CAST(CASE_HT_MIN1 AS DECIMAL(13,4)) as CASE_HT_MIN",
	"CAST(CASE_HT_MAX1 AS DECIMAL(13,4)) as CASE_HT_MAX",
	"CAST(CASE_LEN_MIN2 AS DECIMAL(13,4)) as CASE_LEN_MIN",
	"CAST(CASE_LEN_MAX2 AS DECIMAL(13,4)) as CASE_LEN_MAX",
	"CAST(CASE_WID_MIN2 AS DECIMAL(13,4)) as CASE_WID_MIN",
	"CAST(CASE_WID_MAX2 AS DECIMAL(13,4)) as CASE_WID_MAX",
	"CAST(CASE_WT_MIN2 AS DECIMAL(13,4)) as CASE_WT_MIN",
	"CAST(CASE_WT_MAX2 AS DECIMAL(13,4)) as CASE_WT_MAX",
	"CAST(CASE_CUBE_MIN2 AS DECIMAL(13,4)) as CASE_CUBE_MIN",
	"CAST(CASE_CUBE_MAX2 AS DECIMAL(13,4)) as CASE_CUBE_MAX",
	"CAST(CASE_INVEN_MIN2 AS DECIMAL(13,4)) as CASE_INVEN_MIN",
	"CAST(CASE_INVEN_MAX2 AS DECIMAL(13,4)) as CASE_INVEN_MAX",
	"CAST(CASE_MOVE_MIN2 AS DECIMAL(13,4)) as CASE_MOVE_MIN",
	"CAST(CASE_MOVE_MAX2 AS DECIMAL(13,4)) as CASE_MOVE_MAX",
	"CAST(CASE_HITS_MIN2 AS DECIMAL(13,4)) as CASE_HITS_MIN",
	"CAST(CASE_HITS_MAX2 AS DECIMAL(13,4)) as CASE_HITS_MAX",
	"CAST(INNER_HT_MIN2 AS DECIMAL(13,4)) as INNER_HT_MIN",
	"CAST(INNER_HT_MAX2 AS DECIMAL(13,4)) as INNER_HT_MAX",
	"CAST(INNER_LEN_MIN2 AS DECIMAL(13,4)) as INNER_LEN_MIN",
	"CAST(INNER_LEN_MAX2 AS DECIMAL(13,4)) as INNER_LEN_MAX",
	"CAST(INNER_WID_MIN2 AS DECIMAL(13,4)) as INNER_WID_MIN",
	"CAST(INNER_WID_MAX2 AS DECIMAL(13,4)) as INNER_WID_MAX",
	"CAST(INNER_WT_MIN2 AS DECIMAL(13,4)) as INNER_WT_MIN",
	"CAST(INNER_WT_MAX2 AS DECIMAL(13,4)) as INNER_WT_MAX",
	"CAST(INNER_CUBE_MIN2 AS DECIMAL(13,4)) as INNER_CUBE_MIN",
	"CAST(INNER_CUBE_MAX2 AS DECIMAL(13,4)) as INNER_CUBE_MAX",
	"CAST(EACH_HT_MIN2 AS DECIMAL(13,4)) as EACH_HT_MIN",
	"CAST(EACH_HT_MAX2 AS DECIMAL(13,4)) as EACH_HT_MAX",
	"CAST(EACH_LEN_MIN2 AS DECIMAL(13,4)) as EACH_LEN_MIN",
	"CAST(EACH_LEN_MAX2 AS DECIMAL(13,4)) as EACH_LEN_MAX",
	"CAST(EACH_WID_MIN2 AS DECIMAL(13,4)) as EACH_WID_MIN",
	"CAST(EACH_WID_MAX2 AS DECIMAL(13,4)) as EACH_WID_MAX",
	"CAST(EACH_WT_MIN2 AS DECIMAL(13,4)) as EACH_WT_MIN",
	"CAST(EACH_WT_MAX2 AS DECIMAL(13,4)) as EACH_WT_MAX",
	"CAST(EACH_CUBE_MIN2 AS DECIMAL(13,4)) as EACH_CUBE_MIN",
	"CAST(EACH_CUBE_MAX1 AS DECIMAL(13,4)) as EACH_CUBE_MAX",
	"CAST(PALLET_INVEN_MIN1 AS DECIMAL(13,4)) as PALLET_INVEN_MIN",
	"CAST(PALLET_INVEN_MAX1 AS DECIMAL(13,4)) as PALLET_INVEN_MAX",
	"CAST(CUBE_MOVE_MIN1 AS DECIMAL(13,4)) as CUBE_MOVE_MIN",
	"CAST(CUBE_MOVE_MAX1 AS DECIMAL(13,4)) as CUBE_MOVE_MAX",
	"CAST(CUBE_HITS_MIN1 AS DECIMAL(13,4)) as CUBE_HITS_MIN",
	"CAST(CUBE_HITS_MAX1 AS DECIMAL(13,4)) as CUBE_HITS_MAX",
	"CAST(CUBE_INVEN_MIN1 AS DECIMAL(13,4)) as CUBE_INVEN_MIN",
	"CAST(CUBE_INVEN_MAX1 AS DECIMAL(13,4)) as CUBE_INVEN_MAX",
	"CAST(VISC_MIN1 AS DECIMAL(13,4)) as VISC_MIN",
	"CAST(VISC_MAX1 AS DECIMAL(13,4)) as VISC_MAX",
	"CAST(FILL_PERCENT_MIN1 AS DECIMAL(5,2)) as FILL_PERCENT_MIN",
	"CAST(FILL_PERCENT_MAX1 AS DECIMAL(5,2)) as FILL_PERCENT_MAX",
	"CAST(RESERVED_11 AS STRING) as RESERVED_1",
	"CAST(RESERVED_21 AS STRING) as RESERVED_2",
	"CAST(RESERVED_31 AS BIGINT) as RESERVED_3",
	"CAST(RESERVED_41 AS BIGINT) as RESERVED_4",
	"CAST(MOD_USER1 AS STRING) as WM_MOD_USER",
	"CAST(CREATE_DATE_TIME1 AS TIMESTAMP) as WM_CREATE_TSTMP",
	"CAST(MOD_DATE_TIME1 AS TIMESTAMP) as WM_MOD_TSTMP",
	"CAST(DELETE_FLAG_exp1 AS TINYINT) as DELETE_FLAG",
	"CAST(UPDATE_TSTMP1 AS TIMESTAMP) as UPDATE_TSTMP",
	"CAST(LOAD_TSTMP_exp1 AS TIMESTAMP) as LOAD_TSTMP", 
    "pyspark_data_action"
)

try:
  primary_key = """source.LOCATION_ID = target.LOCATION_ID AND source.WM_RACK_TYPE_ID = target.WM_RACK_TYPE_ID"""
  # refined_perf_table = "WM_RACK_TYPE"
  executeMerge(Shortcut_to_WM_RACK_TYPE1, refined_perf_table, primary_key)
  logger.info(f"Merge with {refined_perf_table} completed]")
  logPrevRunDt("WM_RACK_TYPE", "WM_RACK_TYPE", "Completed", "N/A", f"{raw}.log_run_details")
except Exception as e:
  logPrevRunDt("WM_RACK_TYPE", "WM_RACK_TYPE","Failed",str(e), f"{raw}.log_run_details", )
  raise e
	