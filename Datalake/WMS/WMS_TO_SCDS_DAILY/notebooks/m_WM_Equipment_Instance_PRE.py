#Code converted on 2023-06-24 13:41:03
import os
import argparse
from pyspark.sql import *
from pyspark.sql.functions import *
from pyspark.sql.window import Window
from pyspark.sql.types import *
from datetime import datetime
from pyspark.dbutils import DBUtils
from Datalake.utils.genericUtilities import *
from Datalake.utils.configs import *
from Datalake.utils.mergeUtils import *
from logging import getLogger, INFO



def m_WM_Equipment_Instance_PRE(dcnbr, env):
    from logging import getLogger, INFO
    logger = getLogger()
    logger.info("inside m_WM_Equipment_Instance_PRE function")

    spark = SparkSession.getActiveSession()
    dbutils = DBUtils(spark)

    if env is None or env == '':
        raise ValueError('env is not set')

    refine = getEnvPrefix(env) + 'refine'
    raw = getEnvPrefix(env) + 'raw'
    tableName = "WM_EQUIPMENT_INSTANCE_PRE"

    schemaName = raw
    source_schema = "WMSMIS"


    target_table_name = schemaName + "." + tableName

    refine_table_name = tableName[:-4]


    # Set global variables
    if dcnbr is None or dcnbr == "":
        raise ValueError("DC_NBR is not set")

    starttime = datetime.now() #start timestamp of the script

    # Read in relation source variables
    (username, password, connection_string) = getConfig(dcnbr, env)

    # COMMAND ----------
    # Variable_declaration_comment
    dcnbr = dcnbr.strip()[2:]
    Prev_Run_Dt=genPrevRunDt(refine_table_name, refine,raw)

    # COMMAND ----------
    # Processing node SQ_Shortcut_to_EQUIPMENT_INSTANCE, type SOURCE 
    # COLUMN COUNT: 98

    SQ_Shortcut_to_EQUIPMENT_INSTANCE = jdbcOracleConnection(
                    f"""SELECT
                EQUIPMENT_INSTANCE.EQUIPMENT_INSTANCE_ID,
                EQUIPMENT_INSTANCE.TC_COMPANY_ID,
                EQUIPMENT_INSTANCE.EQUIP_INST_STATUS,
                EQUIPMENT_INSTANCE.CONDITION_TYPE,
                EQUIPMENT_INSTANCE.DESCRIPTION,
                EQUIPMENT_INSTANCE.IS_LOCKED,
                EQUIPMENT_INSTANCE.MARK_FOR_DELETION,
                EQUIPMENT_INSTANCE.CREATED_SOURCE_TYPE,
                EQUIPMENT_INSTANCE.CREATED_SOURCE,
                EQUIPMENT_INSTANCE.CREATED_DTTM,
                EQUIPMENT_INSTANCE.LAST_UPDATED_SOURCE_TYPE,
                EQUIPMENT_INSTANCE.LAST_UPDATED_SOURCE,
                EQUIPMENT_INSTANCE.LAST_UPDATED_DTTM,
                EQUIPMENT_INSTANCE.LICENSE_TAG_NUMBER,
                EQUIPMENT_INSTANCE.LICENSE_STATE_PROV,
                EQUIPMENT_INSTANCE.LICENSE_COUNTRY_CODE,
                EQUIPMENT_INSTANCE.EQUIP_DOOR_TYPE,
                EQUIPMENT_INSTANCE.COMMENTS,
                EQUIPMENT_INSTANCE.CURRENT_LOCATION_ID,
                EQUIPMENT_INSTANCE.ASSIGNED_LOCATION_ID,
                EQUIPMENT_INSTANCE.CURRENT_APPOINTMENT_ID,
                EQUIPMENT_INSTANCE.EQUIP_INST_REF_CARRIER,
                EQUIPMENT_INSTANCE.TP_COMPANY_ID,
                EQUIPMENT_INSTANCE.FOB_INDICATOR,
                EQUIPMENT_INSTANCE.DISPATCH_STATUS,
                EQUIPMENT_INSTANCE.HOME_DOMICILE_FACILITY_ID,
                EQUIPMENT_INSTANCE.HOME_DOMICILE_FAC_ALIAS_ID,
                EQUIPMENT_INSTANCE.CURRENT_FACILITY_ID,
                EQUIPMENT_INSTANCE.CURRENT_FACILITY_ALIAS_ID,
                EQUIPMENT_INSTANCE.LAST_MAINTENANCE_DTTM,
                EQUIPMENT_INSTANCE.NEXT_AVAILABLE_DTTM,
                EQUIPMENT_INSTANCE.SEAL_NUMBER,
                EQUIPMENT_INSTANCE.NEXT_AVAIL_ZIP,
                EQUIPMENT_INSTANCE.NEXT_AVAILABLE_TERM,
                EQUIPMENT_INSTANCE.NEXT_AVAIL_FACILITY_ID,
                EQUIPMENT_INSTANCE.IS_OBC_ONBOARD,
                EQUIPMENT_INSTANCE.IS_NON_SMOKING,
                EQUIPMENT_INSTANCE.HAS_NIGHT_HEATER,
                EQUIPMENT_INSTANCE.IS_RIGID,
                EQUIPMENT_INSTANCE.RIGID_EQUIPMENT_ID,
                EQUIPMENT_INSTANCE.SLEEPER_TYPE,
                EQUIPMENT_INSTANCE.ZONE_FACILITY_ID,
                EQUIPMENT_INSTANCE.ZONE_FACILITY_ALIAS_ID,
                EQUIPMENT_INSTANCE.ZONE_TYPE,
                EQUIPMENT_INSTANCE.MAINTENANCE_FACILITY_ID,
                EQUIPMENT_INSTANCE.MAINTENANCE_FACILITY_ALIAS_ID,
                EQUIPMENT_INSTANCE.MAINTENANCE_START_DTTM,
                EQUIPMENT_INSTANCE.MAINTENANCE_FREQUENCY_WEEKS,
                EQUIPMENT_INSTANCE.MAINTENANCE_DURATION,
                EQUIPMENT_INSTANCE.NEXT_MAINTENANCE_DTTM,
                EQUIPMENT_INSTANCE.HAS_ALERTS,
                EQUIPMENT_INSTANCE.LAST_KNOWN_DTTM,
                EQUIPMENT_INSTANCE.HAS_IMPORT_ERROR,
                EQUIPMENT_INSTANCE.HAS_SOFT_CHECK_ERROR,
                EQUIPMENT_INSTANCE.LAST_KNOWN_FACILITY_ID,
                EQUIPMENT_INSTANCE.LAST_KNOWN_FACILITY_ALIAS_ID,
                EQUIPMENT_INSTANCE.CONTRACT_START_DATE,
                EQUIPMENT_INSTANCE.CONTRACT_END_DATE,
                EQUIPMENT_INSTANCE.MAKE,
                EQUIPMENT_INSTANCE.MODEL,
                EQUIPMENT_INSTANCE.OWNERSHIP_TYPE,
                EQUIPMENT_INSTANCE.PLATED_WEIGHT,
                EQUIPMENT_INSTANCE.TAX_BAND_NAME,
                EQUIPMENT_INSTANCE.HOME_DSP_REGION_ID,
                EQUIPMENT_INSTANCE.LAST_KNOWN_DSP_REGION_ID,
                EQUIPMENT_INSTANCE.PER_USAGE_COST,
                EQUIPMENT_INSTANCE.PER_USAGE_COST_CURRENCY_CODE,
                EQUIPMENT_INSTANCE.CUST_LK_LOCATION_NAME,
                EQUIPMENT_INSTANCE.CUST_LK_ADDRESS,
                EQUIPMENT_INSTANCE.CUST_LK_CITY,
                EQUIPMENT_INSTANCE.CUST_LK_STATE,
                EQUIPMENT_INSTANCE.CUST_LK_POSTAL_CODE,
                EQUIPMENT_INSTANCE.CUST_LK_COUNTRY,
                EQUIPMENT_INSTANCE.LAST_KNOWN_TERM,
                EQUIPMENT_INSTANCE.IS_TANDEM_LEAD,
                EQUIPMENT_INSTANCE.CARRIER_ID,
                EQUIPMENT_INSTANCE.EQUIPMENT_ID,
                EQUIPMENT_INSTANCE.REASON_ID,
                EQUIPMENT_INSTANCE.PLATED_WEIGHT_SIZE_UOM_ID,
                EQUIPMENT_INSTANCE.IS_TANDEM_CAPABLE,
                EQUIPMENT_INSTANCE.USR_ENT_NEXT_AVAILABLE_DTTM,
                EQUIPMENT_INSTANCE.USR_ENT_NEXT_AVAILABLE_TERM,
                EQUIPMENT_INSTANCE.USR_ENT_NEXT_AVAIL_FACILITY_ID,
                EQUIPMENT_INSTANCE.CUST_NA_LOCATION_NAME,
                EQUIPMENT_INSTANCE.CUST_NA_ADDRESS,
                EQUIPMENT_INSTANCE.CUST_NA_CITY,
                EQUIPMENT_INSTANCE.CUST_NA_STATE,
                EQUIPMENT_INSTANCE.CUST_NA_POSTAL_CODE,
                EQUIPMENT_INSTANCE.CUST_NA_COUNTRY,
                EQUIPMENT_INSTANCE.HIBERNATE_VERSION,
                EQUIPMENT_INSTANCE.MILEAGE_SCHEDULE,
                EQUIPMENT_INSTANCE.MILEAGE_UOM,
                EQUIPMENT_INSTANCE.CURRENT_MILEAGE,
                EQUIPMENT_INSTANCE.LAST_MNT_MILEAGE,
                EQUIPMENT_INSTANCE.NEXT_MNT_MILEAGE,
                EQUIPMENT_INSTANCE.IS_LABOR,
                EQUIPMENT_INSTANCE.EQUIPMENT_BRCD,
                EQUIPMENT_INSTANCE.LOCK_REASON_CODE
            FROM {source_schema}.EQUIPMENT_INSTANCE
            WHERE (TRUNC( CREATED_DTTM) >= TRUNC( to_date('{Prev_Run_Dt}','YYYY-MM-DD'))-1) OR (TRUNC( LAST_UPDATED_DTTM) >=  TRUNC( to_date('{Prev_Run_Dt}','YYYY-MM-DD'))-1)""",username,password,connection_string).withColumn("sys_row_id", monotonically_increasing_id())

    # COMMAND ----------
    # Processing node EXPTRANS, type EXPRESSION 
    # COLUMN COUNT: 100

    # for each involved DataFrame, append the dataframe name to each column
    SQ_Shortcut_to_EQUIPMENT_INSTANCE_temp = SQ_Shortcut_to_EQUIPMENT_INSTANCE.toDF(*["SQ_Shortcut_to_EQUIPMENT_INSTANCE___" + col for col in SQ_Shortcut_to_EQUIPMENT_INSTANCE.columns])

    EXPTRANS = SQ_Shortcut_to_EQUIPMENT_INSTANCE_temp.selectExpr( 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___sys_row_id as sys_row_id", 
        f"{dcnbr} as DC_NBR_exp", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___EQUIPMENT_INSTANCE_ID as EQUIPMENT_INSTANCE_ID", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___TC_COMPANY_ID as TC_COMPANY_ID", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___EQUIP_INST_STATUS as EQUIP_INST_STATUS", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___CONDITION_TYPE as CONDITION_TYPE", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___DESCRIPTION as DESCRIPTION", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___IS_LOCKED as IS_LOCKED", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___MARK_FOR_DELETION as MARK_FOR_DELETION", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___CREATED_SOURCE_TYPE as CREATED_SOURCE_TYPE", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___CREATED_SOURCE as CREATED_SOURCE", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___CREATED_DTTM as CREATED_DTTM", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___LAST_UPDATED_SOURCE_TYPE as LAST_UPDATED_SOURCE_TYPE", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___LAST_UPDATED_SOURCE as LAST_UPDATED_SOURCE", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___LAST_UPDATED_DTTM as LAST_UPDATED_DTTM", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___LICENSE_TAG_NUMBER as LICENSE_TAG_NUMBER", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___LICENSE_STATE_PROV as LICENSE_STATE_PROV", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___LICENSE_COUNTRY_CODE as LICENSE_COUNTRY_CODE", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___EQUIP_DOOR_TYPE as EQUIP_DOOR_TYPE", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___COMMENTS as COMMENTS", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___CURRENT_LOCATION_ID as CURRENT_LOCATION_ID", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___ASSIGNED_LOCATION_ID as ASSIGNED_LOCATION_ID", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___CURRENT_APPOINTMENT_ID as CURRENT_APPOINTMENT_ID", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___EQUIP_INST_REF_CARRIER as EQUIP_INST_REF_CARRIER", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___TP_COMPANY_ID as TP_COMPANY_ID", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___FOB_INDICATOR as FOB_INDICATOR", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___DISPATCH_STATUS as DISPATCH_STATUS", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___HOME_DOMICILE_FACILITY_ID as HOME_DOMICILE_FACILITY_ID", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___HOME_DOMICILE_FAC_ALIAS_ID as HOME_DOMICILE_FAC_ALIAS_ID", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___CURRENT_FACILITY_ID as CURRENT_FACILITY_ID", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___CURRENT_FACILITY_ALIAS_ID as CURRENT_FACILITY_ALIAS_ID", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___LAST_MAINTENANCE_DTTM as LAST_MAINTENANCE_DTTM", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___NEXT_AVAILABLE_DTTM as NEXT_AVAILABLE_DTTM", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___SEAL_NUMBER as SEAL_NUMBER", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___NEXT_AVAIL_ZIP as NEXT_AVAIL_ZIP", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___NEXT_AVAILABLE_TERM as NEXT_AVAILABLE_TERM", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___NEXT_AVAIL_FACILITY_ID as NEXT_AVAIL_FACILITY_ID", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___IS_OBC_ONBOARD as IS_OBC_ONBOARD", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___IS_NON_SMOKING as IS_NON_SMOKING", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___HAS_NIGHT_HEATER as HAS_NIGHT_HEATER", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___IS_RIGID as IS_RIGID", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___RIGID_EQUIPMENT_ID as RIGID_EQUIPMENT_ID", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___SLEEPER_TYPE as SLEEPER_TYPE", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___ZONE_FACILITY_ID as ZONE_FACILITY_ID", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___ZONE_FACILITY_ALIAS_ID as ZONE_FACILITY_ALIAS_ID", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___ZONE_TYPE as ZONE_TYPE", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___MAINTENANCE_FACILITY_ID as MAINTENANCE_FACILITY_ID", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___MAINTENANCE_FACILITY_ALIAS_ID as MAINTENANCE_FACILITY_ALIAS_ID", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___MAINTENANCE_START_DTTM as MAINTENANCE_START_DTTM", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___MAINTENANCE_FREQUENCY_WEEKS as MAINTENANCE_FREQUENCY_WEEKS", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___MAINTENANCE_DURATION as MAINTENANCE_DURATION", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___NEXT_MAINTENANCE_DTTM as NEXT_MAINTENANCE_DTTM", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___HAS_ALERTS as HAS_ALERTS", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___LAST_KNOWN_DTTM as LAST_KNOWN_DTTM", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___HAS_IMPORT_ERROR as HAS_IMPORT_ERROR", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___HAS_SOFT_CHECK_ERROR as HAS_SOFT_CHECK_ERROR", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___LAST_KNOWN_FACILITY_ID as LAST_KNOWN_FACILITY_ID", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___LAST_KNOWN_FACILITY_ALIAS_ID as LAST_KNOWN_FACILITY_ALIAS_ID", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___CONTRACT_START_DATE as CONTRACT_START_DATE", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___CONTRACT_END_DATE as CONTRACT_END_DATE", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___MAKE as MAKE", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___MODEL as MODEL", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___OWNERSHIP_TYPE as OWNERSHIP_TYPE", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___PLATED_WEIGHT as PLATED_WEIGHT", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___TAX_BAND_NAME as TAX_BAND_NAME", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___HOME_DSP_REGION_ID as HOME_DSP_REGION_ID", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___LAST_KNOWN_DSP_REGION_ID as LAST_KNOWN_DSP_REGION_ID", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___PER_USAGE_COST as PER_USAGE_COST", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___PER_USAGE_COST_CURRENCY_CODE as PER_USAGE_COST_CURRENCY_CODE", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___CUST_LK_LOCATION_NAME as CUST_LK_LOCATION_NAME", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___CUST_LK_ADDRESS as CUST_LK_ADDRESS", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___CUST_LK_CITY as CUST_LK_CITY", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___CUST_LK_STATE as CUST_LK_STATE", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___CUST_LK_POSTAL_CODE as CUST_LK_POSTAL_CODE", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___CUST_LK_COUNTRY as CUST_LK_COUNTRY", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___LAST_KNOWN_TERM as LAST_KNOWN_TERM", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___IS_TANDEM_LEAD as IS_TANDEM_LEAD", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___CARRIER_ID as CARRIER_ID", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___EQUIPMENT_ID as EQUIPMENT_ID", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___REASON_ID as REASON_ID", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___PLATED_WEIGHT_SIZE_UOM_ID as PLATED_WEIGHT_SIZE_UOM_ID", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___IS_TANDEM_CAPABLE as IS_TANDEM_CAPABLE", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___USR_ENT_NEXT_AVAILABLE_DTTM as USR_ENT_NEXT_AVAILABLE_DTTM", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___USR_ENT_NEXT_AVAILABLE_TERM as USR_ENT_NEXT_AVAILABLE_TERM", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___USR_ENT_NEXT_AVAIL_FACILITY_ID as USR_ENT_NEXT_AVAIL_FACILITY_ID", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___CUST_NA_LOCATION_NAME as CUST_NA_LOCATION_NAME", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___CUST_NA_ADDRESS as CUST_NA_ADDRESS", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___CUST_NA_CITY as CUST_NA_CITY", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___CUST_NA_STATE as CUST_NA_STATE", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___CUST_NA_POSTAL_CODE as CUST_NA_POSTAL_CODE", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___CUST_NA_COUNTRY as CUST_NA_COUNTRY", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___HIBERNATE_VERSION as HIBERNATE_VERSION", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___MILEAGE_SCHEDULE as MILEAGE_SCHEDULE", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___MILEAGE_UOM as MILEAGE_UOM", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___CURRENT_MILEAGE as CURRENT_MILEAGE", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___LAST_MNT_MILEAGE as LAST_MNT_MILEAGE", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___NEXT_MNT_MILEAGE as NEXT_MNT_MILEAGE", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___IS_LABOR as IS_LABOR", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___EQUIPMENT_BRCD as EQUIPMENT_BRCD", 
        "SQ_Shortcut_to_EQUIPMENT_INSTANCE___LOCK_REASON_CODE as LOCK_REASON_CODE", 
        "CURRENT_TIMESTAMP() as LOADTSTMP" 
    )

    # COMMAND ----------
    # Processing node Shortcut_to_WM_EQUIPMENT_INSTANCE_PRE, type TARGET 
    # COLUMN COUNT: 100


    Shortcut_to_WM_EQUIPMENT_INSTANCE_PRE = EXPTRANS.selectExpr( 
        "CAST(DC_NBR_exp AS BIGINT) as DC_NBR", 
        "CAST(EQUIPMENT_INSTANCE_ID AS BIGINT) as EQUIPMENT_INSTANCE_ID", 
        "CAST(TC_COMPANY_ID AS BIGINT) as TC_COMPANY_ID", 
        "CAST(EQUIP_INST_STATUS AS BIGINT) as EQUIP_INST_STATUS", 
        "CAST(CONDITION_TYPE AS BIGINT) as CONDITION_TYPE", 
        "CAST(DESCRIPTION AS STRING) as DESCRIPTION", 
        "CAST(IS_LOCKED AS BIGINT) as IS_LOCKED", 
        "CAST(MARK_FOR_DELETION AS BIGINT) as MARK_FOR_DELETION", 
        "CAST(CREATED_SOURCE_TYPE AS BIGINT) as CREATED_SOURCE_TYPE", 
        "CAST(CREATED_SOURCE AS STRING) as CREATED_SOURCE", 
        "CAST(CREATED_DTTM AS TIMESTAMP) as CREATED_DTTM", 
        "CAST(LAST_UPDATED_SOURCE_TYPE AS BIGINT) as LAST_UPDATED_SOURCE_TYPE", 
        "CAST(LAST_UPDATED_SOURCE AS STRING) as LAST_UPDATED_SOURCE", 
        "CAST(LAST_UPDATED_DTTM AS TIMESTAMP) as LAST_UPDATED_DTTM", 
        "CAST(LICENSE_TAG_NUMBER AS STRING) as LICENSE_TAG_NUMBER", 
        "CAST(LICENSE_STATE_PROV AS STRING) as LICENSE_STATE_PROV", 
        "CAST(LICENSE_COUNTRY_CODE AS STRING) as LICENSE_COUNTRY_CODE", 
        "CAST(EQUIP_DOOR_TYPE AS BIGINT) as EQUIP_DOOR_TYPE", 
        "CAST(COMMENTS AS STRING) as COMMENTS", 
        "CAST(CURRENT_LOCATION_ID AS BIGINT) as CURRENT_LOCATION_ID", 
        "CAST(ASSIGNED_LOCATION_ID AS BIGINT) as ASSIGNED_LOCATION_ID", 
        "CAST(CURRENT_APPOINTMENT_ID AS BIGINT) as CURRENT_APPOINTMENT_ID", 
        "CAST(EQUIP_INST_REF_CARRIER AS STRING) as EQUIP_INST_REF_CARRIER", 
        "CAST(TP_COMPANY_ID AS BIGINT) as TP_COMPANY_ID", 
        "CAST(FOB_INDICATOR AS BIGINT) as FOB_INDICATOR", 
        "CAST(DISPATCH_STATUS AS BIGINT) as DISPATCH_STATUS", 
        "CAST(HOME_DOMICILE_FACILITY_ID AS BIGINT) as HOME_DOMICILE_FACILITY_ID", 
        "CAST(HOME_DOMICILE_FAC_ALIAS_ID AS STRING) as HOME_DOMICILE_FAC_ALIAS_ID", 
        "CAST(CURRENT_FACILITY_ID AS BIGINT) as CURRENT_FACILITY_ID", 
        "CAST(CURRENT_FACILITY_ALIAS_ID AS STRING) as CURRENT_FACILITY_ALIAS_ID", 
        "CAST(LAST_MAINTENANCE_DTTM AS TIMESTAMP) as LAST_MAINTENANCE_DTTM", 
        "CAST(NEXT_AVAILABLE_DTTM AS TIMESTAMP) as NEXT_AVAILABLE_DTTM", 
        "CAST(SEAL_NUMBER AS STRING) as SEAL_NUMBER", 
        "CAST(NEXT_AVAIL_ZIP AS STRING) as NEXT_AVAIL_ZIP", 
        "CAST(NEXT_AVAILABLE_TERM AS STRING) as NEXT_AVAILABLE_TERM", 
        "CAST(NEXT_AVAIL_FACILITY_ID AS BIGINT) as NEXT_AVAIL_FACILITY_ID", 
        "CAST(IS_OBC_ONBOARD AS BIGINT) as IS_OBC_ONBOARD", 
        "CAST(IS_NON_SMOKING AS BIGINT) as IS_NON_SMOKING", 
        "CAST(HAS_NIGHT_HEATER AS BIGINT) as HAS_NIGHT_HEATER", 
        "CAST(IS_RIGID AS BIGINT) as IS_RIGID", 
        "CAST(RIGID_EQUIPMENT_ID AS BIGINT) as RIGID_EQUIPMENT_ID", 
        "CAST(SLEEPER_TYPE AS BIGINT) as SLEEPER_TYPE", 
        "CAST(ZONE_FACILITY_ID AS BIGINT) as ZONE_FACILITY_ID", 
        "CAST(ZONE_FACILITY_ALIAS_ID AS STRING) as ZONE_FACILITY_ALIAS_ID", 
        "CAST(ZONE_TYPE AS BIGINT) as ZONE_TYPE", 
        "CAST(MAINTENANCE_FACILITY_ID AS BIGINT) as MAINTENANCE_FACILITY_ID", 
        "CAST(MAINTENANCE_FACILITY_ALIAS_ID AS STRING) as MAINTENANCE_FACILITY_ALIAS_ID", 
        "CAST(MAINTENANCE_START_DTTM AS TIMESTAMP) as MAINTENANCE_START_DTTM", 
        "CAST(MAINTENANCE_FREQUENCY_WEEKS AS BIGINT) as MAINTENANCE_FREQUENCY_WEEKS", 
        "CAST(MAINTENANCE_DURATION AS BIGINT) as MAINTENANCE_DURATION", 
        "CAST(NEXT_MAINTENANCE_DTTM AS TIMESTAMP) as NEXT_MAINTENANCE_DTTM", 
        "CAST(HAS_ALERTS AS BIGINT) as HAS_ALERTS", 
        "CAST(LAST_KNOWN_DTTM AS TIMESTAMP) as LAST_KNOWN_DTTM", 
        "CAST(HAS_IMPORT_ERROR AS BIGINT) as HAS_IMPORT_ERROR", 
        "CAST(HAS_SOFT_CHECK_ERROR AS BIGINT) as HAS_SOFT_CHECK_ERROR", 
        "CAST(LAST_KNOWN_FACILITY_ID AS BIGINT) as LAST_KNOWN_FACILITY_ID", 
        "CAST(LAST_KNOWN_FACILITY_ALIAS_ID AS STRING) as LAST_KNOWN_FACILITY_ALIAS_ID", 
        "CAST(CONTRACT_START_DATE AS TIMESTAMP) as CONTRACT_START_DATE", 
        "CAST(CONTRACT_END_DATE AS TIMESTAMP) as CONTRACT_END_DATE", 
        "CAST(MAKE AS STRING) as MAKE", 
        "CAST(MODEL AS STRING) as MODEL", 
        "CAST(OWNERSHIP_TYPE AS BIGINT) as OWNERSHIP_TYPE", 
        "CAST(PLATED_WEIGHT AS BIGINT) as PLATED_WEIGHT", 
        "CAST(TAX_BAND_NAME AS STRING) as TAX_BAND_NAME", 
        "CAST(HOME_DSP_REGION_ID AS BIGINT) as HOME_DSP_REGION_ID", 
        "CAST(LAST_KNOWN_DSP_REGION_ID AS BIGINT) as LAST_KNOWN_DSP_REGION_ID", 
        "CAST(PER_USAGE_COST AS BIGINT) as PER_USAGE_COST", 
        "CAST(PER_USAGE_COST_CURRENCY_CODE AS STRING) as PER_USAGE_COST_CURRENCY_CODE", 
        "CAST(CUST_LK_LOCATION_NAME AS STRING) as CUST_LK_LOCATION_NAME", 
        "CAST(CUST_LK_ADDRESS AS STRING) as CUST_LK_ADDRESS", 
        "CAST(CUST_LK_CITY AS STRING) as CUST_LK_CITY", 
        "CAST(CUST_LK_STATE AS STRING) as CUST_LK_STATE", 
        "CAST(CUST_LK_POSTAL_CODE AS STRING) as CUST_LK_POSTAL_CODE", 
        "CAST(CUST_LK_COUNTRY AS STRING) as CUST_LK_COUNTRY", 
        "CAST(LAST_KNOWN_TERM AS STRING) as LAST_KNOWN_TERM", 
        "CAST(IS_TANDEM_LEAD AS BIGINT) as IS_TANDEM_LEAD", 
        "CAST(CARRIER_ID AS BIGINT) as CARRIER_ID", 
        "CAST(EQUIPMENT_ID AS BIGINT) as EQUIPMENT_ID", 
        "CAST(REASON_ID AS BIGINT) as REASON_ID", 
        "CAST(PLATED_WEIGHT_SIZE_UOM_ID AS BIGINT) as PLATED_WEIGHT_SIZE_UOM_ID", 
        "CAST(IS_TANDEM_CAPABLE AS BIGINT) as IS_TANDEM_CAPABLE", 
        "CAST(USR_ENT_NEXT_AVAILABLE_DTTM AS TIMESTAMP) as USR_ENT_NEXT_AVAILABLE_DTTM", 
        "CAST(USR_ENT_NEXT_AVAILABLE_TERM AS STRING) as USR_ENT_NEXT_AVAILABLE_TERM", 
        "CAST(USR_ENT_NEXT_AVAIL_FACILITY_ID AS BIGINT) as USR_ENT_NEXT_AVAIL_FACILITY_ID", 
        "CAST(CUST_NA_LOCATION_NAME AS STRING) as CUST_NA_LOCATION_NAME", 
        "CAST(CUST_NA_ADDRESS AS STRING) as CUST_NA_ADDRESS", 
        "CAST(CUST_NA_CITY AS STRING) as CUST_NA_CITY", 
        "CAST(CUST_NA_STATE AS STRING) as CUST_NA_STATE", 
        "CAST(CUST_NA_POSTAL_CODE AS STRING) as CUST_NA_POSTAL_CODE", 
        "CAST(CUST_NA_COUNTRY AS STRING) as CUST_NA_COUNTRY", 
        "CAST(HIBERNATE_VERSION AS BIGINT) as HIBERNATE_VERSION", 
        "CAST(MILEAGE_SCHEDULE AS BIGINT) as MILEAGE_SCHEDULE", 
        "CAST(MILEAGE_UOM AS STRING) as MILEAGE_UOM", 
        "CAST(CURRENT_MILEAGE AS BIGINT) as CURRENT_MILEAGE", 
        "CAST(LAST_MNT_MILEAGE AS BIGINT) as LAST_MNT_MILEAGE", 
        "CAST(NEXT_MNT_MILEAGE AS BIGINT) as NEXT_MNT_MILEAGE", 
        "CAST(IS_LABOR AS BIGINT) as IS_LABOR", 
        "CAST(EQUIPMENT_BRCD AS STRING) as EQUIPMENT_BRCD", 
        "CAST(LOCK_REASON_CODE AS STRING) as LOCK_REASON_CODE", 
        "CAST(LOADTSTMP AS TIMESTAMP) as LOAD_TSTMP" 
    )

    overwriteDeltaPartition(Shortcut_to_WM_EQUIPMENT_INSTANCE_PRE,"DC_NBR",dcnbr,target_table_name)
    logger.info(
        "Shortcut_to_WM_EQUIPMENT_INSTANCE_PRE is written to the target table - "
        + target_table_name
    )