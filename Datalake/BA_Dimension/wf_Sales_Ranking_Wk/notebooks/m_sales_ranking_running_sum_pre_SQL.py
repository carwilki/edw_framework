# Databricks notebook source
#Code converted on 2023-11-06 15:44:07
import os
from pyspark.sql import *
from pyspark.sql.functions import *
from datetime import datetime
from Datalake.utils.genericUtilities import *
from Datalake.utils.configs import *
from Datalake.utils.mergeUtils import *
from Datalake.utils.logger import *
from Datalake.utils.pk import *

# COMMAND ----------

spark = SparkSession.getActiveSession()
dbutils = DBUtils(spark)
dbutils.widgets.text(name = 'env', defaultValue = 'dev')
env = dbutils.widgets.get('env')

if env is None or env == '':
    raise ValueError('env is not set')

raw = getEnvPrefix(env) + 'raw'
legacy = getEnvPrefix(env) + 'legacy'
refine = getEnvPrefix(env) + 'refine'

# Set global variables
starttime = datetime.now() #start timestamp of the script


# COMMAND ----------

# Processing node SQ_Shortcut_to_SALES_RANKING_SALES_PRE, type SOURCE 
# COLUMN COUNT: 3


# COMMAND ----------

# Processing node SQL_INS_and_DUPS_CHECK, type SQL_TRANSFORM 
# COLUMN COUNT: 9

"""
WARNING: SQL Transformation is not yet supported, producing passthrough dataframe:
SQL query:
"TRUNCATE TABLE SALES_RANKING_RUNNING_SUM_PRE;
INSERT INTO SALES_RANKING_RUNNING_SUM_PRE
 SELECT S.WEEK_DT
      ,S.LOCATION_ID
	  ,S.COMP_CURR_FLAG
	  ,S.SALES_CURR_FLAG
	  ,S.TOTAL_52WK_SALES_AMT
	  ,T.TOTAL_52WK_COMP_STORES_AMT
	  ,ROUND((CASE WHEN S.COMP_CURR_FLAG = 1 AND  S.TOTAL_52WK_SALES_AMT > 0 AND S.LOCATION_TYPE_ID = 8
	        THEN CAST(S.TOTAL_52WK_SALES_AMT AS NUMERIC(18,2)) / CAST(T.TOTAL_52WK_COMP_STORES_AMT AS NUMERIC(18,2))
		    ELSE 0
	   END),10) AS STORE_TOTAL_SALES_PCT
	  ,CASE WHEN S.COMP_CURR_FLAG = 1 AND S.LOCATION_TYPE_ID = 8 AND  S.TOTAL_52WK_SALES_AMT > 0
	        THEN SUM(ROUND((CASE WHEN S.COMP_CURR_FLAG = 1 AND  S.TOTAL_52WK_SALES_AMT > 0 
			                     THEN CAST(S.TOTAL_52WK_SALES_AMT AS NUMERIC(18,2)) / CAST(T.TOTAL_52WK_COMP_STORES_AMT AS NUMERIC(18,2)) 
								 ELSE 0
	                          END),10)) 
					OVER (ORDER BY STORE_TOTAL_SALES_PCT DESC)
			WHEN S.COMP_CURR_FLAG = 0 AND S.SALES_CURR_FLAG = 1 AND S.TOTAL_52WK_SALES_AMT > 0
			THEN -1
		    ELSE -10
		END AS RUNNING_SUM_TOTAL_SALES_PCT
	  ,S.MERCH_52WK_SALES_AMT
	  ,T.MERCH_52WK_COMP_STORES_AMT
	  ,ROUND((CASE WHEN S.COMP_CURR_FLAG = 1 AND  S.MERCH_52WK_SALES_AMT > 0 AND S.LOCATION_TYPE_ID = 8
	        THEN CAST(S.MERCH_52WK_SALES_AMT AS NUMERIC(20,10)) / CAST(T.MERCH_52WK_COMP_STORES_AMT AS NUMERIC(20,10))
		    ELSE 0
	   END),10) AS STORE_MERCH_SALES_PCT
	  ,CASE WHEN S.COMP_CURR_FLAG = 1 AND S.LOCATION_TYPE_ID = 8 AND  S.MERCH_52WK_SALES_AMT > 0
	        THEN SUM(ROUND((CASE WHEN S.COMP_CURR_FLAG = 1 AND  S.MERCH_52WK_SALES_AMT > 0
	                   THEN CAST(S.MERCH_52WK_SALES_AMT AS NUMERIC(20,10)) / CAST(T.MERCH_52WK_COMP_STORES_AMT AS NUMERIC(20,10))
		               ELSE 0
	        END),10)) OVER (ORDER BY STORE_MERCH_SALES_PCT DESC)
			WHEN S.COMP_CURR_FLAG = 0 AND S.SALES_CURR_FLAG = 1 AND S.MERCH_52WK_SALES_AMT > 0
			THEN -1
		    ELSE -10
		END AS RUNNING_SUM_MERCH_SALES_PCT	
	  ,S.SERVICES_52WK_SALES_AMT
	  ,T.SERVICES_52WK_COMP_STORES_AMT
	  ,ROUND((CASE WHEN S.COMP_CURR_FLAG = 1 AND  S.SERVICES_52WK_SALES_AMT > 0 AND S.LOCATION_TYPE_ID = 8
	        THEN CAST(S.SERVICES_52WK_SALES_AMT AS NUMERIC(20,10)) / CAST(T.SERVICES_52WK_COMP_STORES_AMT AS NUMERIC(20,10))
		    ELSE 0
	   END),10) AS STORE_SERVICES_SALES_PCT
	  ,CASE WHEN S.COMP_CURR_FLAG = 1 AND S.LOCATION_TYPE_ID = 8 AND  S.SERVICES_52WK_SALES_AMT > 0
	        THEN SUM(ROUND((CASE WHEN S.COMP_CURR_FLAG = 1 AND  S.SERVICES_52WK_SALES_AMT > 0
	                   THEN CAST(S.SERVICES_52WK_SALES_AMT AS NUMERIC(20,10)) / CAST(T.SERVICES_52WK_COMP_STORES_AMT AS NUMERIC(20,10))
		               ELSE 0
	        END),10)) OVER (ORDER BY STORE_SERVICES_SALES_PCT DESC)
			WHEN S.COMP_CURR_FLAG = 0 AND S.SALES_CURR_FLAG = 1 AND S.SERVICES_52WK_SALES_AMT > 0 
			THEN -1
		    ELSE -10
		END AS RUNNING_SUM_SERVICES_SALES_PCT
	  ,S.SALON_52WK_SALES_AMT
	  ,T.SALON_52WK_COMP_STORES_AMT
	  ,ROUND((CASE WHEN S.COMP_CURR_FLAG = 1 AND  S.SALON_52WK_SALES_AMT > 0 AND S.LOCATION_TYPE_ID = 8
	        THEN CAST(S.SALON_52WK_SALES_AMT AS NUMERIC(20,10)) / CAST(T.SALON_52WK_COMP_STORES_AMT AS NUMERIC(20,10))
		    ELSE 0
	   END),10) AS STORE_SALON_SALES_PCT
	  ,CASE WHEN S.COMP_CURR_FLAG = 1 AND S.LOCATION_TYPE_ID = 8 AND  S.SALON_52WK_SALES_AMT > 0
	        THEN SUM(ROUND((CASE WHEN S.COMP_CURR_FLAG = 1 AND  S.SALON_52WK_SALES_AMT > 0
	                   THEN CAST(S.SALON_52WK_SALES_AMT AS NUMERIC(20,10)) / CAST(T.SALON_52WK_COMP_STORES_AMT AS NUMERIC(20,10))
		               ELSE 0
	        END),10)) OVER (ORDER BY STORE_SALON_SALES_PCT DESC)
			WHEN S.COMP_CURR_FLAG = 0 AND S.SALES_CURR_FLAG = 1 AND S.SALON_52WK_SALES_AMT > 0
			THEN -1
		    ELSE -10
		END AS RUNNING_SUM_SALON_SALES_PCT	
	  ,S.TRAINING_52WK_SALES_AMT
	  ,T.TRAINING_52WK_COMP_STORES_AMT
	  ,ROUND((CASE WHEN S.COMP_CURR_FLAG = 1 AND  S.TRAINING_52WK_SALES_AMT > 0 AND S.LOCATION_TYPE_ID = 8
	        THEN CAST(S.TRAINING_52WK_SALES_AMT AS NUMERIC(20,10)) / CAST(T.TRAINING_52WK_COMP_STORES_AMT AS NUMERIC(20,10))
		    ELSE 0
	   END),10) AS STORE_TRAINING_SALES_PCT
	  ,CASE WHEN S.COMP_CURR_FLAG = 1 AND S.LOCATION_TYPE_ID = 8 AND  S.TRAINING_52WK_SALES_AMT > 0
	        THEN SUM(ROUND((CASE WHEN S.COMP_CURR_FLAG = 1 AND  S.TRAINING_52WK_SALES_AMT > 0
	                   THEN CAST(S.TRAINING_52WK_SALES_AMT AS NUMERIC(20,10)) / CAST(T.TRAINING_52WK_COMP_STORES_AMT AS NUMERIC(20,10))
		               ELSE 0
	        END),10)) OVER (ORDER BY STORE_TRAINING_SALES_PCT DESC)
			WHEN S.COMP_CURR_FLAG = 0 AND S.SALES_CURR_FLAG = 1 AND  S.TRAINING_52WK_SALES_AMT > 0
			THEN -1
		    ELSE -10
		END AS RUNNING_SUM_TRAINING_SALES_PCT							
	  ,S.HOTEL_DDC_52WK_SALES_AMT
	  ,T.HOTEL_DDC_52WK_COMP_STORES_AMT
	  ,ROUND((CASE WHEN S.COMP_CURR_FLAG = 1 AND  S.HOTEL_DDC_52WK_SALES_AMT > 0 AND S.LOCATION_TYPE_ID = 8
	        THEN CAST(S.HOTEL_DDC_52WK_SALES_AMT AS NUMERIC(20,10)) / CAST(T.HOTEL_DDC_52WK_COMP_STORES_AMT AS NUMERIC(20,10))
		    ELSE 0
	   END),10) AS STORE_HOTEL_DDC_SALES_PCT
	  ,CASE WHEN S.COMP_CURR_FLAG = 1 AND S.LOCATION_TYPE_ID = 8 AND  S.HOTEL_DDC_52WK_SALES_AMT > 0
	        THEN SUM(ROUND((CASE WHEN S.COMP_CURR_FLAG = 1 AND  S.HOTEL_DDC_52WK_SALES_AMT > 0
	                   THEN CAST(S.HOTEL_DDC_52WK_SALES_AMT AS NUMERIC(20,10)) / CAST(T.HOTEL_DDC_52WK_COMP_STORES_AMT AS NUMERIC(20,10))
		               ELSE 0
	        END),10)) OVER (ORDER BY STORE_HOTEL_DDC_SALES_PCT DESC)
			WHEN S.COMP_CURR_FLAG = 0 AND S.SALES_CURR_FLAG = 1 AND  S.HOTEL_DDC_52WK_SALES_AMT > 0
			THEN -1
		    ELSE -10
		END AS RUNNING_SUM_HOTEL_DDC_SALES_PCT
	  ,S.CONSUMABLES_52WK_SALES_AMT
	  ,T.CONSUMABLES_52WK_COMP_STORES_AMT
	  ,ROUND((CASE WHEN S.COMP_CURR_FLAG = 1 AND  S.CONSUMABLES_52WK_SALES_AMT > 0 AND S.LOCATION_TYPE_ID = 8
	        THEN CAST(S.CONSUMABLES_52WK_SALES_AMT AS NUMERIC(20,10)) / CAST(T.CONSUMABLES_52WK_COMP_STORES_AMT AS NUMERIC(20,10))
		    ELSE 0
	   END),10) AS STORE_CONSUMABLES_SALES_PCT
	  ,CASE WHEN S.COMP_CURR_FLAG = 1 AND S.LOCATION_TYPE_ID = 8 AND  S.CONSUMABLES_52WK_SALES_AMT > 0
	        THEN SUM(ROUND((CASE WHEN S.COMP_CURR_FLAG = 1 AND  S.CONSUMABLES_52WK_SALES_AMT > 0
	                   THEN CAST(S.CONSUMABLES_52WK_SALES_AMT AS NUMERIC(20,10)) / CAST(T.CONSUMABLES_52WK_COMP_STORES_AMT AS NUMERIC(20,10))
		               ELSE 0
	        END),10)) OVER (ORDER BY STORE_CONSUMABLES_SALES_PCT DESC)
			WHEN S.COMP_CURR_FLAG = 0 AND S.SALES_CURR_FLAG = 1 AND  S.CONSUMABLES_52WK_SALES_AMT > 0
			THEN -1
		    ELSE -10
		END AS RUNNING_SUM_CONSUMABLES_SALES_PCT		
	  ,S.HARDGOODS_52WK_SALES_AMT
	  ,T.HARDGOODS_52WK_COMP_STORES_AMT
	  ,ROUND((CASE WHEN S.COMP_CURR_FLAG = 1 AND  S.HARDGOODS_52WK_SALES_AMT > 0 AND S.LOCATION_TYPE_ID = 8
	        THEN CAST(S.HARDGOODS_52WK_SALES_AMT AS NUMERIC(20,10)) / CAST(T.HARDGOODS_52WK_COMP_STORES_AMT AS NUMERIC(20,10))
		    ELSE 0
	   END),10) AS STORE_HARDGOODS_SALES_PCT
	  ,CASE WHEN S.COMP_CURR_FLAG = 1 AND S.LOCATION_TYPE_ID = 8 AND  S.HARDGOODS_52WK_SALES_AMT > 0
	        THEN SUM(ROUND((CASE WHEN S.COMP_CURR_FLAG = 1 AND  S.HARDGOODS_52WK_SALES_AMT > 0
	                   THEN CAST(S.HARDGOODS_52WK_SALES_AMT AS NUMERIC(20,10)) / CAST(T.HARDGOODS_52WK_COMP_STORES_AMT AS NUMERIC(20,10))
		               ELSE 0
	        END),10)) OVER (ORDER BY STORE_HARDGOODS_SALES_PCT DESC)
			WHEN S.COMP_CURR_FLAG = 0 AND S.SALES_CURR_FLAG = 1 AND  S.HARDGOODS_52WK_SALES_AMT > 0
			THEN -1
		    ELSE -10
		END AS RUNNING_SUM_HARDGOODS_SALES_PCT				
	  ,S.SPECIALTY_52WK_SALES_AMT
	  ,T.SPECIALTY_52WK_COMP_STORES_AMT
	  ,ROUND((CASE WHEN S.COMP_CURR_FLAG = 1 AND  S.SPECIALTY_52WK_SALES_AMT > 0 AND S.LOCATION_TYPE_ID = 8
	        THEN CAST(S.SPECIALTY_52WK_SALES_AMT AS NUMERIC(20,10)) / CAST(T.SPECIALTY_52WK_COMP_STORES_AMT AS NUMERIC(20,10))
		    ELSE 0
	   END),10) AS STORE_SPECIALTY_SALES_PCT
	  ,CASE WHEN S.COMP_CURR_FLAG = 1 AND S.LOCATION_TYPE_ID = 8 AND  S.SPECIALTY_52WK_SALES_AMT > 0
	        THEN SUM(ROUND((CASE WHEN S.COMP_CURR_FLAG = 1 AND  S.SPECIALTY_52WK_SALES_AMT > 0
	                   THEN CAST(S.SPECIALTY_52WK_SALES_AMT AS NUMERIC(20,10)) / CAST(T.SPECIALTY_52WK_COMP_STORES_AMT AS NUMERIC(20,10))
		               ELSE 0
	        END),10)) OVER (ORDER BY STORE_SPECIALTY_SALES_PCT DESC)
			WHEN S.COMP_CURR_FLAG = 0 AND S.SALES_CURR_FLAG = 1 AND S.SPECIALTY_52WK_SALES_AMT > 0
			THEN -1
		    ELSE -10
		END AS RUNNING_SUM_SPECIALTY_SALES_PCT		
   FROM SALES_RANKING_SALES_PRE S
   JOIN SALES_RANKING_TOTALS_PRE T
     ON S.WEEK_DT = T.WEEK_DT
ORDER BY S.WEEK_DT;
SELECT NVL(SUM(ROW_COUNT),0) DUPLICATE_ROWS
  FROM (
		   SELECT WEEK_DT ,LOCATION_ID,
		          SUM(1) ROW_COUNT
		     FROM SALES_RANKING_RUNNING_SUM_PRE        
		    GROUP BY WEEK_DT ,LOCATION_ID
		    HAVING SUM (1) > 1
       ) A;; "


"""
# for each involved DataFrame, append the dataframe name to each column

spark.sql(f"""TRUNCATE TABLE {raw}.SALES_RANKING_RUNNING_SUM_PRE""")


spark.sql(f"""
INSERT INTO {raw}.SALES_RANKING_RUNNING_SUM_PRE
 SELECT S.WEEK_DT
      ,S.LOCATION_ID
	  ,S.COMP_CURR_FLAG
	  ,S.SALES_CURR_FLAG
	  ,S.TOTAL_52WK_SALES_AMT
	  ,T.TOTAL_52WK_COMP_STORES_AMT
	  ,ROUND((CASE WHEN S.COMP_CURR_FLAG = 1 AND  S.TOTAL_52WK_SALES_AMT > 0 AND S.LOCATION_TYPE_ID = 8
	        THEN CAST(S.TOTAL_52WK_SALES_AMT AS DECIMAL(18,2)) / CAST(T.TOTAL_52WK_COMP_STORES_AMT AS DECIMAL(18,2))
		    ELSE 0
	   END),10) AS STORE_TOTAL_SALES_PCT
	  ,CASE WHEN S.COMP_CURR_FLAG = 1 AND S.LOCATION_TYPE_ID = 8 AND  S.TOTAL_52WK_SALES_AMT > 0
	        THEN SUM(ROUND((CASE WHEN S.COMP_CURR_FLAG = 1 AND  S.TOTAL_52WK_SALES_AMT > 0 
			                     THEN CAST(S.TOTAL_52WK_SALES_AMT AS DECIMAL(18,2)) / CAST(T.TOTAL_52WK_COMP_STORES_AMT AS DECIMAL(18,2)) 
								 ELSE 0
	                          END),10)) 
					OVER (ORDER BY ROUND((CASE WHEN S.COMP_CURR_FLAG = 1 AND  S.TOTAL_52WK_SALES_AMT > 0 AND S.LOCATION_TYPE_ID = 8
	        THEN CAST(S.TOTAL_52WK_SALES_AMT AS DECIMAL(18,2)) / CAST(T.TOTAL_52WK_COMP_STORES_AMT AS DECIMAL(18,2))
		    ELSE 0
	   END),10) DESC)
			WHEN S.COMP_CURR_FLAG = 0 AND S.SALES_CURR_FLAG = 1 AND S.TOTAL_52WK_SALES_AMT > 0
			THEN -1
		    ELSE -10
		END AS RUNNING_SUM_TOTAL_SALES_PCT
	  ,S.MERCH_52WK_SALES_AMT
	  ,T.MERCH_52WK_COMP_STORES_AMT
	  ,ROUND((CASE WHEN S.COMP_CURR_FLAG = 1 AND  S.MERCH_52WK_SALES_AMT > 0 AND S.LOCATION_TYPE_ID = 8
	        THEN CAST(S.MERCH_52WK_SALES_AMT AS DECIMAL(20,10)) / CAST(T.MERCH_52WK_COMP_STORES_AMT AS DECIMAL(20,10))
		    ELSE 0
	   END),10) AS STORE_MERCH_SALES_PCT
	  ,CASE WHEN S.COMP_CURR_FLAG = 1 AND S.LOCATION_TYPE_ID = 8 AND  S.MERCH_52WK_SALES_AMT > 0
	        THEN SUM(ROUND((CASE WHEN S.COMP_CURR_FLAG = 1 AND  S.MERCH_52WK_SALES_AMT > 0
	                   THEN CAST(S.MERCH_52WK_SALES_AMT AS DECIMAL(20,10)) / CAST(T.MERCH_52WK_COMP_STORES_AMT AS DECIMAL(20,10))
		               ELSE 0
	        END),10)) OVER (ORDER BY ROUND((CASE WHEN S.COMP_CURR_FLAG = 1 AND  S.MERCH_52WK_SALES_AMT > 0 AND S.LOCATION_TYPE_ID = 8
	        THEN CAST(S.MERCH_52WK_SALES_AMT AS DECIMAL(20,10)) / CAST(T.MERCH_52WK_COMP_STORES_AMT AS DECIMAL(20,10))
		    ELSE 0
	   END),10) DESC)
			WHEN S.COMP_CURR_FLAG = 0 AND S.SALES_CURR_FLAG = 1 AND S.MERCH_52WK_SALES_AMT > 0
			THEN -1
		    ELSE -10
		END AS RUNNING_SUM_MERCH_SALES_PCT	
	  ,S.SERVICES_52WK_SALES_AMT
	  ,T.SERVICES_52WK_COMP_STORES_AMT
	  ,ROUND((CASE WHEN S.COMP_CURR_FLAG = 1 AND  S.SERVICES_52WK_SALES_AMT > 0 AND S.LOCATION_TYPE_ID = 8
	        THEN CAST(S.SERVICES_52WK_SALES_AMT AS DECIMAL(20,10)) / CAST(T.SERVICES_52WK_COMP_STORES_AMT AS DECIMAL(20,10))
		    ELSE 0
	   END),10) AS STORE_SERVICES_SALES_PCT
	  ,CASE WHEN S.COMP_CURR_FLAG = 1 AND S.LOCATION_TYPE_ID = 8 AND  S.SERVICES_52WK_SALES_AMT > 0
	        THEN SUM(ROUND((CASE WHEN S.COMP_CURR_FLAG = 1 AND  S.SERVICES_52WK_SALES_AMT > 0
	                   THEN CAST(S.SERVICES_52WK_SALES_AMT AS DECIMAL(20,10)) / CAST(T.SERVICES_52WK_COMP_STORES_AMT AS DECIMAL(20,10))
		               ELSE 0
	        END),10)) OVER (ORDER BY ROUND((CASE WHEN S.COMP_CURR_FLAG = 1 AND  S.SERVICES_52WK_SALES_AMT > 0 AND S.LOCATION_TYPE_ID = 8
	        THEN CAST(S.SERVICES_52WK_SALES_AMT AS DECIMAL(20,10)) / CAST(T.SERVICES_52WK_COMP_STORES_AMT AS DECIMAL(20,10))
		    ELSE 0
	   END),10) DESC)
			WHEN S.COMP_CURR_FLAG = 0 AND S.SALES_CURR_FLAG = 1 AND S.SERVICES_52WK_SALES_AMT > 0 
			THEN -1
		    ELSE -10
		END AS RUNNING_SUM_SERVICES_SALES_PCT
	  ,S.SALON_52WK_SALES_AMT
	  ,T.SALON_52WK_COMP_STORES_AMT
	  ,ROUND((CASE WHEN S.COMP_CURR_FLAG = 1 AND  S.SALON_52WK_SALES_AMT > 0 AND S.LOCATION_TYPE_ID = 8
	        THEN CAST(S.SALON_52WK_SALES_AMT AS DECIMAL(20,10)) / CAST(T.SALON_52WK_COMP_STORES_AMT AS DECIMAL(20,10))
		    ELSE 0
	   END),10) AS STORE_SALON_SALES_PCT
	  ,CASE WHEN S.COMP_CURR_FLAG = 1 AND S.LOCATION_TYPE_ID = 8 AND  S.SALON_52WK_SALES_AMT > 0
	        THEN SUM(ROUND((CASE WHEN S.COMP_CURR_FLAG = 1 AND  S.SALON_52WK_SALES_AMT > 0
	                   THEN CAST(S.SALON_52WK_SALES_AMT AS DECIMAL(20,10)) / CAST(T.SALON_52WK_COMP_STORES_AMT AS DECIMAL(20,10))
		               ELSE 0
	        END),10)) OVER (ORDER BY ROUND((CASE WHEN S.COMP_CURR_FLAG = 1 AND  S.SALON_52WK_SALES_AMT > 0 AND S.LOCATION_TYPE_ID = 8
	        THEN CAST(S.SALON_52WK_SALES_AMT AS DECIMAL(20,10)) / CAST(T.SALON_52WK_COMP_STORES_AMT AS DECIMAL(20,10))
		    ELSE 0
	   END),10) DESC)
			WHEN S.COMP_CURR_FLAG = 0 AND S.SALES_CURR_FLAG = 1 AND S.SALON_52WK_SALES_AMT > 0
			THEN -1
		    ELSE -10
		END AS RUNNING_SUM_SALON_SALES_PCT	
	  ,S.TRAINING_52WK_SALES_AMT
	  ,T.TRAINING_52WK_COMP_STORES_AMT
	  ,ROUND((CASE WHEN S.COMP_CURR_FLAG = 1 AND  S.TRAINING_52WK_SALES_AMT > 0 AND S.LOCATION_TYPE_ID = 8
	        THEN CAST(S.TRAINING_52WK_SALES_AMT AS DECIMAL(20,10)) / CAST(T.TRAINING_52WK_COMP_STORES_AMT AS DECIMAL(20,10))
		    ELSE 0
	   END),10) AS STORE_TRAINING_SALES_PCT
	  ,CASE WHEN S.COMP_CURR_FLAG = 1 AND S.LOCATION_TYPE_ID = 8 AND  S.TRAINING_52WK_SALES_AMT > 0
	        THEN SUM(ROUND((CASE WHEN S.COMP_CURR_FLAG = 1 AND  S.TRAINING_52WK_SALES_AMT > 0
	                   THEN CAST(S.TRAINING_52WK_SALES_AMT AS DECIMAL(20,10)) / CAST(T.TRAINING_52WK_COMP_STORES_AMT AS DECIMAL(20,10))
		               ELSE 0
	        END),10)) OVER (ORDER BY ROUND((CASE WHEN S.COMP_CURR_FLAG = 1 AND  S.TRAINING_52WK_SALES_AMT > 0 AND S.LOCATION_TYPE_ID = 8
	        THEN CAST(S.TRAINING_52WK_SALES_AMT AS DECIMAL(20,10)) / CAST(T.TRAINING_52WK_COMP_STORES_AMT AS DECIMAL(20,10))
		    ELSE 0
	   END),10) DESC)
			WHEN S.COMP_CURR_FLAG = 0 AND S.SALES_CURR_FLAG = 1 AND  S.TRAINING_52WK_SALES_AMT > 0
			THEN -1
		    ELSE -10
		END AS RUNNING_SUM_TRAINING_SALES_PCT							
	  ,S.HOTEL_DDC_52WK_SALES_AMT
	  ,T.HOTEL_DDC_52WK_COMP_STORES_AMT
	  ,ROUND((CASE WHEN S.COMP_CURR_FLAG = 1 AND  S.HOTEL_DDC_52WK_SALES_AMT > 0 AND S.LOCATION_TYPE_ID = 8
	        THEN CAST(S.HOTEL_DDC_52WK_SALES_AMT AS DECIMAL(20,10)) / CAST(T.HOTEL_DDC_52WK_COMP_STORES_AMT AS DECIMAL(20,10))
		    ELSE 0
	   END),10) AS STORE_HOTEL_DDC_SALES_PCT
	  ,CASE WHEN S.COMP_CURR_FLAG = 1 AND S.LOCATION_TYPE_ID = 8 AND  S.HOTEL_DDC_52WK_SALES_AMT > 0
	        THEN SUM(ROUND((CASE WHEN S.COMP_CURR_FLAG = 1 AND  S.HOTEL_DDC_52WK_SALES_AMT > 0
	                   THEN CAST(S.HOTEL_DDC_52WK_SALES_AMT AS DECIMAL(20,10)) / CAST(T.HOTEL_DDC_52WK_COMP_STORES_AMT AS DECIMAL(20,10))
		               ELSE 0
	        END),10)) OVER (ORDER BY ROUND((CASE WHEN S.COMP_CURR_FLAG = 1 AND  S.HOTEL_DDC_52WK_SALES_AMT > 0 AND S.LOCATION_TYPE_ID = 8
	        THEN CAST(S.HOTEL_DDC_52WK_SALES_AMT AS DECIMAL(20,10)) / CAST(T.HOTEL_DDC_52WK_COMP_STORES_AMT AS DECIMAL(20,10))
		    ELSE 0
	   END),10) DESC)
			WHEN S.COMP_CURR_FLAG = 0 AND S.SALES_CURR_FLAG = 1 AND  S.HOTEL_DDC_52WK_SALES_AMT > 0
			THEN -1
		    ELSE -10
		END AS RUNNING_SUM_HOTEL_DDC_SALES_PCT
	  ,S.CONSUMABLES_52WK_SALES_AMT
	  ,T.CONSUMABLES_52WK_COMP_STORES_AMT
	  ,ROUND((CASE WHEN S.COMP_CURR_FLAG = 1 AND  S.CONSUMABLES_52WK_SALES_AMT > 0 AND S.LOCATION_TYPE_ID = 8
	        THEN CAST(S.CONSUMABLES_52WK_SALES_AMT AS DECIMAL(20,10)) / CAST(T.CONSUMABLES_52WK_COMP_STORES_AMT AS DECIMAL(20,10))
		    ELSE 0
	   END),10) AS STORE_CONSUMABLES_SALES_PCT
	  ,CASE WHEN S.COMP_CURR_FLAG = 1 AND S.LOCATION_TYPE_ID = 8 AND  S.CONSUMABLES_52WK_SALES_AMT > 0
	        THEN SUM(ROUND((CASE WHEN S.COMP_CURR_FLAG = 1 AND  S.CONSUMABLES_52WK_SALES_AMT > 0
	                   THEN CAST(S.CONSUMABLES_52WK_SALES_AMT AS DECIMAL(20,10)) / CAST(T.CONSUMABLES_52WK_COMP_STORES_AMT AS DECIMAL(20,10))
		               ELSE 0
	        END),10)) OVER (ORDER BY ROUND((CASE WHEN S.COMP_CURR_FLAG = 1 AND  S.CONSUMABLES_52WK_SALES_AMT > 0 AND S.LOCATION_TYPE_ID = 8
	        THEN CAST(S.CONSUMABLES_52WK_SALES_AMT AS DECIMAL(20,10)) / CAST(T.CONSUMABLES_52WK_COMP_STORES_AMT AS DECIMAL(20,10))
		    ELSE 0
	   END),10) DESC)
			WHEN S.COMP_CURR_FLAG = 0 AND S.SALES_CURR_FLAG = 1 AND  S.CONSUMABLES_52WK_SALES_AMT > 0
			THEN -1
		    ELSE -10
		END AS RUNNING_SUM_CONSUMABLES_SALES_PCT		
	  ,S.HARDGOODS_52WK_SALES_AMT
	  ,T.HARDGOODS_52WK_COMP_STORES_AMT
	  ,ROUND((CASE WHEN S.COMP_CURR_FLAG = 1 AND  S.HARDGOODS_52WK_SALES_AMT > 0 AND S.LOCATION_TYPE_ID = 8
	        THEN CAST(S.HARDGOODS_52WK_SALES_AMT AS DECIMAL(20,10)) / CAST(T.HARDGOODS_52WK_COMP_STORES_AMT AS DECIMAL(20,10))
		    ELSE 0
	   END),10) AS STORE_HARDGOODS_SALES_PCT
	  ,CASE WHEN S.COMP_CURR_FLAG = 1 AND S.LOCATION_TYPE_ID = 8 AND  S.HARDGOODS_52WK_SALES_AMT > 0
	        THEN SUM(ROUND((CASE WHEN S.COMP_CURR_FLAG = 1 AND  S.HARDGOODS_52WK_SALES_AMT > 0
	                   THEN CAST(S.HARDGOODS_52WK_SALES_AMT AS DECIMAL(20,10)) / CAST(T.HARDGOODS_52WK_COMP_STORES_AMT AS DECIMAL(20,10))
		               ELSE 0
	        END),10)) OVER (ORDER BY ROUND((CASE WHEN S.COMP_CURR_FLAG = 1 AND  S.HARDGOODS_52WK_SALES_AMT > 0 AND S.LOCATION_TYPE_ID = 8
	        THEN CAST(S.HARDGOODS_52WK_SALES_AMT AS DECIMAL(20,10)) / CAST(T.HARDGOODS_52WK_COMP_STORES_AMT AS DECIMAL(20,10))
		    ELSE 0
	   END),10) DESC)
			WHEN S.COMP_CURR_FLAG = 0 AND S.SALES_CURR_FLAG = 1 AND  S.HARDGOODS_52WK_SALES_AMT > 0
			THEN -1
		    ELSE -10
		END AS RUNNING_SUM_HARDGOODS_SALES_PCT				
	  ,S.SPECIALTY_52WK_SALES_AMT
	  ,T.SPECIALTY_52WK_COMP_STORES_AMT
	  ,ROUND((CASE WHEN S.COMP_CURR_FLAG = 1 AND  S.SPECIALTY_52WK_SALES_AMT > 0 AND S.LOCATION_TYPE_ID = 8
	        THEN CAST(S.SPECIALTY_52WK_SALES_AMT AS DECIMAL(20,10)) / CAST(T.SPECIALTY_52WK_COMP_STORES_AMT AS DECIMAL(20,10))
		    ELSE 0
	   END),10) AS STORE_SPECIALTY_SALES_PCT
	  ,CASE WHEN S.COMP_CURR_FLAG = 1 AND S.LOCATION_TYPE_ID = 8 AND  S.SPECIALTY_52WK_SALES_AMT > 0
	        THEN SUM(ROUND((CASE WHEN S.COMP_CURR_FLAG = 1 AND  S.SPECIALTY_52WK_SALES_AMT > 0
	                   THEN CAST(S.SPECIALTY_52WK_SALES_AMT AS DECIMAL(20,10)) / CAST(T.SPECIALTY_52WK_COMP_STORES_AMT AS DECIMAL(20,10))
		               ELSE 0
	        END),10)) OVER (ORDER BY ROUND((CASE WHEN S.COMP_CURR_FLAG = 1 AND  S.SPECIALTY_52WK_SALES_AMT > 0 AND S.LOCATION_TYPE_ID = 8
	        THEN CAST(S.SPECIALTY_52WK_SALES_AMT AS DECIMAL(20,10)) / CAST(T.SPECIALTY_52WK_COMP_STORES_AMT AS DECIMAL(20,10))
		    ELSE 0
	   END),10) DESC)
			WHEN S.COMP_CURR_FLAG = 0 AND S.SALES_CURR_FLAG = 1 AND S.SPECIALTY_52WK_SALES_AMT > 0
			THEN -1
		    ELSE -10
		END AS RUNNING_SUM_SPECIALTY_SALES_PCT		
   FROM {raw}.SALES_RANKING_SALES_PRE S
   JOIN {raw}.SALES_RANKING_TOTALS_PRE T
     ON S.WEEK_DT = T.WEEK_DT
ORDER BY S.WEEK_DT""")

# COMMAND ----------


