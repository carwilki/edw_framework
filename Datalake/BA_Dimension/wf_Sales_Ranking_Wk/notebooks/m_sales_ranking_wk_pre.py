# Databricks notebook source
#Code converted on 2023-11-06 15:44:26
import os
from pyspark.sql import *
from pyspark.sql.functions import *
from datetime import datetime
from Datalake.utils.genericUtilities import *
from Datalake.utils.configs import *
from Datalake.utils.mergeUtils import *
from Datalake.utils.logger import *
from Datalake.utils.pk import *

# COMMAND ----------

spark = SparkSession.getActiveSession()
dbutils = DBUtils(spark)
dbutils.widgets.text(name = 'env', defaultValue = 'dev')
env = dbutils.widgets.get('env')

if env is None or env == '':
    raise ValueError('env is not set')

raw = getEnvPrefix(env) + 'raw'
legacy = getEnvPrefix(env) + 'legacy'
refine = getEnvPrefix(env) + 'refine'

# Set global variables
starttime = datetime.now() #start timestamp of the script


# COMMAND ----------

# Processing node SQ_Shortcut_to_SALES_RANKING_CODE_MERCH, type SOURCE 
# COLUMN COUNT: 6

SQ_Shortcut_to_SALES_RANKING_CODE_MERCH = spark.sql(f"""SELECT
RANKING_CD as RANKING_CD_MERCH ,
RANKING_START_DT,
RANKING_END_DT,
RANKING_LEVEL as RANKING_LEVEL_MERCH ,
RANKING_START_PERCENT,
RANKING_END_PERCENT
FROM {legacy}.SALES_RANKING_CODE""").withColumn("sys_row_id", monotonically_increasing_id())
# Conforming fields names to the component layout
SQ_Shortcut_to_SALES_RANKING_CODE_MERCH = SQ_Shortcut_to_SALES_RANKING_CODE_MERCH \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_CODE_MERCH.columns[0],'RANKING_CD_MERCH') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_CODE_MERCH.columns[1],'RANKING_START_DT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_CODE_MERCH.columns[2],'RANKING_END_DT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_CODE_MERCH.columns[3],'RANKING_LEVEL_MERCH') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_CODE_MERCH.columns[4],'RANKING_START_PERCENT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_CODE_MERCH.columns[5],'RANKING_END_PERCENT')

# COMMAND ----------

# SQ_Shortcut_to_SALES_RANKING_CODE_MERCH.show()

# COMMAND ----------

# Processing node SQ_Shortcut_to_SALES_RANKING_CODE_SALON, type SOURCE 
# COLUMN COUNT: 6

SQ_Shortcut_to_SALES_RANKING_CODE_SALON = spark.sql(f"""SELECT
RANKING_CD as RANKING_CD_SALON ,
RANKING_START_DT,
RANKING_END_DT,
RANKING_LEVEL as RANKING_LEVEL_SALON ,
RANKING_START_PERCENT,
RANKING_END_PERCENT
FROM {legacy}.SALES_RANKING_CODE""").withColumn("sys_row_id", monotonically_increasing_id())
# Conforming fields names to the component layout
SQ_Shortcut_to_SALES_RANKING_CODE_SALON = SQ_Shortcut_to_SALES_RANKING_CODE_SALON \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_CODE_SALON.columns[0],'RANKING_CD_SALON') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_CODE_SALON.columns[1],'RANKING_START_DT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_CODE_SALON.columns[2],'RANKING_END_DT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_CODE_SALON.columns[3],'RANKING_LEVEL_SALON') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_CODE_SALON.columns[4],'RANKING_START_PERCENT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_CODE_SALON.columns[5],'RANKING_END_PERCENT')

# COMMAND ----------

SQ_Shortcut_to_SALES_RANKING_CODE_SALON.show()

# COMMAND ----------

# Processing node EXP_SALON_LKUP, type EXPRESSION 
# COLUMN COUNT: 7

# for each involved DataFrame, append the dataframe name to each column
SQ_Shortcut_to_SALES_RANKING_CODE_SALON_temp = SQ_Shortcut_to_SALES_RANKING_CODE_SALON.toDF(*["SQ_Shortcut_to_SALES_RANKING_CODE_SALON___" + col for col in SQ_Shortcut_to_SALES_RANKING_CODE_SALON.columns])

EXP_SALON_LKUP = SQ_Shortcut_to_SALES_RANKING_CODE_SALON_temp.selectExpr(
	"SQ_Shortcut_to_SALES_RANKING_CODE_SALON___sys_row_id as sys_row_id",
	"1 as DUMMY_JOIN",
	"SQ_Shortcut_to_SALES_RANKING_CODE_SALON___RANKING_CD_SALON as RANKING_CD_SALON",
	"SQ_Shortcut_to_SALES_RANKING_CODE_SALON___RANKING_START_DT as RANKING_START_DT",
	"SQ_Shortcut_to_SALES_RANKING_CODE_SALON___RANKING_END_DT as RANKING_END_DT",
	"SQ_Shortcut_to_SALES_RANKING_CODE_SALON___RANKING_LEVEL_SALON as RANKING_LEVEL_SALON",
	"SQ_Shortcut_to_SALES_RANKING_CODE_SALON___RANKING_START_PERCENT as RANKING_START_PERCENT",
	"SQ_Shortcut_to_SALES_RANKING_CODE_SALON___RANKING_END_PERCENT as RANKING_END_PERCENT"
)

# COMMAND ----------

# Processing node SQ_Shortcut_to_SALES_RANKING_CODE_TRAINING, type SOURCE 
# COLUMN COUNT: 6

SQ_Shortcut_to_SALES_RANKING_CODE_TRAINING = spark.sql(f"""SELECT
RANKING_CD as RANKING_CD_TRAINING ,
RANKING_START_DT,
RANKING_END_DT,
RANKING_LEVEL as RANKING_LEVEL_TRAINING ,
RANKING_START_PERCENT,
RANKING_END_PERCENT
FROM {legacy}.SALES_RANKING_CODE""").withColumn("sys_row_id", monotonically_increasing_id())
# Conforming fields names to the component layout
SQ_Shortcut_to_SALES_RANKING_CODE_TRAINING = SQ_Shortcut_to_SALES_RANKING_CODE_TRAINING \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_CODE_TRAINING.columns[0],'RANKING_CD_TRAINING') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_CODE_TRAINING.columns[1],'RANKING_START_DT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_CODE_TRAINING.columns[2],'RANKING_END_DT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_CODE_TRAINING.columns[3],'RANKING_LEVEL_TRAINING') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_CODE_TRAINING.columns[4],'RANKING_START_PERCENT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_CODE_TRAINING.columns[5],'RANKING_END_PERCENT')

# COMMAND ----------

# Processing node SQ_Shortcut_to_SALES_RANKING_CODE_SERVICES, type SOURCE 
# COLUMN COUNT: 6

SQ_Shortcut_to_SALES_RANKING_CODE_SERVICES = spark.sql(f"""SELECT
RANKING_CD as RANKING_CD_SERVICES ,
RANKING_START_DT,
RANKING_END_DT,
RANKING_LEVEL as RANKING_LEVEL_SERVICES ,
RANKING_START_PERCENT,
RANKING_END_PERCENT
FROM {legacy}.SALES_RANKING_CODE""").withColumn("sys_row_id", monotonically_increasing_id())
# Conforming fields names to the component layout
SQ_Shortcut_to_SALES_RANKING_CODE_SERVICES = SQ_Shortcut_to_SALES_RANKING_CODE_SERVICES \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_CODE_SERVICES.columns[0],'RANKING_CD_SERVICES') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_CODE_SERVICES.columns[1],'RANKING_START_DT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_CODE_SERVICES.columns[2],'RANKING_END_DT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_CODE_SERVICES.columns[3],'RANKING_LEVEL_SERVICES') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_CODE_SERVICES.columns[4],'RANKING_START_PERCENT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_CODE_SERVICES.columns[5],'RANKING_END_PERCENT')

# COMMAND ----------

# Processing node EXP_TRAINING_LKUP, type EXPRESSION 
# COLUMN COUNT: 7

# for each involved DataFrame, append the dataframe name to each column
SQ_Shortcut_to_SALES_RANKING_CODE_TRAINING_temp = SQ_Shortcut_to_SALES_RANKING_CODE_TRAINING.toDF(*["SQ_Shortcut_to_SALES_RANKING_CODE_TRAINING___" + col for col in SQ_Shortcut_to_SALES_RANKING_CODE_TRAINING.columns])

EXP_TRAINING_LKUP = SQ_Shortcut_to_SALES_RANKING_CODE_TRAINING_temp.selectExpr(
	"SQ_Shortcut_to_SALES_RANKING_CODE_TRAINING___sys_row_id as sys_row_id",
	"1 as DUMMY_JOIN",
	"SQ_Shortcut_to_SALES_RANKING_CODE_TRAINING___RANKING_CD_TRAINING as RANKING_CD_TRAINING",
	"SQ_Shortcut_to_SALES_RANKING_CODE_TRAINING___RANKING_START_DT as RANKING_START_DT",
	"SQ_Shortcut_to_SALES_RANKING_CODE_TRAINING___RANKING_END_DT as RANKING_END_DT",
	"SQ_Shortcut_to_SALES_RANKING_CODE_TRAINING___RANKING_LEVEL_TRAINING as RANKING_LEVEL_TRAINING",
	"SQ_Shortcut_to_SALES_RANKING_CODE_TRAINING___RANKING_START_PERCENT as RANKING_START_PERCENT",
	"SQ_Shortcut_to_SALES_RANKING_CODE_TRAINING___RANKING_END_PERCENT as RANKING_END_PERCENT"
)

# COMMAND ----------

# Processing node SQ_Shortcut_to_SALES_RANKING_CODE_SPECIALTY, type SOURCE 
# COLUMN COUNT: 6

SQ_Shortcut_to_SALES_RANKING_CODE_SPECIALTY = spark.sql(f"""SELECT
RANKING_CD,
RANKING_START_DT,
RANKING_END_DT,
RANKING_LEVEL,
RANKING_START_PERCENT,
RANKING_END_PERCENT
FROM {legacy}.SALES_RANKING_CODE""").withColumn("sys_row_id", monotonically_increasing_id())
# Conforming fields names to the component layout
SQ_Shortcut_to_SALES_RANKING_CODE_SPECIALTY = SQ_Shortcut_to_SALES_RANKING_CODE_SPECIALTY \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_CODE_SPECIALTY.columns[0],'RANKING_CD') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_CODE_SPECIALTY.columns[1],'RANKING_START_DT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_CODE_SPECIALTY.columns[2],'RANKING_END_DT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_CODE_SPECIALTY.columns[3],'RANKING_LEVEL') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_CODE_SPECIALTY.columns[4],'RANKING_START_PERCENT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_CODE_SPECIALTY.columns[5],'RANKING_END_PERCENT')

# COMMAND ----------

# Processing node SQ_Shortcut_to_SALES_RANKING_CODE_CONSUM, type SOURCE 
# COLUMN COUNT: 6

SQ_Shortcut_to_SALES_RANKING_CODE_CONSUM = spark.sql(f"""SELECT
RANKING_CD as RANKING_CD_CONSUM ,
RANKING_START_DT,
RANKING_END_DT,
RANKING_LEVEL as RANKING_LEVEL_CONSUM ,
RANKING_START_PERCENT,
RANKING_END_PERCENT
FROM {legacy}.SALES_RANKING_CODE""").withColumn("sys_row_id", monotonically_increasing_id())
# Conforming fields names to the component layout
SQ_Shortcut_to_SALES_RANKING_CODE_CONSUM = SQ_Shortcut_to_SALES_RANKING_CODE_CONSUM \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_CODE_CONSUM.columns[0],'RANKING_CD_CONSUM') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_CODE_CONSUM.columns[1],'RANKING_START_DT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_CODE_CONSUM.columns[2],'RANKING_END_DT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_CODE_CONSUM.columns[3],'RANKING_LEVEL_CONSUM') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_CODE_CONSUM.columns[4],'RANKING_START_PERCENT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_CODE_CONSUM.columns[5],'RANKING_END_PERCENT')

# COMMAND ----------

# Processing node SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE, type SOURCE 
# COLUMN COUNT: 40

SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE = spark.sql(f"""SELECT
WEEK_DT,
LOCATION_ID,
COMP_CURR_FLAG,
SALES_CURR_FLAG,
TOTAL_52WK_SALES_AMT,
TOTAL_52WK_COMP_STORES_AMT,
STORE_TOTAL_SALES_PCT,
RUNNING_SUM_TOTAL_SALES_PCT,
MERCH_52WK_SALES_AMT,
MERCH_52WK_COMP_STORES_AMT,
STORE_MERCH_SALES_PCT,
RUNNING_SUM_MERCH_SALES_PCT,
SERVICES_52WK_SALES_AMT,
SERVICES_52WK_COMP_STORES_AMT,
STORE_SERVICES_SALES_PCT,
RUNNING_SUM_SERVICES_SALES_PCT,
SALON_52WK_SALES_AMT,
SALON_52WK_COMP_STORES_AMT,
STORE_SALON_SALES_PCT,
RUNNING_SUM_SALON_SALES_PCT,
TRAINING_52WK_SALES_AMT,
TRAINING_52WK_COMP_STORES_AMT,
STORE_TRAINING_SALES_PCT,
RUNNING_SUM_TRAINING_SALES_PCT,
HOTEL_DDC_52WK_SALES_AMT,
HOTEL_DDC_52WK_COMP_STORES_AMT,
STORE_HOTEL_DDC_SALES_PCT,
RUNNING_SUM_HOTEL_DDC_SALES_PCT,
CONSUMABLES_52WK_SALES_AMT,
CONSUMABLES_52WK_COMP_STORES_AMT,
STORE_CONSUMABLES_SALES_PCT,
RUNNING_SUM_CONSUMABLES_SALES_PCT,
HARDGOODS_52WK_SALES_AMT,
HARDGOODS_52WK_COMP_STORES_AMT,
STORE_HARDGOODS_SALES_PCT,
RUNNING_SUM_HARDGOODS_SALES_PCT,
SPECIALTY_52WK_SALES_AMT,
SPECIALTY_52WK_COMP_STORES_AMT,
STORE_SPECIALTY_SALES_PCT,
RUNNING_SUM_SPECIALTY_SALES_PCT
FROM {raw}.SALES_RANKING_RUNNING_SUM_PRE""").withColumn("sys_row_id", monotonically_increasing_id())
# Conforming fields names to the component layout
SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE = SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE.columns[0],'WEEK_DT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE.columns[1],'LOCATION_ID') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE.columns[2],'COMP_CURR_FLAG') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE.columns[3],'SALES_CURR_FLAG') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE.columns[4],'TOTAL_52WK_SALES_AMT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE.columns[5],'TOTAL_52WK_COMP_STORES_AMT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE.columns[6],'STORE_TOTAL_SALES_PCT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE.columns[7],'RUNNING_SUM_TOTAL_SALES_PCT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE.columns[8],'MERCH_52WK_SALES_AMT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE.columns[9],'MERCH_52WK_COMP_STORES_AMT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE.columns[10],'STORE_MERCH_SALES_PCT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE.columns[11],'RUNNING_SUM_MERCH_SALES_PCT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE.columns[12],'SERVICES_52WK_SALES_AMT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE.columns[13],'SERVICES_52WK_COMP_STORES_AMT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE.columns[14],'STORE_SERVICES_SALES_PCT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE.columns[15],'RUNNING_SUM_SERVICES_SALES_PCT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE.columns[16],'SALON_52WK_SALES_AMT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE.columns[17],'SALON_52WK_COMP_STORES_AMT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE.columns[18],'STORE_SALON_SALES_PCT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE.columns[19],'RUNNING_SUM_SALON_SALES_PCT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE.columns[20],'TRAINING_52WK_SALES_AMT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE.columns[21],'TRAINING_52WK_COMP_STORES_AMT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE.columns[22],'STORE_TRAINING_SALES_PCT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE.columns[23],'RUNNING_SUM_TRAINING_SALES_PCT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE.columns[24],'HOTEL_DDC_52WK_SALES_AMT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE.columns[25],'HOTEL_DDC_52WK_COMP_STORES_AMT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE.columns[26],'STORE_HOTEL_DDC_SALES_PCT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE.columns[27],'RUNNING_SUM_HOTEL_DDC_SALES_PCT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE.columns[28],'CONSUMABLES_52WK_SALES_AMT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE.columns[29],'CONSUMABLES_52WK_COMP_STORES_AMT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE.columns[30],'STORE_CONSUMABLES_SALES_PCT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE.columns[31],'RUNNING_SUM_CONSUMABLES_SALES_PCT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE.columns[32],'HARDGOODS_52WK_SALES_AMT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE.columns[33],'HARDGOODS_52WK_COMP_STORES_AMT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE.columns[34],'STORE_HARDGOODS_SALES_PCT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE.columns[35],'RUNNING_SUM_HARDGOODS_SALES_PCT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE.columns[36],'SPECIALTY_52WK_SALES_AMT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE.columns[37],'SPECIALTY_52WK_COMP_STORES_AMT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE.columns[38],'STORE_SPECIALTY_SALES_PCT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE.columns[39],'RUNNING_SUM_SPECIALTY_SALES_PCT')

# COMMAND ----------

# SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE.show()

# COMMAND ----------

# Processing node EXP_MERCH_LKUP, type EXPRESSION 
# COLUMN COUNT: 7

# for each involved DataFrame, append the dataframe name to each column
SQ_Shortcut_to_SALES_RANKING_CODE_MERCH_temp = SQ_Shortcut_to_SALES_RANKING_CODE_MERCH.toDF(*["SQ_Shortcut_to_SALES_RANKING_CODE_MERCH___" + col for col in SQ_Shortcut_to_SALES_RANKING_CODE_MERCH.columns])

EXP_MERCH_LKUP = SQ_Shortcut_to_SALES_RANKING_CODE_MERCH_temp.selectExpr(
	"SQ_Shortcut_to_SALES_RANKING_CODE_MERCH___sys_row_id as sys_row_id",
	"1 as DUMMY_JOIN",
	"SQ_Shortcut_to_SALES_RANKING_CODE_MERCH___RANKING_CD_MERCH as RANKING_CD_MERCH",
	"SQ_Shortcut_to_SALES_RANKING_CODE_MERCH___RANKING_START_DT as RANKING_START_DT",
	"SQ_Shortcut_to_SALES_RANKING_CODE_MERCH___RANKING_END_DT as RANKING_END_DT",
	"SQ_Shortcut_to_SALES_RANKING_CODE_MERCH___RANKING_LEVEL_MERCH as RANKING_LEVEL_MERCH",
	"SQ_Shortcut_to_SALES_RANKING_CODE_MERCH___RANKING_START_PERCENT as RANKING_START_PERCENT",
	"SQ_Shortcut_to_SALES_RANKING_CODE_MERCH___RANKING_END_PERCENT as RANKING_END_PERCENT"
)

# COMMAND ----------

# Processing node SQ_Shortcut_to_SALES_RANKING_CODE_HOTEL, type SOURCE 
# COLUMN COUNT: 6

SQ_Shortcut_to_SALES_RANKING_CODE_HOTEL = spark.sql(f"""SELECT
RANKING_CD as RANKING_CD_HOTEL ,
RANKING_START_DT,
RANKING_END_DT,
RANKING_LEVEL as RANKING_LEVEL_HOTEL ,
RANKING_START_PERCENT,
RANKING_END_PERCENT
FROM {legacy}.SALES_RANKING_CODE""").withColumn("sys_row_id", monotonically_increasing_id())
# Conforming fields names to the component layout
SQ_Shortcut_to_SALES_RANKING_CODE_HOTEL = SQ_Shortcut_to_SALES_RANKING_CODE_HOTEL \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_CODE_HOTEL.columns[0],'RANKING_CD_HOTEL') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_CODE_HOTEL.columns[1],'RANKING_START_DT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_CODE_HOTEL.columns[2],'RANKING_END_DT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_CODE_HOTEL.columns[3],'RANKING_LEVEL_HOTEL') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_CODE_HOTEL.columns[4],'RANKING_START_PERCENT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_CODE_HOTEL.columns[5],'RANKING_END_PERCENT')

# COMMAND ----------

# Processing node EXP_CONSUM_LKUP, type EXPRESSION 
# COLUMN COUNT: 7

# for each involved DataFrame, append the dataframe name to each column
SQ_Shortcut_to_SALES_RANKING_CODE_CONSUM_temp = SQ_Shortcut_to_SALES_RANKING_CODE_CONSUM.toDF(*["SQ_Shortcut_to_SALES_RANKING_CODE_CONSUM___" + col for col in SQ_Shortcut_to_SALES_RANKING_CODE_CONSUM.columns])

EXP_CONSUM_LKUP = SQ_Shortcut_to_SALES_RANKING_CODE_CONSUM_temp.selectExpr(
	"SQ_Shortcut_to_SALES_RANKING_CODE_CONSUM___sys_row_id as sys_row_id",
	"1 as DUMMY_JOIN",
	"SQ_Shortcut_to_SALES_RANKING_CODE_CONSUM___RANKING_CD_CONSUM as RANKING_CD_CONSUM",
	"SQ_Shortcut_to_SALES_RANKING_CODE_CONSUM___RANKING_START_DT as RANKING_START_DT",
	"SQ_Shortcut_to_SALES_RANKING_CODE_CONSUM___RANKING_END_DT as RANKING_END_DT",
	"SQ_Shortcut_to_SALES_RANKING_CODE_CONSUM___RANKING_LEVEL_CONSUM as RANKING_LEVEL_CONSUM",
	"SQ_Shortcut_to_SALES_RANKING_CODE_CONSUM___RANKING_START_PERCENT as RANKING_START_PERCENT",
	"SQ_Shortcut_to_SALES_RANKING_CODE_CONSUM___RANKING_END_PERCENT as RANKING_END_PERCENT"
)

# COMMAND ----------

# Processing node SQ_Shortcut_to_SALES_RANKING_CODE_HGOODS, type SOURCE 
# COLUMN COUNT: 6

SQ_Shortcut_to_SALES_RANKING_CODE_HGOODS = spark.sql(f"""SELECT
RANKING_CD as RANKING_CD_HGOODS ,
RANKING_START_DT,
RANKING_END_DT,
RANKING_LEVEL as RANKING_LEVEL_HGOODS ,
RANKING_START_PERCENT,
RANKING_END_PERCENT
FROM {legacy}.SALES_RANKING_CODE""").withColumn("sys_row_id", monotonically_increasing_id())
# Conforming fields names to the component layout
SQ_Shortcut_to_SALES_RANKING_CODE_HGOODS = SQ_Shortcut_to_SALES_RANKING_CODE_HGOODS \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_CODE_HGOODS.columns[0],'RANKING_CD_HGOODS') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_CODE_HGOODS.columns[1],'RANKING_START_DT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_CODE_HGOODS.columns[2],'RANKING_END_DT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_CODE_HGOODS.columns[3],'RANKING_LEVEL_HGOODS') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_CODE_HGOODS.columns[4],'RANKING_START_PERCENT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_CODE_HGOODS.columns[5],'RANKING_END_PERCENT')

# COMMAND ----------

# Processing node SQ_Shortcut_to_SALES_RANKING_CODE, type SOURCE 
# COLUMN COUNT: 6

SQ_Shortcut_to_SALES_RANKING_CODE = spark.sql(f"""SELECT
RANKING_CD as RANKING_CD_TOTAL ,
RANKING_START_DT,
RANKING_END_DT,
RANKING_LEVEL as RANKING_LEVEL_TOTAL ,
RANKING_START_PERCENT,
RANKING_END_PERCENT
FROM {legacy}.SALES_RANKING_CODE""").withColumn("sys_row_id", monotonically_increasing_id())
# Conforming fields names to the component layout
SQ_Shortcut_to_SALES_RANKING_CODE = SQ_Shortcut_to_SALES_RANKING_CODE \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_CODE.columns[0],'RANKING_CD_TOTAL') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_CODE.columns[1],'RANKING_START_DT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_CODE.columns[2],'RANKING_END_DT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_CODE.columns[3],'RANKING_LEVEL_TOTAL') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_CODE.columns[4],'RANKING_START_PERCENT') \
	.withColumnRenamed(SQ_Shortcut_to_SALES_RANKING_CODE.columns[5],'RANKING_END_PERCENT')

# COMMAND ----------

# Processing node EXP_SERVICES_LKUP, type EXPRESSION 
# COLUMN COUNT: 7

# for each involved DataFrame, append the dataframe name to each column
SQ_Shortcut_to_SALES_RANKING_CODE_SERVICES_temp = SQ_Shortcut_to_SALES_RANKING_CODE_SERVICES.toDF(*["SQ_Shortcut_to_SALES_RANKING_CODE_SERVICES___" + col for col in SQ_Shortcut_to_SALES_RANKING_CODE_SERVICES.columns])

EXP_SERVICES_LKUP = SQ_Shortcut_to_SALES_RANKING_CODE_SERVICES_temp.selectExpr(
	"SQ_Shortcut_to_SALES_RANKING_CODE_SERVICES___sys_row_id as sys_row_id",
	"1 as DUMMY_JOIN",
	"SQ_Shortcut_to_SALES_RANKING_CODE_SERVICES___RANKING_CD_SERVICES as RANKING_CD_SERVICES",
	"SQ_Shortcut_to_SALES_RANKING_CODE_SERVICES___RANKING_START_DT as RANKING_START_DT",
	"SQ_Shortcut_to_SALES_RANKING_CODE_SERVICES___RANKING_END_DT as RANKING_END_DT",
	"SQ_Shortcut_to_SALES_RANKING_CODE_SERVICES___RANKING_LEVEL_SERVICES as RANKING_LEVEL_SERVICES",
	"SQ_Shortcut_to_SALES_RANKING_CODE_SERVICES___RANKING_START_PERCENT as RANKING_START_PERCENT",
	"SQ_Shortcut_to_SALES_RANKING_CODE_SERVICES___RANKING_END_PERCENT as RANKING_END_PERCENT"
)

# COMMAND ----------

# Processing node EXP_SPECIALTY_LKUP, type EXPRESSION . Note: using additional SELECT to rename incoming columns
# COLUMN COUNT: 7

# for each involved DataFrame, append the dataframe name to each column
SQ_Shortcut_to_SALES_RANKING_CODE_SPECIALTY_temp = SQ_Shortcut_to_SALES_RANKING_CODE_SPECIALTY.toDF(*["SQ_Shortcut_to_SALES_RANKING_CODE_SPECIALTY___" + col for col in SQ_Shortcut_to_SALES_RANKING_CODE_SPECIALTY.columns])

EXP_SPECIALTY_LKUP = SQ_Shortcut_to_SALES_RANKING_CODE_SPECIALTY_temp.selectExpr(
	"SQ_Shortcut_to_SALES_RANKING_CODE_SPECIALTY___RANKING_CD as RANKING_CD_SPECIALTY",
	"SQ_Shortcut_to_SALES_RANKING_CODE_SPECIALTY___RANKING_START_DT as RANKING_START_DT",
	"SQ_Shortcut_to_SALES_RANKING_CODE_SPECIALTY___RANKING_END_DT as RANKING_END_DT",
	"SQ_Shortcut_to_SALES_RANKING_CODE_SPECIALTY___RANKING_LEVEL as RANKING_LEVEL_SPECIALTY",
	"SQ_Shortcut_to_SALES_RANKING_CODE_SPECIALTY___RANKING_START_PERCENT as RANKING_START_PERCENT",
	"SQ_Shortcut_to_SALES_RANKING_CODE_SPECIALTY___RANKING_END_PERCENT as RANKING_END_PERCENT",
	"SQ_Shortcut_to_SALES_RANKING_CODE_SPECIALTY___sys_row_id as sys_row_id").selectExpr(
	"sys_row_id as sys_row_id",
	"1 as DUMMY_JOIN",
	"RANKING_CD_SPECIALTY as RANKING_CD_SPECIALTY",
	"RANKING_START_DT as RANKING_START_DT",
	"RANKING_END_DT as RANKING_END_DT",
	"RANKING_LEVEL_SPECIALTY as RANKING_LEVEL_SPECIALTY",
	"RANKING_START_PERCENT as RANKING_START_PERCENT",
	"RANKING_END_PERCENT as RANKING_END_PERCENT"
)

# COMMAND ----------

# Processing node EXP_HOTEL_LKUP, type EXPRESSION 
# COLUMN COUNT: 7

# for each involved DataFrame, append the dataframe name to each column
SQ_Shortcut_to_SALES_RANKING_CODE_HOTEL_temp = SQ_Shortcut_to_SALES_RANKING_CODE_HOTEL.toDF(*["SQ_Shortcut_to_SALES_RANKING_CODE_HOTEL___" + col for col in SQ_Shortcut_to_SALES_RANKING_CODE_HOTEL.columns])

EXP_HOTEL_LKUP = SQ_Shortcut_to_SALES_RANKING_CODE_HOTEL_temp.selectExpr(
	"SQ_Shortcut_to_SALES_RANKING_CODE_HOTEL___sys_row_id as sys_row_id",
	"1 as DUMMY_JOIN",
	"SQ_Shortcut_to_SALES_RANKING_CODE_HOTEL___RANKING_CD_HOTEL as RANKING_CD_HOTEL",
	"SQ_Shortcut_to_SALES_RANKING_CODE_HOTEL___RANKING_START_DT as RANKING_START_DT",
	"SQ_Shortcut_to_SALES_RANKING_CODE_HOTEL___RANKING_END_DT as RANKING_END_DT",
	"SQ_Shortcut_to_SALES_RANKING_CODE_HOTEL___RANKING_LEVEL_HOTEL as RANKING_LEVEL_HOTEL",
	"SQ_Shortcut_to_SALES_RANKING_CODE_HOTEL___RANKING_START_PERCENT as RANKING_START_PERCENT",
	"SQ_Shortcut_to_SALES_RANKING_CODE_HOTEL___RANKING_END_PERCENT as RANKING_END_PERCENT"
)

# COMMAND ----------

# Processing node EXP_PRE_DUMMY, type EXPRESSION 
# COLUMN COUNT: 41

# for each involved DataFrame, append the dataframe name to each column
SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE_temp = SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE.toDF(*["SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE___" + col for col in SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE.columns])

EXP_PRE_DUMMY = SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE_temp.selectExpr(
	"SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE___sys_row_id as sys_row_id",
	"1 as DUMMY_JOIN",
	"SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE___WEEK_DT as WEEK_DT",
	"SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE___LOCATION_ID as LOCATION_ID",
	"SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE___COMP_CURR_FLAG as COMP_CURR_FLAG",
	"SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE___SALES_CURR_FLAG as SALES_CURR_FLAG",
	"SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE___TOTAL_52WK_SALES_AMT as TOTAL_52WK_SALES_AMT",
	"SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE___TOTAL_52WK_COMP_STORES_AMT as TOTAL_52WK_COMP_STORES_AMT",
	"SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE___STORE_TOTAL_SALES_PCT as STORE_TOTAL_SALES_PCT",
	"SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE___RUNNING_SUM_TOTAL_SALES_PCT as RUNNING_SUM_TOTAL_SALES_PCT",
	"SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE___MERCH_52WK_SALES_AMT as MERCH_52WK_SALES_AMT",
	"SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE___MERCH_52WK_COMP_STORES_AMT as MERCH_52WK_COMP_STORES_AMT",
	"SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE___STORE_MERCH_SALES_PCT as STORE_MERCH_SALES_PCT",
	"SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE___RUNNING_SUM_MERCH_SALES_PCT as RUNNING_SUM_MERCH_SALES_PCT",
	"SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE___SERVICES_52WK_SALES_AMT as SERVICES_52WK_SALES_AMT",
	"SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE___SERVICES_52WK_COMP_STORES_AMT as SERVICES_52WK_COMP_STORES_AMT",
	"SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE___STORE_SERVICES_SALES_PCT as STORE_SERVICES_SALES_PCT",
	"SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE___RUNNING_SUM_SERVICES_SALES_PCT as RUNNING_SUM_SERVICES_SALES_PCT",
	"SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE___SALON_52WK_SALES_AMT as SALON_52WK_SALES_AMT",
	"SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE___SALON_52WK_COMP_STORES_AMT as SALON_52WK_COMP_STORES_AMT",
	"SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE___STORE_SALON_SALES_PCT as STORE_SALON_SALES_PCT",
	"SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE___RUNNING_SUM_SALON_SALES_PCT as RUNNING_SUM_SALON_SALES_PCT",
	"SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE___TRAINING_52WK_SALES_AMT as TRAINING_52WK_SALES_AMT",
	"SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE___TRAINING_52WK_COMP_STORES_AMT as TRAINING_52WK_COMP_STORES_AMT",
	"SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE___STORE_TRAINING_SALES_PCT as STORE_TRAINING_SALES_PCT",
	"SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE___RUNNING_SUM_TRAINING_SALES_PCT as RUNNING_SUM_TRAINING_SALES_PCT",
	"SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE___HOTEL_DDC_52WK_SALES_AMT as HOTEL_DDC_52WK_SALES_AMT",
	"SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE___HOTEL_DDC_52WK_COMP_STORES_AMT as HOTEL_DDC_52WK_COMP_STORES_AMT",
	"SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE___STORE_HOTEL_DDC_SALES_PCT as STORE_HOTEL_DDC_SALES_PCT",
	"SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE___RUNNING_SUM_HOTEL_DDC_SALES_PCT as RUNNING_SUM_HOTEL_DDC_SALES_PCT",
	"SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE___CONSUMABLES_52WK_SALES_AMT as CONSUMABLES_52WK_SALES_AMT",
	"SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE___CONSUMABLES_52WK_COMP_STORES_AMT as CONSUMABLES_52WK_COMP_STORES_AMT",
	"SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE___STORE_CONSUMABLES_SALES_PCT as STORE_CONSUMABLES_SALES_PCT",
	"SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE___RUNNING_SUM_CONSUMABLES_SALES_PCT as RUNNING_SUM_CONSUMABLES_SALES_PCT",
	"SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE___HARDGOODS_52WK_SALES_AMT as HARDGOODS_52WK_SALES_AMT",
	"SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE___HARDGOODS_52WK_COMP_STORES_AMT as HARDGOODS_52WK_COMP_STORES_AMT",
	"SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE___STORE_HARDGOODS_SALES_PCT as STORE_HARDGOODS_SALES_PCT",
	"SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE___RUNNING_SUM_HARDGOODS_SALES_PCT as RUNNING_SUM_HARDGOODS_SALES_PCT",
	"SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE___SPECIALTY_52WK_SALES_AMT as SPECIALTY_52WK_SALES_AMT",
	"SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE___SPECIALTY_52WK_COMP_STORES_AMT as SPECIALTY_52WK_COMP_STORES_AMT",
	"SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE___STORE_SPECIALTY_SALES_PCT as STORE_SPECIALTY_SALES_PCT",
	"SQ_Shortcut_to_SALES_RANKING_RUNNING_SUM_PRE___RUNNING_SUM_SPECIALTY_SALES_PCT as RUNNING_SUM_SPECIALTY_SALES_PCT"
)

# COMMAND ----------

# EXP_PRE_DUMMY.show()

# COMMAND ----------

# Processing node EXP_TOTAL_LKUP, type EXPRESSION 
# COLUMN COUNT: 7

# for each involved DataFrame, append the dataframe name to each column
SQ_Shortcut_to_SALES_RANKING_CODE_temp = SQ_Shortcut_to_SALES_RANKING_CODE.toDF(*["SQ_Shortcut_to_SALES_RANKING_CODE___" + col for col in SQ_Shortcut_to_SALES_RANKING_CODE.columns])

EXP_TOTAL_LKUP = SQ_Shortcut_to_SALES_RANKING_CODE_temp.selectExpr(
	"SQ_Shortcut_to_SALES_RANKING_CODE___sys_row_id as sys_row_id",
	"1 as DUMMY_JOIN",
	"SQ_Shortcut_to_SALES_RANKING_CODE___RANKING_CD_TOTAL as RANKING_CD_TOTAL",
	"SQ_Shortcut_to_SALES_RANKING_CODE___RANKING_START_DT as RANKING_START_DT",
	"SQ_Shortcut_to_SALES_RANKING_CODE___RANKING_END_DT as RANKING_END_DT",
	"SQ_Shortcut_to_SALES_RANKING_CODE___RANKING_LEVEL_TOTAL as RANKING_LEVEL_TOTAL",
	"SQ_Shortcut_to_SALES_RANKING_CODE___RANKING_START_PERCENT as RANKING_START_PERCENT",
	"SQ_Shortcut_to_SALES_RANKING_CODE___RANKING_END_PERCENT as RANKING_END_PERCENT"
)

# COMMAND ----------

# Processing node EXP_HGOODS_LKUP, type EXPRESSION 
# COLUMN COUNT: 7

# for each involved DataFrame, append the dataframe name to each column
SQ_Shortcut_to_SALES_RANKING_CODE_HGOODS_temp = SQ_Shortcut_to_SALES_RANKING_CODE_HGOODS.toDF(*["SQ_Shortcut_to_SALES_RANKING_CODE_HGOODS___" + col for col in SQ_Shortcut_to_SALES_RANKING_CODE_HGOODS.columns])

EXP_HGOODS_LKUP = SQ_Shortcut_to_SALES_RANKING_CODE_HGOODS_temp.selectExpr(
	"SQ_Shortcut_to_SALES_RANKING_CODE_HGOODS___sys_row_id as sys_row_id",
	"1 as DUMMY_JOIN",
	"SQ_Shortcut_to_SALES_RANKING_CODE_HGOODS___RANKING_CD_HGOODS as RANKING_CD_HGOODS",
	"SQ_Shortcut_to_SALES_RANKING_CODE_HGOODS___RANKING_START_DT as RANKING_START_DT",
	"SQ_Shortcut_to_SALES_RANKING_CODE_HGOODS___RANKING_END_DT as RANKING_END_DT",
	"SQ_Shortcut_to_SALES_RANKING_CODE_HGOODS___RANKING_LEVEL_HGOODS as RANKING_LEVEL_HGOODS",
	"SQ_Shortcut_to_SALES_RANKING_CODE_HGOODS___RANKING_START_PERCENT as RANKING_START_PERCENT",
	"SQ_Shortcut_to_SALES_RANKING_CODE_HGOODS___RANKING_END_PERCENT as RANKING_END_PERCENT"
)

# COMMAND ----------

# Processing node JNR_TOTALS_LKUP, type JOINER . Note: using additional SELECT to rename incoming columns
# COLUMN COUNT: 48

# for each involved DataFrame, append the dataframe name to each column
EXP_TOTAL_LKUP_temp = EXP_TOTAL_LKUP.toDF(*["EXP_TOTAL_LKUP___" + col for col in EXP_TOTAL_LKUP.columns])
EXP_PRE_DUMMY_temp = EXP_PRE_DUMMY.toDF(*["EXP_PRE_DUMMY___" + col for col in EXP_PRE_DUMMY.columns])

EXP_PRE_DUMMY_temp=EXP_PRE_DUMMY_temp.withColumn('EXP_PRE_DUMMY___DUMMY_JOIN',lit(1))
EXP_TOTAL_LKUP_temp=EXP_TOTAL_LKUP_temp.withColumn('EXP_TOTAL_LKUP___DUMMY_JOIN',lit(1))
JNR_TOTALS_LKUP = EXP_PRE_DUMMY_temp.join(EXP_TOTAL_LKUP_temp,[EXP_PRE_DUMMY_temp.EXP_PRE_DUMMY___DUMMY_JOIN == EXP_TOTAL_LKUP_temp.EXP_TOTAL_LKUP___DUMMY_JOIN],'left_outer').selectExpr(
	"EXP_TOTAL_LKUP___DUMMY_JOIN as DUMMY_JOIN",
	"EXP_TOTAL_LKUP___RANKING_CD_TOTAL as RANKING_CD_TOTAL",
	"EXP_TOTAL_LKUP___RANKING_START_DT as RANKING_START_DT",
	"EXP_TOTAL_LKUP___RANKING_END_DT as RANKING_END_DT",
	"EXP_TOTAL_LKUP___RANKING_LEVEL_TOTAL as RANKING_LEVEL_TOTAL",
	"EXP_TOTAL_LKUP___RANKING_START_PERCENT as RANKING_START_PERCENT",
	"EXP_TOTAL_LKUP___RANKING_END_PERCENT as RANKING_END_PERCENT",
	"EXP_PRE_DUMMY___DUMMY_JOIN as DUMMY_JOIN1",
	"EXP_PRE_DUMMY___WEEK_DT as WEEK_DT",
	"EXP_PRE_DUMMY___LOCATION_ID as LOCATION_ID",
	"EXP_PRE_DUMMY___COMP_CURR_FLAG as COMP_CURR_FLAG",
	"EXP_PRE_DUMMY___SALES_CURR_FLAG as SALES_CURR_FLAG",
	"EXP_PRE_DUMMY___TOTAL_52WK_SALES_AMT as TOTAL_52WK_SALES_AMT",
	"EXP_PRE_DUMMY___TOTAL_52WK_COMP_STORES_AMT as TOTAL_52WK_COMP_STORES_AMT",
	"EXP_PRE_DUMMY___STORE_TOTAL_SALES_PCT as STORE_TOTAL_SALES_PCT",
	"EXP_PRE_DUMMY___RUNNING_SUM_TOTAL_SALES_PCT as RUNNING_SUM_TOTAL_SALES_PCT",
	"EXP_PRE_DUMMY___MERCH_52WK_SALES_AMT as MERCH_52WK_SALES_AMT",
	"EXP_PRE_DUMMY___MERCH_52WK_COMP_STORES_AMT as MERCH_52WK_COMP_STORES_AMT",
	"EXP_PRE_DUMMY___STORE_MERCH_SALES_PCT as STORE_MERCH_SALES_PCT",
	"EXP_PRE_DUMMY___RUNNING_SUM_MERCH_SALES_PCT as RUNNING_SUM_MERCH_SALES_PCT",
	"EXP_PRE_DUMMY___SERVICES_52WK_SALES_AMT as SERVICES_52WK_SALES_AMT",
	"EXP_PRE_DUMMY___SERVICES_52WK_COMP_STORES_AMT as SERVICES_52WK_COMP_STORES_AMT",
	"EXP_PRE_DUMMY___STORE_SERVICES_SALES_PCT as STORE_SERVICES_SALES_PCT",
	"EXP_PRE_DUMMY___RUNNING_SUM_SERVICES_SALES_PCT as RUNNING_SUM_SERVICES_SALES_PCT",
	"EXP_PRE_DUMMY___SALON_52WK_SALES_AMT as SALON_52WK_SALES_AMT",
	"EXP_PRE_DUMMY___SALON_52WK_COMP_STORES_AMT as SALON_52WK_COMP_STORES_AMT",
	"EXP_PRE_DUMMY___STORE_SALON_SALES_PCT as STORE_SALON_SALES_PCT",
	"EXP_PRE_DUMMY___RUNNING_SUM_SALON_SALES_PCT as RUNNING_SUM_SALON_SALES_PCT",
	"EXP_PRE_DUMMY___TRAINING_52WK_SALES_AMT as TRAINING_52WK_SALES_AMT",
	"EXP_PRE_DUMMY___TRAINING_52WK_COMP_STORES_AMT as TRAINING_52WK_COMP_STORES_AMT",
	"EXP_PRE_DUMMY___STORE_TRAINING_SALES_PCT as STORE_TRAINING_SALES_PCT",
	"EXP_PRE_DUMMY___RUNNING_SUM_TRAINING_SALES_PCT as RUNNING_SUM_TRAINING_SALES_PCT",
	"EXP_PRE_DUMMY___HOTEL_DDC_52WK_SALES_AMT as HOTEL_DDC_52WK_SALES_AMT",
	"EXP_PRE_DUMMY___HOTEL_DDC_52WK_COMP_STORES_AMT as HOTEL_DDC_52WK_COMP_STORES_AMT",
	"EXP_PRE_DUMMY___STORE_HOTEL_DDC_SALES_PCT as STORE_HOTEL_DDC_SALES_PCT",
	"EXP_PRE_DUMMY___RUNNING_SUM_HOTEL_DDC_SALES_PCT as RUNNING_SUM_HOTEL_DDC_SALES_PCT",
	"EXP_PRE_DUMMY___CONSUMABLES_52WK_SALES_AMT as CONSUMABLES_52WK_SALES_AMT",
	"EXP_PRE_DUMMY___CONSUMABLES_52WK_COMP_STORES_AMT as CONSUMABLES_52WK_COMP_STORES_AMT",
	"EXP_PRE_DUMMY___STORE_CONSUMABLES_SALES_PCT as STORE_CONSUMABLES_SALES_PCT",
	"EXP_PRE_DUMMY___RUNNING_SUM_CONSUMABLES_SALES_PCT as RUNNING_SUM_CONSUMABLES_SALES_PCT",
	"EXP_PRE_DUMMY___HARDGOODS_52WK_SALES_AMT as HARDGOODS_52WK_SALES_AMT",
	"EXP_PRE_DUMMY___HARDGOODS_52WK_COMP_STORES_AMT as HARDGOODS_52WK_COMP_STORES_AMT",
	"EXP_PRE_DUMMY___STORE_HARDGOODS_SALES_PCT as STORE_HARDGOODS_SALES_PCT",
	"EXP_PRE_DUMMY___RUNNING_SUM_HARDGOODS_SALES_PCT as RUNNING_SUM_HARDGOODS_SALES_PCT",
	"EXP_PRE_DUMMY___SPECIALTY_52WK_SALES_AMT as SPECIALTY_52WK_SALES_AMT",
	"EXP_PRE_DUMMY___SPECIALTY_52WK_COMP_STORES_AMT as SPECIALTY_52WK_COMP_STORES_AMT",
	"EXP_PRE_DUMMY___STORE_SPECIALTY_SALES_PCT as STORE_SPECIALTY_SALES_PCT",
	"EXP_PRE_DUMMY___RUNNING_SUM_SPECIALTY_SALES_PCT as RUNNING_SUM_SPECIALTY_SALES_PCT")

# COMMAND ----------

# Processing node FIL_TOTALS_LKUP, type FILTER 
# COLUMN COUNT: 47

# for each involved DataFrame, append the dataframe name to each column
JNR_TOTALS_LKUP_temp = JNR_TOTALS_LKUP.toDF(*["JNR_TOTALS_LKUP___" + col for col in JNR_TOTALS_LKUP.columns])

FIL_TOTALS_LKUP = JNR_TOTALS_LKUP_temp.selectExpr(
	"JNR_TOTALS_LKUP___DUMMY_JOIN1 as DUMMY_JOIN1",
	"JNR_TOTALS_LKUP___WEEK_DT as WEEK_DT",
	"JNR_TOTALS_LKUP___LOCATION_ID as LOCATION_ID",
	"JNR_TOTALS_LKUP___COMP_CURR_FLAG as COMP_CURR_FLAG",
	"JNR_TOTALS_LKUP___SALES_CURR_FLAG as SALES_CURR_FLAG",
	"JNR_TOTALS_LKUP___TOTAL_52WK_SALES_AMT as TOTAL_52WK_SALES_AMT",
	"JNR_TOTALS_LKUP___TOTAL_52WK_COMP_STORES_AMT as TOTAL_52WK_COMP_STORES_AMT",
	"JNR_TOTALS_LKUP___STORE_TOTAL_SALES_PCT as STORE_TOTAL_SALES_PCT",
	"JNR_TOTALS_LKUP___RUNNING_SUM_TOTAL_SALES_PCT as RUNNING_SUM_TOTAL_SALES_PCT",
	"JNR_TOTALS_LKUP___MERCH_52WK_SALES_AMT as MERCH_52WK_SALES_AMT",
	"JNR_TOTALS_LKUP___MERCH_52WK_COMP_STORES_AMT as MERCH_52WK_COMP_STORES_AMT",
	"JNR_TOTALS_LKUP___STORE_MERCH_SALES_PCT as STORE_MERCH_SALES_PCT",
	"JNR_TOTALS_LKUP___RUNNING_SUM_MERCH_SALES_PCT as RUNNING_SUM_MERCH_SALES_PCT",
	"JNR_TOTALS_LKUP___SERVICES_52WK_SALES_AMT as SERVICES_52WK_SALES_AMT",
	"JNR_TOTALS_LKUP___SERVICES_52WK_COMP_STORES_AMT as SERVICES_52WK_COMP_STORES_AMT",
	"JNR_TOTALS_LKUP___STORE_SERVICES_SALES_PCT as STORE_SERVICES_SALES_PCT",
	"JNR_TOTALS_LKUP___RUNNING_SUM_SERVICES_SALES_PCT as RUNNING_SUM_SERVICES_SALES_PCT",
	"JNR_TOTALS_LKUP___SALON_52WK_SALES_AMT as SALON_52WK_SALES_AMT",
	"JNR_TOTALS_LKUP___SALON_52WK_COMP_STORES_AMT as SALON_52WK_COMP_STORES_AMT",
	"JNR_TOTALS_LKUP___STORE_SALON_SALES_PCT as STORE_SALON_SALES_PCT",
	"JNR_TOTALS_LKUP___RUNNING_SUM_SALON_SALES_PCT as RUNNING_SUM_SALON_SALES_PCT",
	"JNR_TOTALS_LKUP___TRAINING_52WK_SALES_AMT as TRAINING_52WK_SALES_AMT",
	"JNR_TOTALS_LKUP___TRAINING_52WK_COMP_STORES_AMT as TRAINING_52WK_COMP_STORES_AMT",
	"JNR_TOTALS_LKUP___STORE_TRAINING_SALES_PCT as STORE_TRAINING_SALES_PCT",
	"JNR_TOTALS_LKUP___RUNNING_SUM_TRAINING_SALES_PCT as RUNNING_SUM_TRAINING_SALES_PCT",
	"JNR_TOTALS_LKUP___HOTEL_DDC_52WK_SALES_AMT as HOTEL_DDC_52WK_SALES_AMT",
	"JNR_TOTALS_LKUP___HOTEL_DDC_52WK_COMP_STORES_AMT as HOTEL_DDC_52WK_COMP_STORES_AMT",
	"JNR_TOTALS_LKUP___STORE_HOTEL_DDC_SALES_PCT as STORE_HOTEL_DDC_SALES_PCT",
	"JNR_TOTALS_LKUP___RUNNING_SUM_HOTEL_DDC_SALES_PCT as RUNNING_SUM_HOTEL_DDC_SALES_PCT",
	"JNR_TOTALS_LKUP___CONSUMABLES_52WK_SALES_AMT as CONSUMABLES_52WK_SALES_AMT",
	"JNR_TOTALS_LKUP___CONSUMABLES_52WK_COMP_STORES_AMT as CONSUMABLES_52WK_COMP_STORES_AMT",
	"JNR_TOTALS_LKUP___STORE_CONSUMABLES_SALES_PCT as STORE_CONSUMABLES_SALES_PCT",
	"JNR_TOTALS_LKUP___RUNNING_SUM_CONSUMABLES_SALES_PCT as RUNNING_SUM_CONSUMABLES_SALES_PCT",
	"JNR_TOTALS_LKUP___HARDGOODS_52WK_SALES_AMT as HARDGOODS_52WK_SALES_AMT",
	"JNR_TOTALS_LKUP___HARDGOODS_52WK_COMP_STORES_AMT as HARDGOODS_52WK_COMP_STORES_AMT",
	"JNR_TOTALS_LKUP___STORE_HARDGOODS_SALES_PCT as STORE_HARDGOODS_SALES_PCT",
	"JNR_TOTALS_LKUP___RUNNING_SUM_HARDGOODS_SALES_PCT as RUNNING_SUM_HARDGOODS_SALES_PCT",
	"JNR_TOTALS_LKUP___SPECIALTY_52WK_SALES_AMT as SPECIALTY_52WK_SALES_AMT",
	"JNR_TOTALS_LKUP___SPECIALTY_52WK_COMP_STORES_AMT as SPECIALTY_52WK_COMP_STORES_AMT",
	"JNR_TOTALS_LKUP___STORE_SPECIALTY_SALES_PCT as STORE_SPECIALTY_SALES_PCT",
	"JNR_TOTALS_LKUP___RUNNING_SUM_SPECIALTY_SALES_PCT as RUNNING_SUM_SPECIALTY_SALES_PCT",
	"JNR_TOTALS_LKUP___RANKING_CD_TOTAL as RANKING_CD_TOTAL",
	"JNR_TOTALS_LKUP___RANKING_START_DT as JNR_TOTALS_LKUP___RANKING_START_DT",
	"JNR_TOTALS_LKUP___RANKING_END_DT as JNR_TOTALS_LKUP___RANKING_END_DT",
	"JNR_TOTALS_LKUP___RANKING_LEVEL_TOTAL as RANKING_LEVEL_TOTAL",
	"JNR_TOTALS_LKUP___RANKING_START_PERCENT as JNR_TOTALS_LKUP___RANKING_START_PERCENT",
	"JNR_TOTALS_LKUP___RANKING_END_PERCENT as JNR_TOTALS_LKUP___RANKING_END_PERCENT").filter("WEEK_DT >= JNR_TOTALS_LKUP___RANKING_START_DT AND WEEK_DT <= JNR_TOTALS_LKUP___RANKING_END_DT AND RUNNING_SUM_TOTAL_SALES_PCT > JNR_TOTALS_LKUP___RANKING_START_PERCENT AND RUNNING_SUM_TOTAL_SALES_PCT <= JNR_TOTALS_LKUP___RANKING_END_PERCENT").withColumn("sys_row_id", monotonically_increasing_id())

# COMMAND ----------

# Processing node JNR_MERCH_LKUP, type JOINER 
# COLUMN COUNT: 50
FIL_TOTALS_LKUP=FIL_TOTALS_LKUP.withColumn('DUMMY_JOIN1',lit(1))
EXP_MERCH_LKUP=EXP_MERCH_LKUP.withColumn('DUMMY_JOIN',lit(1))
JNR_MERCH_LKUP = FIL_TOTALS_LKUP.join(EXP_MERCH_LKUP,[FIL_TOTALS_LKUP.DUMMY_JOIN1 == EXP_MERCH_LKUP.DUMMY_JOIN],'left_outer')

# COMMAND ----------

# Processing node FIL_MERCH_LKUP, type FILTER 
# COLUMN COUNT: 49

# for each involved DataFrame, append the dataframe name to each column
JNR_MERCH_LKUP_temp = JNR_MERCH_LKUP.toDF(*["JNR_MERCH_LKUP___" + col for col in JNR_MERCH_LKUP.columns])

FIL_MERCH_LKUP = JNR_MERCH_LKUP_temp.selectExpr(
	"JNR_MERCH_LKUP___DUMMY_JOIN1 as DUMMY_JOIN1",
	"JNR_MERCH_LKUP___WEEK_DT as WEEK_DT",
	"JNR_MERCH_LKUP___LOCATION_ID as LOCATION_ID",
	"JNR_MERCH_LKUP___COMP_CURR_FLAG as COMP_CURR_FLAG",
	"JNR_MERCH_LKUP___SALES_CURR_FLAG as SALES_CURR_FLAG",
	"JNR_MERCH_LKUP___TOTAL_52WK_SALES_AMT as TOTAL_52WK_SALES_AMT",
	"JNR_MERCH_LKUP___TOTAL_52WK_COMP_STORES_AMT as TOTAL_52WK_COMP_STORES_AMT",
	"JNR_MERCH_LKUP___STORE_TOTAL_SALES_PCT as STORE_TOTAL_SALES_PCT",
	"JNR_MERCH_LKUP___RUNNING_SUM_TOTAL_SALES_PCT as RUNNING_SUM_TOTAL_SALES_PCT",
	"JNR_MERCH_LKUP___MERCH_52WK_SALES_AMT as MERCH_52WK_SALES_AMT",
	"JNR_MERCH_LKUP___MERCH_52WK_COMP_STORES_AMT as MERCH_52WK_COMP_STORES_AMT",
	"JNR_MERCH_LKUP___STORE_MERCH_SALES_PCT as STORE_MERCH_SALES_PCT",
	"JNR_MERCH_LKUP___RUNNING_SUM_MERCH_SALES_PCT as RUNNING_SUM_MERCH_SALES_PCT",
	"JNR_MERCH_LKUP___SERVICES_52WK_SALES_AMT as SERVICES_52WK_SALES_AMT",
	"JNR_MERCH_LKUP___SERVICES_52WK_COMP_STORES_AMT as SERVICES_52WK_COMP_STORES_AMT",
	"JNR_MERCH_LKUP___STORE_SERVICES_SALES_PCT as STORE_SERVICES_SALES_PCT",
	"JNR_MERCH_LKUP___RUNNING_SUM_SERVICES_SALES_PCT as RUNNING_SUM_SERVICES_SALES_PCT",
	"JNR_MERCH_LKUP___SALON_52WK_SALES_AMT as SALON_52WK_SALES_AMT",
	"JNR_MERCH_LKUP___SALON_52WK_COMP_STORES_AMT as SALON_52WK_COMP_STORES_AMT",
	"JNR_MERCH_LKUP___STORE_SALON_SALES_PCT as STORE_SALON_SALES_PCT",
	"JNR_MERCH_LKUP___RUNNING_SUM_SALON_SALES_PCT as RUNNING_SUM_SALON_SALES_PCT",
	"JNR_MERCH_LKUP___TRAINING_52WK_SALES_AMT as TRAINING_52WK_SALES_AMT",
	"JNR_MERCH_LKUP___TRAINING_52WK_COMP_STORES_AMT as TRAINING_52WK_COMP_STORES_AMT",
	"JNR_MERCH_LKUP___STORE_TRAINING_SALES_PCT as STORE_TRAINING_SALES_PCT",
	"JNR_MERCH_LKUP___RUNNING_SUM_TRAINING_SALES_PCT as RUNNING_SUM_TRAINING_SALES_PCT",
	"JNR_MERCH_LKUP___HOTEL_DDC_52WK_SALES_AMT as HOTEL_DDC_52WK_SALES_AMT",
	"JNR_MERCH_LKUP___HOTEL_DDC_52WK_COMP_STORES_AMT as HOTEL_DDC_52WK_COMP_STORES_AMT",
	"JNR_MERCH_LKUP___STORE_HOTEL_DDC_SALES_PCT as STORE_HOTEL_DDC_SALES_PCT",
	"JNR_MERCH_LKUP___RUNNING_SUM_HOTEL_DDC_SALES_PCT as RUNNING_SUM_HOTEL_DDC_SALES_PCT",
	"JNR_MERCH_LKUP___CONSUMABLES_52WK_SALES_AMT as CONSUMABLES_52WK_SALES_AMT",
	"JNR_MERCH_LKUP___CONSUMABLES_52WK_COMP_STORES_AMT as CONSUMABLES_52WK_COMP_STORES_AMT",
	"JNR_MERCH_LKUP___STORE_CONSUMABLES_SALES_PCT as STORE_CONSUMABLES_SALES_PCT",
	"JNR_MERCH_LKUP___RUNNING_SUM_CONSUMABLES_SALES_PCT as RUNNING_SUM_CONSUMABLES_SALES_PCT",
	"JNR_MERCH_LKUP___HARDGOODS_52WK_SALES_AMT as HARDGOODS_52WK_SALES_AMT",
	"JNR_MERCH_LKUP___HARDGOODS_52WK_COMP_STORES_AMT as HARDGOODS_52WK_COMP_STORES_AMT",
	"JNR_MERCH_LKUP___STORE_HARDGOODS_SALES_PCT as STORE_HARDGOODS_SALES_PCT",
	"JNR_MERCH_LKUP___RUNNING_SUM_HARDGOODS_SALES_PCT as RUNNING_SUM_HARDGOODS_SALES_PCT",
	"JNR_MERCH_LKUP___SPECIALTY_52WK_SALES_AMT as SPECIALTY_52WK_SALES_AMT",
	"JNR_MERCH_LKUP___SPECIALTY_52WK_COMP_STORES_AMT as SPECIALTY_52WK_COMP_STORES_AMT",
	"JNR_MERCH_LKUP___STORE_SPECIALTY_SALES_PCT as STORE_SPECIALTY_SALES_PCT",
	"JNR_MERCH_LKUP___RUNNING_SUM_SPECIALTY_SALES_PCT as RUNNING_SUM_SPECIALTY_SALES_PCT",
	"JNR_MERCH_LKUP___RANKING_CD_MERCH as RANKING_CD_MERCH",
	"JNR_MERCH_LKUP___RANKING_START_DT as FIL_MERCH_LKUP___RANKING_START_DT",
	"JNR_MERCH_LKUP___RANKING_END_DT as FIL_MERCH_LKUP___RANKING_END_DT",
	"JNR_MERCH_LKUP___RANKING_LEVEL_MERCH as RANKING_LEVEL_MERCH",
	"JNR_MERCH_LKUP___RANKING_START_PERCENT as FIL_MERCH_LKUP___RANKING_START_PERCENT",
	"JNR_MERCH_LKUP___RANKING_END_PERCENT as FIL_MERCH_LKUP___RANKING_END_PERCENT",
	"JNR_MERCH_LKUP___RANKING_CD_TOTAL as RANKING_CD_TOTAL",
	"JNR_MERCH_LKUP___RANKING_LEVEL_TOTAL as RANKING_LEVEL_TOTAL").filter("WEEK_DT >= FIL_MERCH_LKUP___RANKING_START_DT AND WEEK_DT <= FIL_MERCH_LKUP___RANKING_END_DT AND RUNNING_SUM_MERCH_SALES_PCT > FIL_MERCH_LKUP___RANKING_START_PERCENT AND RUNNING_SUM_MERCH_SALES_PCT <= FIL_MERCH_LKUP___RANKING_END_PERCENT").withColumn("sys_row_id", monotonically_increasing_id())

# COMMAND ----------

# Processing node JNR_SERVICES_LKUP, type JOINER 
# COLUMN COUNT: 52
FIL_MERCH_LKUP=FIL_MERCH_LKUP.withColumn('DUMMY_JOIN1',lit(1))
EXP_SERVICES_LKUP=EXP_SERVICES_LKUP.withColumn('DUMMY_JOIN',lit(1))
JNR_SERVICES_LKUP = FIL_MERCH_LKUP.join(EXP_SERVICES_LKUP,[FIL_MERCH_LKUP.DUMMY_JOIN1 == EXP_SERVICES_LKUP.DUMMY_JOIN],'left_outer')

# COMMAND ----------

# Processing node FIL_SERVICES_LKUP, type FILTER 
# COLUMN COUNT: 51

# for each involved DataFrame, append the dataframe name to each column
JNR_SERVICES_LKUP_temp = JNR_SERVICES_LKUP.toDF(*["JNR_SERVICES_LKUP___" + col for col in JNR_SERVICES_LKUP.columns])

FIL_SERVICES_LKUP = JNR_SERVICES_LKUP_temp.selectExpr(
	"JNR_SERVICES_LKUP___DUMMY_JOIN1 as DUMMY_JOIN1",
	"JNR_SERVICES_LKUP___WEEK_DT as WEEK_DT",
	"JNR_SERVICES_LKUP___LOCATION_ID as LOCATION_ID",
	"JNR_SERVICES_LKUP___COMP_CURR_FLAG as COMP_CURR_FLAG",
	"JNR_SERVICES_LKUP___SALES_CURR_FLAG as SALES_CURR_FLAG",
	"JNR_SERVICES_LKUP___TOTAL_52WK_SALES_AMT as TOTAL_52WK_SALES_AMT",
	"JNR_SERVICES_LKUP___TOTAL_52WK_COMP_STORES_AMT as TOTAL_52WK_COMP_STORES_AMT",
	"JNR_SERVICES_LKUP___STORE_TOTAL_SALES_PCT as STORE_TOTAL_SALES_PCT",
	"JNR_SERVICES_LKUP___RUNNING_SUM_TOTAL_SALES_PCT as RUNNING_SUM_TOTAL_SALES_PCT",
	"JNR_SERVICES_LKUP___MERCH_52WK_SALES_AMT as MERCH_52WK_SALES_AMT",
	"JNR_SERVICES_LKUP___MERCH_52WK_COMP_STORES_AMT as MERCH_52WK_COMP_STORES_AMT",
	"JNR_SERVICES_LKUP___STORE_MERCH_SALES_PCT as STORE_MERCH_SALES_PCT",
	"JNR_SERVICES_LKUP___RUNNING_SUM_MERCH_SALES_PCT as RUNNING_SUM_MERCH_SALES_PCT",
	"JNR_SERVICES_LKUP___SERVICES_52WK_SALES_AMT as SERVICES_52WK_SALES_AMT",
	"JNR_SERVICES_LKUP___SERVICES_52WK_COMP_STORES_AMT as SERVICES_52WK_COMP_STORES_AMT",
	"JNR_SERVICES_LKUP___STORE_SERVICES_SALES_PCT as STORE_SERVICES_SALES_PCT",
	"JNR_SERVICES_LKUP___RUNNING_SUM_SERVICES_SALES_PCT as RUNNING_SUM_SERVICES_SALES_PCT",
	"JNR_SERVICES_LKUP___SALON_52WK_SALES_AMT as SALON_52WK_SALES_AMT",
	"JNR_SERVICES_LKUP___SALON_52WK_COMP_STORES_AMT as SALON_52WK_COMP_STORES_AMT",
	"JNR_SERVICES_LKUP___STORE_SALON_SALES_PCT as STORE_SALON_SALES_PCT",
	"JNR_SERVICES_LKUP___RUNNING_SUM_SALON_SALES_PCT as RUNNING_SUM_SALON_SALES_PCT",
	"JNR_SERVICES_LKUP___TRAINING_52WK_SALES_AMT as TRAINING_52WK_SALES_AMT",
	"JNR_SERVICES_LKUP___TRAINING_52WK_COMP_STORES_AMT as TRAINING_52WK_COMP_STORES_AMT",
	"JNR_SERVICES_LKUP___STORE_TRAINING_SALES_PCT as STORE_TRAINING_SALES_PCT",
	"JNR_SERVICES_LKUP___RUNNING_SUM_TRAINING_SALES_PCT as RUNNING_SUM_TRAINING_SALES_PCT",
	"JNR_SERVICES_LKUP___HOTEL_DDC_52WK_SALES_AMT as HOTEL_DDC_52WK_SALES_AMT",
	"JNR_SERVICES_LKUP___HOTEL_DDC_52WK_COMP_STORES_AMT as HOTEL_DDC_52WK_COMP_STORES_AMT",
	"JNR_SERVICES_LKUP___STORE_HOTEL_DDC_SALES_PCT as STORE_HOTEL_DDC_SALES_PCT",
	"JNR_SERVICES_LKUP___RUNNING_SUM_HOTEL_DDC_SALES_PCT as RUNNING_SUM_HOTEL_DDC_SALES_PCT",
	"JNR_SERVICES_LKUP___CONSUMABLES_52WK_SALES_AMT as CONSUMABLES_52WK_SALES_AMT",
	"JNR_SERVICES_LKUP___CONSUMABLES_52WK_COMP_STORES_AMT as CONSUMABLES_52WK_COMP_STORES_AMT",
	"JNR_SERVICES_LKUP___STORE_CONSUMABLES_SALES_PCT as STORE_CONSUMABLES_SALES_PCT",
	"JNR_SERVICES_LKUP___RUNNING_SUM_CONSUMABLES_SALES_PCT as RUNNING_SUM_CONSUMABLES_SALES_PCT",
	"JNR_SERVICES_LKUP___HARDGOODS_52WK_SALES_AMT as HARDGOODS_52WK_SALES_AMT",
	"JNR_SERVICES_LKUP___HARDGOODS_52WK_COMP_STORES_AMT as HARDGOODS_52WK_COMP_STORES_AMT",
	"JNR_SERVICES_LKUP___STORE_HARDGOODS_SALES_PCT as STORE_HARDGOODS_SALES_PCT",
	"JNR_SERVICES_LKUP___RUNNING_SUM_HARDGOODS_SALES_PCT as RUNNING_SUM_HARDGOODS_SALES_PCT",
	"JNR_SERVICES_LKUP___SPECIALTY_52WK_SALES_AMT as SPECIALTY_52WK_SALES_AMT",
	"JNR_SERVICES_LKUP___SPECIALTY_52WK_COMP_STORES_AMT as SPECIALTY_52WK_COMP_STORES_AMT",
	"JNR_SERVICES_LKUP___STORE_SPECIALTY_SALES_PCT as STORE_SPECIALTY_SALES_PCT",
	"JNR_SERVICES_LKUP___RUNNING_SUM_SPECIALTY_SALES_PCT as RUNNING_SUM_SPECIALTY_SALES_PCT",
	"JNR_SERVICES_LKUP___RANKING_CD_SERVICES as RANKING_CD_SERVICES",
	"JNR_SERVICES_LKUP___RANKING_START_DT as RANKING_START_DT",
	"JNR_SERVICES_LKUP___RANKING_END_DT as RANKING_END_DT",
	"JNR_SERVICES_LKUP___RANKING_LEVEL_SERVICES as RANKING_LEVEL_SERVICES",
	"JNR_SERVICES_LKUP___RANKING_START_PERCENT as RANKING_START_PERCENT",
	"JNR_SERVICES_LKUP___RANKING_END_PERCENT as RANKING_END_PERCENT",
	"JNR_SERVICES_LKUP___RANKING_CD_TOTAL as RANKING_CD_TOTAL",
	"JNR_SERVICES_LKUP___RANKING_LEVEL_TOTAL as RANKING_LEVEL_TOTAL",
	"JNR_SERVICES_LKUP___RANKING_CD_MERCH as RANKING_CD_MERCH",
	"JNR_SERVICES_LKUP___RANKING_LEVEL_MERCH as RANKING_LEVEL_MERCH").filter("WEEK_DT >= RANKING_START_DT AND WEEK_DT <= RANKING_END_DT AND RUNNING_SUM_SERVICES_SALES_PCT > RANKING_START_PERCENT AND RUNNING_SUM_SERVICES_SALES_PCT <= RANKING_END_PERCENT").withColumn("sys_row_id", monotonically_increasing_id())

# COMMAND ----------

# Processing node JNR_SALON_LKUP, type JOINER . Note: using additional SELECT to rename incoming columns
# COLUMN COUNT: 54

# for each involved DataFrame, append the dataframe name to each column
FIL_SERVICES_LKUP_temp = FIL_SERVICES_LKUP.toDF(*["FIL_SERVICES_LKUP___" + col for col in FIL_SERVICES_LKUP.columns])
EXP_SALON_LKUP_temp = EXP_SALON_LKUP.toDF(*["EXP_SALON_LKUP___" + col for col in EXP_SALON_LKUP.columns])

FIL_SERVICES_LKUP_temp=FIL_SERVICES_LKUP_temp.withColumn('FIL_SERVICES_LKUP___DUMMY_JOIN1',lit(1))
EXP_SALON_LKUP_temp=EXP_SALON_LKUP_temp.withColumn('EXP_SALON_LKUP___DUMMY_JOIN',lit(1))

JNR_SALON_LKUP = FIL_SERVICES_LKUP_temp.join(EXP_SALON_LKUP_temp,[FIL_SERVICES_LKUP_temp.FIL_SERVICES_LKUP___DUMMY_JOIN1 == EXP_SALON_LKUP_temp.EXP_SALON_LKUP___DUMMY_JOIN],'left_outer').selectExpr(
	"FIL_SERVICES_LKUP___DUMMY_JOIN1 as DUMMY_JOIN1",
	"FIL_SERVICES_LKUP___WEEK_DT as WEEK_DT",
	"FIL_SERVICES_LKUP___LOCATION_ID as LOCATION_ID",
	"FIL_SERVICES_LKUP___COMP_CURR_FLAG as COMP_CURR_FLAG",
	"FIL_SERVICES_LKUP___SALES_CURR_FLAG as SALES_CURR_FLAG",
	"FIL_SERVICES_LKUP___TOTAL_52WK_SALES_AMT as TOTAL_52WK_SALES_AMT",
	"FIL_SERVICES_LKUP___TOTAL_52WK_COMP_STORES_AMT as TOTAL_52WK_COMP_STORES_AMT",
	"FIL_SERVICES_LKUP___STORE_TOTAL_SALES_PCT as STORE_TOTAL_SALES_PCT",
	"FIL_SERVICES_LKUP___RUNNING_SUM_TOTAL_SALES_PCT as RUNNING_SUM_TOTAL_SALES_PCT",
	"FIL_SERVICES_LKUP___MERCH_52WK_SALES_AMT as MERCH_52WK_SALES_AMT",
	"FIL_SERVICES_LKUP___MERCH_52WK_COMP_STORES_AMT as MERCH_52WK_COMP_STORES_AMT",
	"FIL_SERVICES_LKUP___STORE_MERCH_SALES_PCT as STORE_MERCH_SALES_PCT",
	"FIL_SERVICES_LKUP___RUNNING_SUM_MERCH_SALES_PCT as RUNNING_SUM_MERCH_SALES_PCT",
	"FIL_SERVICES_LKUP___SERVICES_52WK_SALES_AMT as SERVICES_52WK_SALES_AMT",
	"FIL_SERVICES_LKUP___SERVICES_52WK_COMP_STORES_AMT as SERVICES_52WK_COMP_STORES_AMT",
	"FIL_SERVICES_LKUP___STORE_SERVICES_SALES_PCT as STORE_SERVICES_SALES_PCT",
	"FIL_SERVICES_LKUP___RUNNING_SUM_SERVICES_SALES_PCT as RUNNING_SUM_SERVICES_SALES_PCT",
	"FIL_SERVICES_LKUP___SALON_52WK_SALES_AMT as SALON_52WK_SALES_AMT",
	"FIL_SERVICES_LKUP___SALON_52WK_COMP_STORES_AMT as SALON_52WK_COMP_STORES_AMT",
	"FIL_SERVICES_LKUP___STORE_SALON_SALES_PCT as STORE_SALON_SALES_PCT",
	"FIL_SERVICES_LKUP___RUNNING_SUM_SALON_SALES_PCT as RUNNING_SUM_SALON_SALES_PCT",
	"FIL_SERVICES_LKUP___TRAINING_52WK_SALES_AMT as TRAINING_52WK_SALES_AMT",
	"FIL_SERVICES_LKUP___TRAINING_52WK_COMP_STORES_AMT as TRAINING_52WK_COMP_STORES_AMT",
	"FIL_SERVICES_LKUP___STORE_TRAINING_SALES_PCT as STORE_TRAINING_SALES_PCT",
	"FIL_SERVICES_LKUP___RUNNING_SUM_TRAINING_SALES_PCT as RUNNING_SUM_TRAINING_SALES_PCT",
	"FIL_SERVICES_LKUP___HOTEL_DDC_52WK_SALES_AMT as HOTEL_DDC_52WK_SALES_AMT",
	"FIL_SERVICES_LKUP___HOTEL_DDC_52WK_COMP_STORES_AMT as HOTEL_DDC_52WK_COMP_STORES_AMT",
	"FIL_SERVICES_LKUP___STORE_HOTEL_DDC_SALES_PCT as STORE_HOTEL_DDC_SALES_PCT",
	"FIL_SERVICES_LKUP___RUNNING_SUM_HOTEL_DDC_SALES_PCT as RUNNING_SUM_HOTEL_DDC_SALES_PCT",
	"FIL_SERVICES_LKUP___CONSUMABLES_52WK_SALES_AMT as CONSUMABLES_52WK_SALES_AMT",
	"FIL_SERVICES_LKUP___CONSUMABLES_52WK_COMP_STORES_AMT as CONSUMABLES_52WK_COMP_STORES_AMT",
	"FIL_SERVICES_LKUP___STORE_CONSUMABLES_SALES_PCT as STORE_CONSUMABLES_SALES_PCT",
	"FIL_SERVICES_LKUP___RUNNING_SUM_CONSUMABLES_SALES_PCT as RUNNING_SUM_CONSUMABLES_SALES_PCT",
	"FIL_SERVICES_LKUP___HARDGOODS_52WK_SALES_AMT as HARDGOODS_52WK_SALES_AMT",
	"FIL_SERVICES_LKUP___HARDGOODS_52WK_COMP_STORES_AMT as HARDGOODS_52WK_COMP_STORES_AMT",
	"FIL_SERVICES_LKUP___STORE_HARDGOODS_SALES_PCT as STORE_HARDGOODS_SALES_PCT",
	"FIL_SERVICES_LKUP___RUNNING_SUM_HARDGOODS_SALES_PCT as RUNNING_SUM_HARDGOODS_SALES_PCT",
	"FIL_SERVICES_LKUP___SPECIALTY_52WK_SALES_AMT as SPECIALTY_52WK_SALES_AMT",
	"FIL_SERVICES_LKUP___SPECIALTY_52WK_COMP_STORES_AMT as SPECIALTY_52WK_COMP_STORES_AMT",
	"FIL_SERVICES_LKUP___STORE_SPECIALTY_SALES_PCT as STORE_SPECIALTY_SALES_PCT",
	"FIL_SERVICES_LKUP___RUNNING_SUM_SPECIALTY_SALES_PCT as RUNNING_SUM_SPECIALTY_SALES_PCT",
	"EXP_SALON_LKUP___DUMMY_JOIN as DUMMY_JOIN",
	"EXP_SALON_LKUP___RANKING_CD_SALON as RANKING_CD_SALON",
	"EXP_SALON_LKUP___RANKING_START_DT as RANKING_START_DT",
	"EXP_SALON_LKUP___RANKING_END_DT as RANKING_END_DT",
	"EXP_SALON_LKUP___RANKING_LEVEL_SALON as RANKING_LEVEL_SALON",
	"EXP_SALON_LKUP___RANKING_START_PERCENT as RANKING_START_PERCENT",
	"EXP_SALON_LKUP___RANKING_END_PERCENT as RANKING_END_PERCENT",
	"FIL_SERVICES_LKUP___RANKING_CD_TOTAL as RANKING_CD_TOTAL",
	"FIL_SERVICES_LKUP___RANKING_LEVEL_TOTAL as RANKING_LEVEL_TOTAL",
	"FIL_SERVICES_LKUP___RANKING_CD_MERCH as RANKING_CD_MERCH",
	"FIL_SERVICES_LKUP___RANKING_LEVEL_MERCH as RANKING_LEVEL_MERCH",
	"FIL_SERVICES_LKUP___RANKING_CD_SERVICES as RANKING_CD_SERVICES1",
	"FIL_SERVICES_LKUP___RANKING_LEVEL_SERVICES as RANKING_LEVEL_SERVICES1")

# COMMAND ----------

# Processing node FIL_SALON_LKUP, type FILTER 
# COLUMN COUNT: 53

# for each involved DataFrame, append the dataframe name to each column
JNR_SALON_LKUP_temp = JNR_SALON_LKUP.toDF(*["JNR_SALON_LKUP___" + col for col in JNR_SALON_LKUP.columns])

FIL_SALON_LKUP = JNR_SALON_LKUP_temp.selectExpr(
	"JNR_SALON_LKUP___DUMMY_JOIN1 as DUMMY_JOIN1",
	"JNR_SALON_LKUP___WEEK_DT as WEEK_DT",
	"JNR_SALON_LKUP___LOCATION_ID as LOCATION_ID",
	"JNR_SALON_LKUP___COMP_CURR_FLAG as COMP_CURR_FLAG",
	"JNR_SALON_LKUP___SALES_CURR_FLAG as SALES_CURR_FLAG",
	"JNR_SALON_LKUP___TOTAL_52WK_SALES_AMT as TOTAL_52WK_SALES_AMT",
	"JNR_SALON_LKUP___TOTAL_52WK_COMP_STORES_AMT as TOTAL_52WK_COMP_STORES_AMT",
	"JNR_SALON_LKUP___STORE_TOTAL_SALES_PCT as STORE_TOTAL_SALES_PCT",
	"JNR_SALON_LKUP___RUNNING_SUM_TOTAL_SALES_PCT as RUNNING_SUM_TOTAL_SALES_PCT",
	"JNR_SALON_LKUP___MERCH_52WK_SALES_AMT as MERCH_52WK_SALES_AMT",
	"JNR_SALON_LKUP___MERCH_52WK_COMP_STORES_AMT as MERCH_52WK_COMP_STORES_AMT",
	"JNR_SALON_LKUP___STORE_MERCH_SALES_PCT as STORE_MERCH_SALES_PCT",
	"JNR_SALON_LKUP___RUNNING_SUM_MERCH_SALES_PCT as RUNNING_SUM_MERCH_SALES_PCT",
	"JNR_SALON_LKUP___SERVICES_52WK_SALES_AMT as SERVICES_52WK_SALES_AMT",
	"JNR_SALON_LKUP___SERVICES_52WK_COMP_STORES_AMT as SERVICES_52WK_COMP_STORES_AMT",
	"JNR_SALON_LKUP___STORE_SERVICES_SALES_PCT as STORE_SERVICES_SALES_PCT",
	"JNR_SALON_LKUP___RUNNING_SUM_SERVICES_SALES_PCT as RUNNING_SUM_SERVICES_SALES_PCT",
	"JNR_SALON_LKUP___SALON_52WK_SALES_AMT as SALON_52WK_SALES_AMT",
	"JNR_SALON_LKUP___SALON_52WK_COMP_STORES_AMT as SALON_52WK_COMP_STORES_AMT",
	"JNR_SALON_LKUP___STORE_SALON_SALES_PCT as STORE_SALON_SALES_PCT",
	"JNR_SALON_LKUP___RUNNING_SUM_SALON_SALES_PCT as RUNNING_SUM_SALON_SALES_PCT",
	"JNR_SALON_LKUP___TRAINING_52WK_SALES_AMT as TRAINING_52WK_SALES_AMT",
	"JNR_SALON_LKUP___TRAINING_52WK_COMP_STORES_AMT as TRAINING_52WK_COMP_STORES_AMT",
	"JNR_SALON_LKUP___STORE_TRAINING_SALES_PCT as STORE_TRAINING_SALES_PCT",
	"JNR_SALON_LKUP___RUNNING_SUM_TRAINING_SALES_PCT as RUNNING_SUM_TRAINING_SALES_PCT",
	"JNR_SALON_LKUP___HOTEL_DDC_52WK_SALES_AMT as HOTEL_DDC_52WK_SALES_AMT",
	"JNR_SALON_LKUP___HOTEL_DDC_52WK_COMP_STORES_AMT as HOTEL_DDC_52WK_COMP_STORES_AMT",
	"JNR_SALON_LKUP___STORE_HOTEL_DDC_SALES_PCT as STORE_HOTEL_DDC_SALES_PCT",
	"JNR_SALON_LKUP___RUNNING_SUM_HOTEL_DDC_SALES_PCT as RUNNING_SUM_HOTEL_DDC_SALES_PCT",
	"JNR_SALON_LKUP___CONSUMABLES_52WK_SALES_AMT as CONSUMABLES_52WK_SALES_AMT",
	"JNR_SALON_LKUP___CONSUMABLES_52WK_COMP_STORES_AMT as CONSUMABLES_52WK_COMP_STORES_AMT",
	"JNR_SALON_LKUP___STORE_CONSUMABLES_SALES_PCT as STORE_CONSUMABLES_SALES_PCT",
	"JNR_SALON_LKUP___RUNNING_SUM_CONSUMABLES_SALES_PCT as RUNNING_SUM_CONSUMABLES_SALES_PCT",
	"JNR_SALON_LKUP___HARDGOODS_52WK_SALES_AMT as HARDGOODS_52WK_SALES_AMT",
	"JNR_SALON_LKUP___HARDGOODS_52WK_COMP_STORES_AMT as HARDGOODS_52WK_COMP_STORES_AMT",
	"JNR_SALON_LKUP___STORE_HARDGOODS_SALES_PCT as STORE_HARDGOODS_SALES_PCT",
	"JNR_SALON_LKUP___RUNNING_SUM_HARDGOODS_SALES_PCT as RUNNING_SUM_HARDGOODS_SALES_PCT",
	"JNR_SALON_LKUP___SPECIALTY_52WK_SALES_AMT as SPECIALTY_52WK_SALES_AMT",
	"JNR_SALON_LKUP___SPECIALTY_52WK_COMP_STORES_AMT as SPECIALTY_52WK_COMP_STORES_AMT",
	"JNR_SALON_LKUP___STORE_SPECIALTY_SALES_PCT as STORE_SPECIALTY_SALES_PCT",
	"JNR_SALON_LKUP___RUNNING_SUM_SPECIALTY_SALES_PCT as RUNNING_SUM_SPECIALTY_SALES_PCT",
	"JNR_SALON_LKUP___RANKING_CD_SALON as RANKING_CD_SALON",
	"JNR_SALON_LKUP___RANKING_START_DT as FIL_SALON_LKUP___RANKING_START_DT",
	"JNR_SALON_LKUP___RANKING_END_DT as FIL_SALON_LKUP___RANKING_END_DT",
	"JNR_SALON_LKUP___RANKING_LEVEL_SALON as RANKING_LEVEL_SALON",
	"JNR_SALON_LKUP___RANKING_START_PERCENT as FIL_SALON_LKUP___RANKING_START_PERCENT",
	"JNR_SALON_LKUP___RANKING_END_PERCENT as FIL_SALON_LKUP___RANKING_END_PERCENT",
	"JNR_SALON_LKUP___RANKING_CD_TOTAL as RANKING_CD_TOTAL",
	"JNR_SALON_LKUP___RANKING_LEVEL_TOTAL as RANKING_LEVEL_TOTAL",
	"JNR_SALON_LKUP___RANKING_CD_MERCH as RANKING_CD_MERCH",
	"JNR_SALON_LKUP___RANKING_LEVEL_MERCH as RANKING_LEVEL_MERCH",
	"JNR_SALON_LKUP___RANKING_CD_SERVICES1 as RANKING_CD_SERVICES1",
	"JNR_SALON_LKUP___RANKING_LEVEL_SERVICES1 as RANKING_LEVEL_SERVICES1").filter("WEEK_DT >= FIL_SALON_LKUP___RANKING_START_DT AND WEEK_DT <= FIL_SALON_LKUP___RANKING_END_DT AND RUNNING_SUM_SALON_SALES_PCT > FIL_SALON_LKUP___RANKING_START_PERCENT AND RUNNING_SUM_SALON_SALES_PCT <= FIL_SALON_LKUP___RANKING_END_PERCENT").withColumn("sys_row_id", monotonically_increasing_id())

# COMMAND ----------

# Processing node JNR_TRAINING_LKUP, type JOINER 
# COLUMN COUNT: 56
FIL_SALON_LKUP=FIL_SALON_LKUP.withColumn('DUMMY_JOIN1',lit(1))
EXP_TRAINING_LKUP=EXP_TRAINING_LKUP.withColumn('DUMMY_JOIN',lit(1))
JNR_TRAINING_LKUP = FIL_SALON_LKUP.join(EXP_TRAINING_LKUP,[FIL_SALON_LKUP.DUMMY_JOIN1 == EXP_TRAINING_LKUP.DUMMY_JOIN],'left_outer')

# COMMAND ----------

# Processing node FIL_TRAINING_LKUP, type FILTER . Note: using additional SELECT to rename incoming columns
# COLUMN COUNT: 55

# for each involved DataFrame, append the dataframe name to each column
JNR_TRAINING_LKUP_temp = JNR_TRAINING_LKUP.toDF(*["JNR_TRAINING_LKUP___" + col for col in JNR_TRAINING_LKUP.columns])

FIL_TRAINING_LKUP = JNR_TRAINING_LKUP_temp.selectExpr(
	"JNR_TRAINING_LKUP___DUMMY_JOIN1 as DUMMY_JOIN1",
	"JNR_TRAINING_LKUP___WEEK_DT as WEEK_DT",
	"JNR_TRAINING_LKUP___LOCATION_ID as LOCATION_ID",
	"JNR_TRAINING_LKUP___COMP_CURR_FLAG as COMP_CURR_FLAG",
	"JNR_TRAINING_LKUP___SALES_CURR_FLAG as SALES_CURR_FLAG",
	"JNR_TRAINING_LKUP___TOTAL_52WK_SALES_AMT as TOTAL_52WK_SALES_AMT",
	"JNR_TRAINING_LKUP___TOTAL_52WK_COMP_STORES_AMT as TOTAL_52WK_COMP_STORES_AMT",
	"JNR_TRAINING_LKUP___STORE_TOTAL_SALES_PCT as STORE_TOTAL_SALES_PCT",
	"JNR_TRAINING_LKUP___RUNNING_SUM_TOTAL_SALES_PCT as RUNNING_SUM_TOTAL_SALES_PCT",
	"JNR_TRAINING_LKUP___MERCH_52WK_SALES_AMT as MERCH_52WK_SALES_AMT",
	"JNR_TRAINING_LKUP___MERCH_52WK_COMP_STORES_AMT as MERCH_52WK_COMP_STORES_AMT",
	"JNR_TRAINING_LKUP___STORE_MERCH_SALES_PCT as STORE_MERCH_SALES_PCT",
	"JNR_TRAINING_LKUP___RUNNING_SUM_MERCH_SALES_PCT as RUNNING_SUM_MERCH_SALES_PCT",
	"JNR_TRAINING_LKUP___SERVICES_52WK_SALES_AMT as SERVICES_52WK_SALES_AMT",
	"JNR_TRAINING_LKUP___SERVICES_52WK_COMP_STORES_AMT as SERVICES_52WK_COMP_STORES_AMT",
	"JNR_TRAINING_LKUP___STORE_SERVICES_SALES_PCT as STORE_SERVICES_SALES_PCT",
	"JNR_TRAINING_LKUP___RUNNING_SUM_SERVICES_SALES_PCT as RUNNING_SUM_SERVICES_SALES_PCT",
	"JNR_TRAINING_LKUP___SALON_52WK_SALES_AMT as SALON_52WK_SALES_AMT",
	"JNR_TRAINING_LKUP___SALON_52WK_COMP_STORES_AMT as SALON_52WK_COMP_STORES_AMT",
	"JNR_TRAINING_LKUP___STORE_SALON_SALES_PCT as STORE_SALON_SALES_PCT",
	"JNR_TRAINING_LKUP___RUNNING_SUM_SALON_SALES_PCT as RUNNING_SUM_SALON_SALES_PCT",
	"JNR_TRAINING_LKUP___TRAINING_52WK_SALES_AMT as TRAINING_52WK_SALES_AMT",
	"JNR_TRAINING_LKUP___TRAINING_52WK_COMP_STORES_AMT as TRAINING_52WK_COMP_STORES_AMT",
	"JNR_TRAINING_LKUP___STORE_TRAINING_SALES_PCT as STORE_TRAINING_SALES_PCT",
	"JNR_TRAINING_LKUP___RUNNING_SUM_TRAINING_SALES_PCT as RUNNING_SUM_TRAINING_SALES_PCT",
	"JNR_TRAINING_LKUP___HOTEL_DDC_52WK_SALES_AMT as HOTEL_DDC_52WK_SALES_AMT",
	"JNR_TRAINING_LKUP___HOTEL_DDC_52WK_COMP_STORES_AMT as HOTEL_DDC_52WK_COMP_STORES_AMT",
	"JNR_TRAINING_LKUP___STORE_HOTEL_DDC_SALES_PCT as STORE_HOTEL_DDC_SALES_PCT",
	"JNR_TRAINING_LKUP___RUNNING_SUM_HOTEL_DDC_SALES_PCT as RUNNING_SUM_HOTEL_DDC_SALES_PCT",
	"JNR_TRAINING_LKUP___CONSUMABLES_52WK_SALES_AMT as CONSUMABLES_52WK_SALES_AMT",
	"JNR_TRAINING_LKUP___CONSUMABLES_52WK_COMP_STORES_AMT as CONSUMABLES_52WK_COMP_STORES_AMT",
	"JNR_TRAINING_LKUP___STORE_CONSUMABLES_SALES_PCT as STORE_CONSUMABLES_SALES_PCT",
	"JNR_TRAINING_LKUP___RUNNING_SUM_CONSUMABLES_SALES_PCT as RUNNING_SUM_CONSUMABLES_SALES_PCT",
	"JNR_TRAINING_LKUP___HARDGOODS_52WK_SALES_AMT as HARDGOODS_52WK_SALES_AMT",
	"JNR_TRAINING_LKUP___HARDGOODS_52WK_COMP_STORES_AMT as HARDGOODS_52WK_COMP_STORES_AMT",
	"JNR_TRAINING_LKUP___STORE_HARDGOODS_SALES_PCT as STORE_HARDGOODS_SALES_PCT",
	"JNR_TRAINING_LKUP___RUNNING_SUM_HARDGOODS_SALES_PCT as RUNNING_SUM_HARDGOODS_SALES_PCT",
	"JNR_TRAINING_LKUP___SPECIALTY_52WK_SALES_AMT as SPECIALTY_52WK_SALES_AMT",
	"JNR_TRAINING_LKUP___SPECIALTY_52WK_COMP_STORES_AMT as SPECIALTY_52WK_COMP_STORES_AMT",
	"JNR_TRAINING_LKUP___STORE_SPECIALTY_SALES_PCT as STORE_SPECIALTY_SALES_PCT",
	"JNR_TRAINING_LKUP___RUNNING_SUM_SPECIALTY_SALES_PCT as RUNNING_SUM_SPECIALTY_SALES_PCT",
	"JNR_TRAINING_LKUP___RANKING_CD_TRAINING as RANKING_CD_TRAINING",
	"JNR_TRAINING_LKUP___RANKING_START_DT as RANKING_START_DT",
	"JNR_TRAINING_LKUP___RANKING_END_DT as RANKING_END_DT",
	"JNR_TRAINING_LKUP___RANKING_LEVEL_TRAINING as RANKING_LEVEL_TRAINING",
	"JNR_TRAINING_LKUP___RANKING_START_PERCENT as RANKING_START_PERCENT",
	"JNR_TRAINING_LKUP___RANKING_END_PERCENT as RANKING_END_PERCENT",
	"JNR_TRAINING_LKUP___RANKING_CD_TOTAL as RANKING_CD_TOTAL",
	"JNR_TRAINING_LKUP___RANKING_LEVEL_TOTAL as RANKING_LEVEL_TOTAL",
	"JNR_TRAINING_LKUP___RANKING_CD_MERCH as RANKING_CD_MERCH",
	"JNR_TRAINING_LKUP___RANKING_LEVEL_MERCH as RANKING_LEVEL_MERCH",
	"JNR_TRAINING_LKUP___RANKING_CD_SERVICES1 as RANKING_CD_SERVICES1",
	"JNR_TRAINING_LKUP___RANKING_LEVEL_SERVICES1 as RANKING_LEVEL_SERVICES1",
	"JNR_TRAINING_LKUP___RANKING_CD_SALON as RANKING_CD_SALON",
	"JNR_TRAINING_LKUP___RANKING_LEVEL_SALON as RANKING_LEVEL_SALON1").filter("WEEK_DT >= RANKING_START_DT AND WEEK_DT <= RANKING_END_DT AND RUNNING_SUM_TRAINING_SALES_PCT > RANKING_START_PERCENT AND RUNNING_SUM_TRAINING_SALES_PCT <= RANKING_END_PERCENT").withColumn("sys_row_id", monotonically_increasing_id())

# COMMAND ----------

# Processing node JNR_HOTEL_LKUP, type JOINER . Note: using additional SELECT to rename incoming columns
# COLUMN COUNT: 58

# for each involved DataFrame, append the dataframe name to each column
FIL_TRAINING_LKUP_temp = FIL_TRAINING_LKUP.toDF(*["FIL_TRAINING_LKUP___" + col for col in FIL_TRAINING_LKUP.columns])
EXP_HOTEL_LKUP_temp = EXP_HOTEL_LKUP.toDF(*["EXP_HOTEL_LKUP___" + col for col in EXP_HOTEL_LKUP.columns])

FIL_TRAINING_LKUP_temp=FIL_TRAINING_LKUP_temp.withColumn('FIL_TRAINING_LKUP___DUMMY_JOIN1',lit(1))
EXP_HOTEL_LKUP_temp=EXP_HOTEL_LKUP_temp.withColumn('EXP_HOTEL_LKUP___DUMMY_JOIN',lit(1))
JNR_HOTEL_LKUP = FIL_TRAINING_LKUP_temp.join(EXP_HOTEL_LKUP_temp,[FIL_TRAINING_LKUP_temp.FIL_TRAINING_LKUP___DUMMY_JOIN1 == EXP_HOTEL_LKUP_temp.EXP_HOTEL_LKUP___DUMMY_JOIN],'left_outer').selectExpr(
	"FIL_TRAINING_LKUP___DUMMY_JOIN1 as DUMMY_JOIN1",
	"FIL_TRAINING_LKUP___WEEK_DT as WEEK_DT",
	"FIL_TRAINING_LKUP___LOCATION_ID as LOCATION_ID",
	"FIL_TRAINING_LKUP___COMP_CURR_FLAG as COMP_CURR_FLAG",
	"FIL_TRAINING_LKUP___SALES_CURR_FLAG as SALES_CURR_FLAG",
	"FIL_TRAINING_LKUP___TOTAL_52WK_SALES_AMT as TOTAL_52WK_SALES_AMT",
	"FIL_TRAINING_LKUP___TOTAL_52WK_COMP_STORES_AMT as TOTAL_52WK_COMP_STORES_AMT",
	"FIL_TRAINING_LKUP___STORE_TOTAL_SALES_PCT as STORE_TOTAL_SALES_PCT",
	"FIL_TRAINING_LKUP___RUNNING_SUM_TOTAL_SALES_PCT as RUNNING_SUM_TOTAL_SALES_PCT",
	"FIL_TRAINING_LKUP___MERCH_52WK_SALES_AMT as MERCH_52WK_SALES_AMT",
	"FIL_TRAINING_LKUP___MERCH_52WK_COMP_STORES_AMT as MERCH_52WK_COMP_STORES_AMT",
	"FIL_TRAINING_LKUP___STORE_MERCH_SALES_PCT as STORE_MERCH_SALES_PCT",
	"FIL_TRAINING_LKUP___RUNNING_SUM_MERCH_SALES_PCT as RUNNING_SUM_MERCH_SALES_PCT",
	"FIL_TRAINING_LKUP___SERVICES_52WK_SALES_AMT as SERVICES_52WK_SALES_AMT",
	"FIL_TRAINING_LKUP___SERVICES_52WK_COMP_STORES_AMT as SERVICES_52WK_COMP_STORES_AMT",
	"FIL_TRAINING_LKUP___STORE_SERVICES_SALES_PCT as STORE_SERVICES_SALES_PCT",
	"FIL_TRAINING_LKUP___RUNNING_SUM_SERVICES_SALES_PCT as RUNNING_SUM_SERVICES_SALES_PCT",
	"FIL_TRAINING_LKUP___SALON_52WK_SALES_AMT as SALON_52WK_SALES_AMT",
	"FIL_TRAINING_LKUP___SALON_52WK_COMP_STORES_AMT as SALON_52WK_COMP_STORES_AMT",
	"FIL_TRAINING_LKUP___STORE_SALON_SALES_PCT as STORE_SALON_SALES_PCT",
	"FIL_TRAINING_LKUP___RUNNING_SUM_SALON_SALES_PCT as RUNNING_SUM_SALON_SALES_PCT",
	"FIL_TRAINING_LKUP___TRAINING_52WK_SALES_AMT as TRAINING_52WK_SALES_AMT",
	"FIL_TRAINING_LKUP___TRAINING_52WK_COMP_STORES_AMT as TRAINING_52WK_COMP_STORES_AMT",
	"FIL_TRAINING_LKUP___STORE_TRAINING_SALES_PCT as STORE_TRAINING_SALES_PCT",
	"FIL_TRAINING_LKUP___RUNNING_SUM_TRAINING_SALES_PCT as RUNNING_SUM_TRAINING_SALES_PCT",
	"FIL_TRAINING_LKUP___HOTEL_DDC_52WK_SALES_AMT as HOTEL_DDC_52WK_SALES_AMT",
	"FIL_TRAINING_LKUP___HOTEL_DDC_52WK_COMP_STORES_AMT as HOTEL_DDC_52WK_COMP_STORES_AMT",
	"FIL_TRAINING_LKUP___STORE_HOTEL_DDC_SALES_PCT as STORE_HOTEL_DDC_SALES_PCT",
	"FIL_TRAINING_LKUP___RUNNING_SUM_HOTEL_DDC_SALES_PCT as RUNNING_SUM_HOTEL_DDC_SALES_PCT",
	"FIL_TRAINING_LKUP___CONSUMABLES_52WK_SALES_AMT as CONSUMABLES_52WK_SALES_AMT",
	"FIL_TRAINING_LKUP___CONSUMABLES_52WK_COMP_STORES_AMT as CONSUMABLES_52WK_COMP_STORES_AMT",
	"FIL_TRAINING_LKUP___STORE_CONSUMABLES_SALES_PCT as STORE_CONSUMABLES_SALES_PCT",
	"FIL_TRAINING_LKUP___RUNNING_SUM_CONSUMABLES_SALES_PCT as RUNNING_SUM_CONSUMABLES_SALES_PCT",
	"FIL_TRAINING_LKUP___HARDGOODS_52WK_SALES_AMT as HARDGOODS_52WK_SALES_AMT",
	"FIL_TRAINING_LKUP___HARDGOODS_52WK_COMP_STORES_AMT as HARDGOODS_52WK_COMP_STORES_AMT",
	"FIL_TRAINING_LKUP___STORE_HARDGOODS_SALES_PCT as STORE_HARDGOODS_SALES_PCT",
	"FIL_TRAINING_LKUP___RUNNING_SUM_HARDGOODS_SALES_PCT as RUNNING_SUM_HARDGOODS_SALES_PCT",
	"FIL_TRAINING_LKUP___SPECIALTY_52WK_SALES_AMT as SPECIALTY_52WK_SALES_AMT",
	"FIL_TRAINING_LKUP___SPECIALTY_52WK_COMP_STORES_AMT as SPECIALTY_52WK_COMP_STORES_AMT",
	"FIL_TRAINING_LKUP___STORE_SPECIALTY_SALES_PCT as STORE_SPECIALTY_SALES_PCT",
	"FIL_TRAINING_LKUP___RUNNING_SUM_SPECIALTY_SALES_PCT as RUNNING_SUM_SPECIALTY_SALES_PCT",
	"EXP_HOTEL_LKUP___DUMMY_JOIN as DUMMY_JOIN",
	"EXP_HOTEL_LKUP___RANKING_CD_HOTEL as RANKING_CD_HOTEL",
	"EXP_HOTEL_LKUP___RANKING_START_DT as RANKING_START_DT",
	"EXP_HOTEL_LKUP___RANKING_END_DT as RANKING_END_DT",
	"EXP_HOTEL_LKUP___RANKING_LEVEL_HOTEL as RANKING_LEVEL_HOTEL",
	"EXP_HOTEL_LKUP___RANKING_START_PERCENT as RANKING_START_PERCENT",
	"EXP_HOTEL_LKUP___RANKING_END_PERCENT as RANKING_END_PERCENT",
	"FIL_TRAINING_LKUP___RANKING_CD_TOTAL as RANKING_CD_TOTAL",
	"FIL_TRAINING_LKUP___RANKING_LEVEL_TOTAL as RANKING_LEVEL_TOTAL",
	"FIL_TRAINING_LKUP___RANKING_CD_MERCH as RANKING_CD_MERCH",
	"FIL_TRAINING_LKUP___RANKING_LEVEL_MERCH as RANKING_LEVEL_MERCH",
	"FIL_TRAINING_LKUP___RANKING_CD_SERVICES1 as RANKING_CD_SERVICES1",
	"FIL_TRAINING_LKUP___RANKING_LEVEL_SERVICES1 as RANKING_LEVEL_SERVICES1",
	"FIL_TRAINING_LKUP___RANKING_CD_SALON as RANKING_CD_SALON",
	"FIL_TRAINING_LKUP___RANKING_LEVEL_SALON1 as RANKING_LEVEL_SALON",
	"FIL_TRAINING_LKUP___RANKING_CD_TRAINING as RANKING_CD_TRAINING",
	"FIL_TRAINING_LKUP___RANKING_LEVEL_TRAINING as RANKING_LEVEL_TRAINING")

# COMMAND ----------

# Processing node FIL_HOTEL_LKUP, type FILTER . Note: using additional SELECT to rename incoming columns
# COLUMN COUNT: 57

# for each involved DataFrame, append the dataframe name to each column
JNR_HOTEL_LKUP_temp = JNR_HOTEL_LKUP.toDF(*["JNR_HOTEL_LKUP___" + col for col in JNR_HOTEL_LKUP.columns])

FIL_HOTEL_LKUP = JNR_HOTEL_LKUP_temp.selectExpr(
	"JNR_HOTEL_LKUP___DUMMY_JOIN1 as DUMMY_JOIN1",
	"JNR_HOTEL_LKUP___WEEK_DT as WEEK_DT",
	"JNR_HOTEL_LKUP___LOCATION_ID as LOCATION_ID",
	"JNR_HOTEL_LKUP___COMP_CURR_FLAG as COMP_CURR_FLAG",
	"JNR_HOTEL_LKUP___SALES_CURR_FLAG as SALES_CURR_FLAG",
	"JNR_HOTEL_LKUP___TOTAL_52WK_SALES_AMT as TOTAL_52WK_SALES_AMT",
	"JNR_HOTEL_LKUP___TOTAL_52WK_COMP_STORES_AMT as TOTAL_52WK_COMP_STORES_AMT",
	"JNR_HOTEL_LKUP___STORE_TOTAL_SALES_PCT as STORE_TOTAL_SALES_PCT",
	"JNR_HOTEL_LKUP___RUNNING_SUM_TOTAL_SALES_PCT as RUNNING_SUM_TOTAL_SALES_PCT",
	"JNR_HOTEL_LKUP___MERCH_52WK_SALES_AMT as MERCH_52WK_SALES_AMT",
	"JNR_HOTEL_LKUP___MERCH_52WK_COMP_STORES_AMT as MERCH_52WK_COMP_STORES_AMT",
	"JNR_HOTEL_LKUP___STORE_MERCH_SALES_PCT as STORE_MERCH_SALES_PCT",
	"JNR_HOTEL_LKUP___RUNNING_SUM_MERCH_SALES_PCT as RUNNING_SUM_MERCH_SALES_PCT",
	"JNR_HOTEL_LKUP___SERVICES_52WK_SALES_AMT as SERVICES_52WK_SALES_AMT",
	"JNR_HOTEL_LKUP___SERVICES_52WK_COMP_STORES_AMT as SERVICES_52WK_COMP_STORES_AMT",
	"JNR_HOTEL_LKUP___STORE_SERVICES_SALES_PCT as STORE_SERVICES_SALES_PCT",
	"JNR_HOTEL_LKUP___RUNNING_SUM_SERVICES_SALES_PCT as RUNNING_SUM_SERVICES_SALES_PCT",
	"JNR_HOTEL_LKUP___SALON_52WK_SALES_AMT as SALON_52WK_SALES_AMT",
	"JNR_HOTEL_LKUP___SALON_52WK_COMP_STORES_AMT as SALON_52WK_COMP_STORES_AMT",
	"JNR_HOTEL_LKUP___STORE_SALON_SALES_PCT as STORE_SALON_SALES_PCT",
	"JNR_HOTEL_LKUP___RUNNING_SUM_SALON_SALES_PCT as RUNNING_SUM_SALON_SALES_PCT",
	"JNR_HOTEL_LKUP___TRAINING_52WK_SALES_AMT as TRAINING_52WK_SALES_AMT",
	"JNR_HOTEL_LKUP___TRAINING_52WK_COMP_STORES_AMT as TRAINING_52WK_COMP_STORES_AMT",
	"JNR_HOTEL_LKUP___STORE_TRAINING_SALES_PCT as STORE_TRAINING_SALES_PCT",
	"JNR_HOTEL_LKUP___RUNNING_SUM_TRAINING_SALES_PCT as RUNNING_SUM_TRAINING_SALES_PCT",
	"JNR_HOTEL_LKUP___HOTEL_DDC_52WK_SALES_AMT as HOTEL_DDC_52WK_SALES_AMT",
	"JNR_HOTEL_LKUP___HOTEL_DDC_52WK_COMP_STORES_AMT as HOTEL_DDC_52WK_COMP_STORES_AMT",
	"JNR_HOTEL_LKUP___STORE_HOTEL_DDC_SALES_PCT as STORE_HOTEL_DDC_SALES_PCT",
	"JNR_HOTEL_LKUP___RUNNING_SUM_HOTEL_DDC_SALES_PCT as RUNNING_SUM_HOTEL_DDC_SALES_PCT",
	"JNR_HOTEL_LKUP___CONSUMABLES_52WK_SALES_AMT as CONSUMABLES_52WK_SALES_AMT",
	"JNR_HOTEL_LKUP___CONSUMABLES_52WK_COMP_STORES_AMT as CONSUMABLES_52WK_COMP_STORES_AMT",
	"JNR_HOTEL_LKUP___STORE_CONSUMABLES_SALES_PCT as STORE_CONSUMABLES_SALES_PCT",
	"JNR_HOTEL_LKUP___RUNNING_SUM_CONSUMABLES_SALES_PCT as RUNNING_SUM_CONSUMABLES_SALES_PCT",
	"JNR_HOTEL_LKUP___HARDGOODS_52WK_SALES_AMT as HARDGOODS_52WK_SALES_AMT",
	"JNR_HOTEL_LKUP___HARDGOODS_52WK_COMP_STORES_AMT as HARDGOODS_52WK_COMP_STORES_AMT",
	"JNR_HOTEL_LKUP___STORE_HARDGOODS_SALES_PCT as STORE_HARDGOODS_SALES_PCT",
	"JNR_HOTEL_LKUP___RUNNING_SUM_HARDGOODS_SALES_PCT as RUNNING_SUM_HARDGOODS_SALES_PCT",
	"JNR_HOTEL_LKUP___SPECIALTY_52WK_SALES_AMT as SPECIALTY_52WK_SALES_AMT",
	"JNR_HOTEL_LKUP___SPECIALTY_52WK_COMP_STORES_AMT as SPECIALTY_52WK_COMP_STORES_AMT",
	"JNR_HOTEL_LKUP___STORE_SPECIALTY_SALES_PCT as STORE_SPECIALTY_SALES_PCT",
	"JNR_HOTEL_LKUP___RUNNING_SUM_SPECIALTY_SALES_PCT as RUNNING_SUM_SPECIALTY_SALES_PCT",
	"JNR_HOTEL_LKUP___RANKING_CD_HOTEL as RANKING_CD_HOTEL",
	"JNR_HOTEL_LKUP___RANKING_START_DT as RANKING_START_DT",
	"JNR_HOTEL_LKUP___RANKING_END_DT as RANKING_END_DT",
	"JNR_HOTEL_LKUP___RANKING_LEVEL_HOTEL as RANKING_LEVEL_HOTEL",
	"JNR_HOTEL_LKUP___RANKING_START_PERCENT as RANKING_START_PERCENT",
	"JNR_HOTEL_LKUP___RANKING_END_PERCENT as RANKING_END_PERCENT",
	"JNR_HOTEL_LKUP___RANKING_CD_TOTAL as RANKING_CD_TOTAL",
	"JNR_HOTEL_LKUP___RANKING_LEVEL_TOTAL as RANKING_LEVEL_TOTAL",
	"JNR_HOTEL_LKUP___RANKING_CD_MERCH as RANKING_CD_MERCH",
	"JNR_HOTEL_LKUP___RANKING_LEVEL_MERCH as RANKING_LEVEL_MERCH",
	"JNR_HOTEL_LKUP___RANKING_CD_SERVICES1 as RANKING_CD_SERVICES1",
	"JNR_HOTEL_LKUP___RANKING_LEVEL_SERVICES1 as RANKING_LEVEL_SERVICES1",
	"JNR_HOTEL_LKUP___RANKING_CD_SALON as RANKING_CD_SALON",
	"JNR_HOTEL_LKUP___RANKING_LEVEL_SALON as RANKING_LEVEL_SALON1",
	"JNR_HOTEL_LKUP___RANKING_CD_TRAINING as RANKING_CD_TRAINING",
	"JNR_HOTEL_LKUP___RANKING_LEVEL_TRAINING as RANKING_LEVEL_TRAINING").filter("WEEK_DT >= RANKING_START_DT AND WEEK_DT <= RANKING_END_DT AND RUNNING_SUM_HOTEL_DDC_SALES_PCT > RANKING_START_PERCENT AND RUNNING_SUM_HOTEL_DDC_SALES_PCT <= RANKING_END_PERCENT").withColumn("sys_row_id", monotonically_increasing_id())

# COMMAND ----------

# Processing node JNR_CONSUM_LKUP, type JOINER . Note: using additional SELECT to rename incoming columns
# COLUMN COUNT: 60

# for each involved DataFrame, append the dataframe name to each column
EXP_CONSUM_LKUP_temp = EXP_CONSUM_LKUP.toDF(*["EXP_CONSUM_LKUP___" + col for col in EXP_CONSUM_LKUP.columns])
FIL_HOTEL_LKUP_temp = FIL_HOTEL_LKUP.toDF(*["FIL_HOTEL_LKUP___" + col for col in FIL_HOTEL_LKUP.columns])

FIL_HOTEL_LKUP_temp=FIL_HOTEL_LKUP_temp.withColumn('FIL_HOTEL_LKUP___DUMMY_JOIN1',lit(1))
EXP_CONSUM_LKUP_temp=EXP_CONSUM_LKUP_temp.withColumn('EXP_CONSUM_LKUP___DUMMY_JOIN',lit(1))
JNR_CONSUM_LKUP = FIL_HOTEL_LKUP_temp.join(EXP_CONSUM_LKUP_temp,[FIL_HOTEL_LKUP_temp.FIL_HOTEL_LKUP___DUMMY_JOIN1 == EXP_CONSUM_LKUP_temp.EXP_CONSUM_LKUP___DUMMY_JOIN],'left_outer').selectExpr(
	"FIL_HOTEL_LKUP___DUMMY_JOIN1 as DUMMY_JOIN1",
	"FIL_HOTEL_LKUP___WEEK_DT as WEEK_DT",
	"FIL_HOTEL_LKUP___LOCATION_ID as LOCATION_ID",
	"FIL_HOTEL_LKUP___COMP_CURR_FLAG as COMP_CURR_FLAG",
	"FIL_HOTEL_LKUP___SALES_CURR_FLAG as SALES_CURR_FLAG",
	"FIL_HOTEL_LKUP___TOTAL_52WK_SALES_AMT as TOTAL_52WK_SALES_AMT",
	"FIL_HOTEL_LKUP___TOTAL_52WK_COMP_STORES_AMT as TOTAL_52WK_COMP_STORES_AMT",
	"FIL_HOTEL_LKUP___STORE_TOTAL_SALES_PCT as STORE_TOTAL_SALES_PCT",
	"FIL_HOTEL_LKUP___RUNNING_SUM_TOTAL_SALES_PCT as RUNNING_SUM_TOTAL_SALES_PCT",
	"FIL_HOTEL_LKUP___MERCH_52WK_SALES_AMT as MERCH_52WK_SALES_AMT",
	"FIL_HOTEL_LKUP___MERCH_52WK_COMP_STORES_AMT as MERCH_52WK_COMP_STORES_AMT",
	"FIL_HOTEL_LKUP___STORE_MERCH_SALES_PCT as STORE_MERCH_SALES_PCT",
	"FIL_HOTEL_LKUP___RUNNING_SUM_MERCH_SALES_PCT as RUNNING_SUM_MERCH_SALES_PCT",
	"FIL_HOTEL_LKUP___SERVICES_52WK_SALES_AMT as SERVICES_52WK_SALES_AMT",
	"FIL_HOTEL_LKUP___SERVICES_52WK_COMP_STORES_AMT as SERVICES_52WK_COMP_STORES_AMT",
	"FIL_HOTEL_LKUP___STORE_SERVICES_SALES_PCT as STORE_SERVICES_SALES_PCT",
	"FIL_HOTEL_LKUP___RUNNING_SUM_SERVICES_SALES_PCT as RUNNING_SUM_SERVICES_SALES_PCT",
	"FIL_HOTEL_LKUP___SALON_52WK_SALES_AMT as SALON_52WK_SALES_AMT",
	"FIL_HOTEL_LKUP___SALON_52WK_COMP_STORES_AMT as SALON_52WK_COMP_STORES_AMT",
	"FIL_HOTEL_LKUP___STORE_SALON_SALES_PCT as STORE_SALON_SALES_PCT",
	"FIL_HOTEL_LKUP___RUNNING_SUM_SALON_SALES_PCT as RUNNING_SUM_SALON_SALES_PCT",
	"FIL_HOTEL_LKUP___TRAINING_52WK_SALES_AMT as TRAINING_52WK_SALES_AMT",
	"FIL_HOTEL_LKUP___TRAINING_52WK_COMP_STORES_AMT as TRAINING_52WK_COMP_STORES_AMT",
	"FIL_HOTEL_LKUP___STORE_TRAINING_SALES_PCT as STORE_TRAINING_SALES_PCT",
	"FIL_HOTEL_LKUP___RUNNING_SUM_TRAINING_SALES_PCT as RUNNING_SUM_TRAINING_SALES_PCT",
	"FIL_HOTEL_LKUP___HOTEL_DDC_52WK_SALES_AMT as HOTEL_DDC_52WK_SALES_AMT",
	"FIL_HOTEL_LKUP___HOTEL_DDC_52WK_COMP_STORES_AMT as HOTEL_DDC_52WK_COMP_STORES_AMT",
	"FIL_HOTEL_LKUP___STORE_HOTEL_DDC_SALES_PCT as STORE_HOTEL_DDC_SALES_PCT",
	"FIL_HOTEL_LKUP___RUNNING_SUM_HOTEL_DDC_SALES_PCT as RUNNING_SUM_HOTEL_DDC_SALES_PCT",
	"FIL_HOTEL_LKUP___CONSUMABLES_52WK_SALES_AMT as CONSUMABLES_52WK_SALES_AMT",
	"FIL_HOTEL_LKUP___CONSUMABLES_52WK_COMP_STORES_AMT as CONSUMABLES_52WK_COMP_STORES_AMT",
	"FIL_HOTEL_LKUP___STORE_CONSUMABLES_SALES_PCT as STORE_CONSUMABLES_SALES_PCT",
	"FIL_HOTEL_LKUP___RUNNING_SUM_CONSUMABLES_SALES_PCT as RUNNING_SUM_CONSUMABLES_SALES_PCT",
	"FIL_HOTEL_LKUP___HARDGOODS_52WK_SALES_AMT as HARDGOODS_52WK_SALES_AMT",
	"FIL_HOTEL_LKUP___HARDGOODS_52WK_COMP_STORES_AMT as HARDGOODS_52WK_COMP_STORES_AMT",
	"FIL_HOTEL_LKUP___STORE_HARDGOODS_SALES_PCT as STORE_HARDGOODS_SALES_PCT",
	"FIL_HOTEL_LKUP___RUNNING_SUM_HARDGOODS_SALES_PCT as RUNNING_SUM_HARDGOODS_SALES_PCT",
	"FIL_HOTEL_LKUP___SPECIALTY_52WK_SALES_AMT as SPECIALTY_52WK_SALES_AMT",
	"FIL_HOTEL_LKUP___SPECIALTY_52WK_COMP_STORES_AMT as SPECIALTY_52WK_COMP_STORES_AMT",
	"FIL_HOTEL_LKUP___STORE_SPECIALTY_SALES_PCT as STORE_SPECIALTY_SALES_PCT",
	"FIL_HOTEL_LKUP___RUNNING_SUM_SPECIALTY_SALES_PCT as RUNNING_SUM_SPECIALTY_SALES_PCT",
	"EXP_CONSUM_LKUP___DUMMY_JOIN as DUMMY_JOIN",
	"EXP_CONSUM_LKUP___RANKING_CD_CONSUM as RANKING_CD_CONSUM",
	"EXP_CONSUM_LKUP___RANKING_START_DT as RANKING_START_DT",
	"EXP_CONSUM_LKUP___RANKING_END_DT as RANKING_END_DT",
	"EXP_CONSUM_LKUP___RANKING_LEVEL_CONSUM as RANKING_LEVEL_CONSUM",
	"EXP_CONSUM_LKUP___RANKING_START_PERCENT as RANKING_START_PERCENT",
	"EXP_CONSUM_LKUP___RANKING_END_PERCENT as RANKING_END_PERCENT",
	"FIL_HOTEL_LKUP___RANKING_CD_TOTAL as RANKING_CD_TOTAL",
	"FIL_HOTEL_LKUP___RANKING_LEVEL_TOTAL as RANKING_LEVEL_TOTAL",
	"FIL_HOTEL_LKUP___RANKING_CD_MERCH as RANKING_CD_MERCH",
	"FIL_HOTEL_LKUP___RANKING_LEVEL_MERCH as RANKING_LEVEL_MERCH",
	"FIL_HOTEL_LKUP___RANKING_CD_SERVICES1 as RANKING_CD_SERVICES1",
	"FIL_HOTEL_LKUP___RANKING_LEVEL_SERVICES1 as RANKING_LEVEL_SERVICES1",
	"FIL_HOTEL_LKUP___RANKING_CD_SALON as RANKING_CD_SALON",
	"FIL_HOTEL_LKUP___RANKING_LEVEL_SALON1 as RANKING_LEVEL_SALON",
	"FIL_HOTEL_LKUP___RANKING_CD_TRAINING as RANKING_CD_TRAINING",
	"FIL_HOTEL_LKUP___RANKING_LEVEL_TRAINING as RANKING_LEVEL_TRAINING",
	"FIL_HOTEL_LKUP___RANKING_CD_HOTEL as RANKING_CD_HOTEL",
	"FIL_HOTEL_LKUP___RANKING_LEVEL_HOTEL as RANKING_LEVEL_HOTEL")

# COMMAND ----------

# Processing node FIL_CONSUM_LKUP, type FILTER . Note: using additional SELECT to rename incoming columns
# COLUMN COUNT: 59

# for each involved DataFrame, append the dataframe name to each column
JNR_CONSUM_LKUP_temp = JNR_CONSUM_LKUP.toDF(*["JNR_CONSUM_LKUP___" + col for col in JNR_CONSUM_LKUP.columns])

FIL_CONSUM_LKUP = JNR_CONSUM_LKUP_temp.selectExpr(
	"JNR_CONSUM_LKUP___DUMMY_JOIN1 as DUMMY_JOIN1",
	"JNR_CONSUM_LKUP___WEEK_DT as WEEK_DT",
	"JNR_CONSUM_LKUP___LOCATION_ID as LOCATION_ID",
	"JNR_CONSUM_LKUP___COMP_CURR_FLAG as COMP_CURR_FLAG",
	"JNR_CONSUM_LKUP___SALES_CURR_FLAG as SALES_CURR_FLAG",
	"JNR_CONSUM_LKUP___TOTAL_52WK_SALES_AMT as TOTAL_52WK_SALES_AMT",
	"JNR_CONSUM_LKUP___TOTAL_52WK_COMP_STORES_AMT as TOTAL_52WK_COMP_STORES_AMT",
	"JNR_CONSUM_LKUP___STORE_TOTAL_SALES_PCT as STORE_TOTAL_SALES_PCT",
	"JNR_CONSUM_LKUP___RUNNING_SUM_TOTAL_SALES_PCT as RUNNING_SUM_TOTAL_SALES_PCT",
	"JNR_CONSUM_LKUP___MERCH_52WK_SALES_AMT as MERCH_52WK_SALES_AMT",
	"JNR_CONSUM_LKUP___MERCH_52WK_COMP_STORES_AMT as MERCH_52WK_COMP_STORES_AMT",
	"JNR_CONSUM_LKUP___STORE_MERCH_SALES_PCT as STORE_MERCH_SALES_PCT",
	"JNR_CONSUM_LKUP___RUNNING_SUM_MERCH_SALES_PCT as RUNNING_SUM_MERCH_SALES_PCT",
	"JNR_CONSUM_LKUP___SERVICES_52WK_SALES_AMT as SERVICES_52WK_SALES_AMT",
	"JNR_CONSUM_LKUP___SERVICES_52WK_COMP_STORES_AMT as SERVICES_52WK_COMP_STORES_AMT",
	"JNR_CONSUM_LKUP___STORE_SERVICES_SALES_PCT as STORE_SERVICES_SALES_PCT",
	"JNR_CONSUM_LKUP___RUNNING_SUM_SERVICES_SALES_PCT as RUNNING_SUM_SERVICES_SALES_PCT",
	"JNR_CONSUM_LKUP___SALON_52WK_SALES_AMT as SALON_52WK_SALES_AMT",
	"JNR_CONSUM_LKUP___SALON_52WK_COMP_STORES_AMT as SALON_52WK_COMP_STORES_AMT",
	"JNR_CONSUM_LKUP___STORE_SALON_SALES_PCT as STORE_SALON_SALES_PCT",
	"JNR_CONSUM_LKUP___RUNNING_SUM_SALON_SALES_PCT as RUNNING_SUM_SALON_SALES_PCT",
	"JNR_CONSUM_LKUP___TRAINING_52WK_SALES_AMT as TRAINING_52WK_SALES_AMT",
	"JNR_CONSUM_LKUP___TRAINING_52WK_COMP_STORES_AMT as TRAINING_52WK_COMP_STORES_AMT",
	"JNR_CONSUM_LKUP___STORE_TRAINING_SALES_PCT as STORE_TRAINING_SALES_PCT",
	"JNR_CONSUM_LKUP___RUNNING_SUM_TRAINING_SALES_PCT as RUNNING_SUM_TRAINING_SALES_PCT",
	"JNR_CONSUM_LKUP___HOTEL_DDC_52WK_SALES_AMT as HOTEL_DDC_52WK_SALES_AMT",
	"JNR_CONSUM_LKUP___HOTEL_DDC_52WK_COMP_STORES_AMT as HOTEL_DDC_52WK_COMP_STORES_AMT",
	"JNR_CONSUM_LKUP___STORE_HOTEL_DDC_SALES_PCT as STORE_HOTEL_DDC_SALES_PCT",
	"JNR_CONSUM_LKUP___RUNNING_SUM_HOTEL_DDC_SALES_PCT as RUNNING_SUM_HOTEL_DDC_SALES_PCT",
	"JNR_CONSUM_LKUP___CONSUMABLES_52WK_SALES_AMT as CONSUMABLES_52WK_SALES_AMT",
	"JNR_CONSUM_LKUP___CONSUMABLES_52WK_COMP_STORES_AMT as CONSUMABLES_52WK_COMP_STORES_AMT",
	"JNR_CONSUM_LKUP___STORE_CONSUMABLES_SALES_PCT as STORE_CONSUMABLES_SALES_PCT",
	"JNR_CONSUM_LKUP___RUNNING_SUM_CONSUMABLES_SALES_PCT as RUNNING_SUM_CONSUMABLES_SALES_PCT",
	"JNR_CONSUM_LKUP___HARDGOODS_52WK_SALES_AMT as HARDGOODS_52WK_SALES_AMT",
	"JNR_CONSUM_LKUP___HARDGOODS_52WK_COMP_STORES_AMT as HARDGOODS_52WK_COMP_STORES_AMT",
	"JNR_CONSUM_LKUP___STORE_HARDGOODS_SALES_PCT as STORE_HARDGOODS_SALES_PCT",
	"JNR_CONSUM_LKUP___RUNNING_SUM_HARDGOODS_SALES_PCT as RUNNING_SUM_HARDGOODS_SALES_PCT",
	"JNR_CONSUM_LKUP___SPECIALTY_52WK_SALES_AMT as SPECIALTY_52WK_SALES_AMT",
	"JNR_CONSUM_LKUP___SPECIALTY_52WK_COMP_STORES_AMT as SPECIALTY_52WK_COMP_STORES_AMT",
	"JNR_CONSUM_LKUP___STORE_SPECIALTY_SALES_PCT as STORE_SPECIALTY_SALES_PCT",
	"JNR_CONSUM_LKUP___RUNNING_SUM_SPECIALTY_SALES_PCT as RUNNING_SUM_SPECIALTY_SALES_PCT",
	"JNR_CONSUM_LKUP___RANKING_CD_CONSUM as RANKING_CD_CONSUM",
	"JNR_CONSUM_LKUP___RANKING_START_DT as RANKING_START_DT",
	"JNR_CONSUM_LKUP___RANKING_END_DT as RANKING_END_DT",
	"JNR_CONSUM_LKUP___RANKING_LEVEL_CONSUM as RANKING_LEVEL_CONSUM",
	"JNR_CONSUM_LKUP___RANKING_START_PERCENT as RANKING_START_PERCENT",
	"JNR_CONSUM_LKUP___RANKING_END_PERCENT as RANKING_END_PERCENT",
	"JNR_CONSUM_LKUP___RANKING_CD_TOTAL as RANKING_CD_TOTAL",
	"JNR_CONSUM_LKUP___RANKING_LEVEL_TOTAL as RANKING_LEVEL_TOTAL",
	"JNR_CONSUM_LKUP___RANKING_CD_MERCH as RANKING_CD_MERCH",
	"JNR_CONSUM_LKUP___RANKING_LEVEL_MERCH as RANKING_LEVEL_MERCH",
	"JNR_CONSUM_LKUP___RANKING_CD_SERVICES1 as RANKING_CD_SERVICES1",
	"JNR_CONSUM_LKUP___RANKING_LEVEL_SERVICES1 as RANKING_LEVEL_SERVICES1",
	"JNR_CONSUM_LKUP___RANKING_CD_SALON as RANKING_CD_SALON",
	"JNR_CONSUM_LKUP___RANKING_LEVEL_SALON as RANKING_LEVEL_SALON1",
	"JNR_CONSUM_LKUP___RANKING_CD_TRAINING as RANKING_CD_TRAINING",
	"JNR_CONSUM_LKUP___RANKING_LEVEL_TRAINING as RANKING_LEVEL_TRAINING",
	"JNR_CONSUM_LKUP___RANKING_CD_HOTEL as RANKING_CD_HOTEL",
	"JNR_CONSUM_LKUP___RANKING_LEVEL_HOTEL as RANKING_LEVEL_HOTEL").filter("WEEK_DT >= RANKING_START_DT AND WEEK_DT <= RANKING_END_DT AND RUNNING_SUM_CONSUMABLES_SALES_PCT > RANKING_START_PERCENT AND RUNNING_SUM_CONSUMABLES_SALES_PCT <= RANKING_END_PERCENT").withColumn("sys_row_id", monotonically_increasing_id())

# COMMAND ----------

# Processing node JNR_HGOODS_LKUP, type JOINER . Note: using additional SELECT to rename incoming columns
# COLUMN COUNT: 62

# for each involved DataFrame, append the dataframe name to each column
FIL_CONSUM_LKUP_temp = FIL_CONSUM_LKUP.toDF(*["FIL_CONSUM_LKUP___" + col for col in FIL_CONSUM_LKUP.columns])
EXP_HGOODS_LKUP_temp = EXP_HGOODS_LKUP.toDF(*["EXP_HGOODS_LKUP___" + col for col in EXP_HGOODS_LKUP.columns])

FIL_CONSUM_LKUP_temp=FIL_CONSUM_LKUP_temp.withColumn('FIL_CONSUM_LKUP___DUMMY_JOIN1',lit(1))
EXP_HGOODS_LKUP_temp=EXP_HGOODS_LKUP_temp.withColumn('EXP_HGOODS_LKUP___DUMMY_JOIN',lit(1))
JNR_HGOODS_LKUP = FIL_CONSUM_LKUP_temp.join(EXP_HGOODS_LKUP_temp,[FIL_CONSUM_LKUP_temp.FIL_CONSUM_LKUP___DUMMY_JOIN1 == EXP_HGOODS_LKUP_temp.EXP_HGOODS_LKUP___DUMMY_JOIN],'left_outer').selectExpr(
	"FIL_CONSUM_LKUP___DUMMY_JOIN1 as DUMMY_JOIN1",
	"FIL_CONSUM_LKUP___WEEK_DT as WEEK_DT",
	"FIL_CONSUM_LKUP___LOCATION_ID as LOCATION_ID",
	"FIL_CONSUM_LKUP___COMP_CURR_FLAG as COMP_CURR_FLAG",
	"FIL_CONSUM_LKUP___SALES_CURR_FLAG as SALES_CURR_FLAG",
	"FIL_CONSUM_LKUP___TOTAL_52WK_SALES_AMT as TOTAL_52WK_SALES_AMT",
	"FIL_CONSUM_LKUP___TOTAL_52WK_COMP_STORES_AMT as TOTAL_52WK_COMP_STORES_AMT",
	"FIL_CONSUM_LKUP___STORE_TOTAL_SALES_PCT as STORE_TOTAL_SALES_PCT",
	"FIL_CONSUM_LKUP___RUNNING_SUM_TOTAL_SALES_PCT as RUNNING_SUM_TOTAL_SALES_PCT",
	"FIL_CONSUM_LKUP___MERCH_52WK_SALES_AMT as MERCH_52WK_SALES_AMT",
	"FIL_CONSUM_LKUP___MERCH_52WK_COMP_STORES_AMT as MERCH_52WK_COMP_STORES_AMT",
	"FIL_CONSUM_LKUP___STORE_MERCH_SALES_PCT as STORE_MERCH_SALES_PCT",
	"FIL_CONSUM_LKUP___RUNNING_SUM_MERCH_SALES_PCT as RUNNING_SUM_MERCH_SALES_PCT",
	"FIL_CONSUM_LKUP___SERVICES_52WK_SALES_AMT as SERVICES_52WK_SALES_AMT",
	"FIL_CONSUM_LKUP___SERVICES_52WK_COMP_STORES_AMT as SERVICES_52WK_COMP_STORES_AMT",
	"FIL_CONSUM_LKUP___STORE_SERVICES_SALES_PCT as STORE_SERVICES_SALES_PCT",
	"FIL_CONSUM_LKUP___RUNNING_SUM_SERVICES_SALES_PCT as RUNNING_SUM_SERVICES_SALES_PCT",
	"FIL_CONSUM_LKUP___SALON_52WK_SALES_AMT as SALON_52WK_SALES_AMT",
	"FIL_CONSUM_LKUP___SALON_52WK_COMP_STORES_AMT as SALON_52WK_COMP_STORES_AMT",
	"FIL_CONSUM_LKUP___STORE_SALON_SALES_PCT as STORE_SALON_SALES_PCT",
	"FIL_CONSUM_LKUP___RUNNING_SUM_SALON_SALES_PCT as RUNNING_SUM_SALON_SALES_PCT",
	"FIL_CONSUM_LKUP___TRAINING_52WK_SALES_AMT as TRAINING_52WK_SALES_AMT",
	"FIL_CONSUM_LKUP___TRAINING_52WK_COMP_STORES_AMT as TRAINING_52WK_COMP_STORES_AMT",
	"FIL_CONSUM_LKUP___STORE_TRAINING_SALES_PCT as STORE_TRAINING_SALES_PCT",
	"FIL_CONSUM_LKUP___RUNNING_SUM_TRAINING_SALES_PCT as RUNNING_SUM_TRAINING_SALES_PCT",
	"FIL_CONSUM_LKUP___HOTEL_DDC_52WK_SALES_AMT as HOTEL_DDC_52WK_SALES_AMT",
	"FIL_CONSUM_LKUP___HOTEL_DDC_52WK_COMP_STORES_AMT as HOTEL_DDC_52WK_COMP_STORES_AMT",
	"FIL_CONSUM_LKUP___STORE_HOTEL_DDC_SALES_PCT as STORE_HOTEL_DDC_SALES_PCT",
	"FIL_CONSUM_LKUP___RUNNING_SUM_HOTEL_DDC_SALES_PCT as RUNNING_SUM_HOTEL_DDC_SALES_PCT",
	"FIL_CONSUM_LKUP___CONSUMABLES_52WK_SALES_AMT as CONSUMABLES_52WK_SALES_AMT",
	"FIL_CONSUM_LKUP___CONSUMABLES_52WK_COMP_STORES_AMT as CONSUMABLES_52WK_COMP_STORES_AMT",
	"FIL_CONSUM_LKUP___STORE_CONSUMABLES_SALES_PCT as STORE_CONSUMABLES_SALES_PCT",
	"FIL_CONSUM_LKUP___RUNNING_SUM_CONSUMABLES_SALES_PCT as RUNNING_SUM_CONSUMABLES_SALES_PCT",
	"FIL_CONSUM_LKUP___HARDGOODS_52WK_SALES_AMT as HARDGOODS_52WK_SALES_AMT",
	"FIL_CONSUM_LKUP___HARDGOODS_52WK_COMP_STORES_AMT as HARDGOODS_52WK_COMP_STORES_AMT",
	"FIL_CONSUM_LKUP___STORE_HARDGOODS_SALES_PCT as STORE_HARDGOODS_SALES_PCT",
	"FIL_CONSUM_LKUP___RUNNING_SUM_HARDGOODS_SALES_PCT as RUNNING_SUM_HARDGOODS_SALES_PCT",
	"FIL_CONSUM_LKUP___SPECIALTY_52WK_SALES_AMT as SPECIALTY_52WK_SALES_AMT",
	"FIL_CONSUM_LKUP___SPECIALTY_52WK_COMP_STORES_AMT as SPECIALTY_52WK_COMP_STORES_AMT",
	"FIL_CONSUM_LKUP___STORE_SPECIALTY_SALES_PCT as STORE_SPECIALTY_SALES_PCT",
	"FIL_CONSUM_LKUP___RUNNING_SUM_SPECIALTY_SALES_PCT as RUNNING_SUM_SPECIALTY_SALES_PCT",
	"EXP_HGOODS_LKUP___DUMMY_JOIN as DUMMY_JOIN",
	"EXP_HGOODS_LKUP___RANKING_CD_HGOODS as RANKING_CD_HGOODS",
	"EXP_HGOODS_LKUP___RANKING_START_DT as RANKING_START_DT",
	"EXP_HGOODS_LKUP___RANKING_END_DT as RANKING_END_DT",
	"EXP_HGOODS_LKUP___RANKING_LEVEL_HGOODS as RANKING_LEVEL_HGOODS",
	"EXP_HGOODS_LKUP___RANKING_START_PERCENT as RANKING_START_PERCENT",
	"EXP_HGOODS_LKUP___RANKING_END_PERCENT as RANKING_END_PERCENT",
	"FIL_CONSUM_LKUP___RANKING_CD_TOTAL as RANKING_CD_TOTAL",
	"FIL_CONSUM_LKUP___RANKING_LEVEL_TOTAL as RANKING_LEVEL_TOTAL",
	"FIL_CONSUM_LKUP___RANKING_CD_MERCH as RANKING_CD_MERCH",
	"FIL_CONSUM_LKUP___RANKING_LEVEL_MERCH as RANKING_LEVEL_MERCH",
	"FIL_CONSUM_LKUP___RANKING_CD_SERVICES1 as RANKING_CD_SERVICES1",
	"FIL_CONSUM_LKUP___RANKING_LEVEL_SERVICES1 as RANKING_LEVEL_SERVICES1",
	"FIL_CONSUM_LKUP___RANKING_CD_SALON as RANKING_CD_SALON",
	"FIL_CONSUM_LKUP___RANKING_LEVEL_SALON1 as RANKING_LEVEL_SALON",
	"FIL_CONSUM_LKUP___RANKING_CD_TRAINING as RANKING_CD_TRAINING",
	"FIL_CONSUM_LKUP___RANKING_LEVEL_TRAINING as RANKING_LEVEL_TRAINING",
	"FIL_CONSUM_LKUP___RANKING_CD_HOTEL as RANKING_CD_HOTEL",
	"FIL_CONSUM_LKUP___RANKING_LEVEL_HOTEL as RANKING_LEVEL_HOTEL",
	"FIL_CONSUM_LKUP___RANKING_CD_CONSUM as RANKING_CD_CONSUM",
	"FIL_CONSUM_LKUP___RANKING_LEVEL_CONSUM as RANKING_LEVEL_CONSUM")

# COMMAND ----------

# Processing node FIL_HGOODS_LKUP, type FILTER . Note: using additional SELECT to rename incoming columns
# COLUMN COUNT: 61

# for each involved DataFrame, append the dataframe name to each column
JNR_HGOODS_LKUP_temp = JNR_HGOODS_LKUP.toDF(*["JNR_HGOODS_LKUP___" + col for col in JNR_HGOODS_LKUP.columns])

FIL_HGOODS_LKUP = JNR_HGOODS_LKUP_temp.selectExpr(
	"JNR_HGOODS_LKUP___DUMMY_JOIN1 as DUMMY_JOIN1",
	"JNR_HGOODS_LKUP___WEEK_DT as WEEK_DT",
	"JNR_HGOODS_LKUP___LOCATION_ID as LOCATION_ID",
	"JNR_HGOODS_LKUP___COMP_CURR_FLAG as COMP_CURR_FLAG",
	"JNR_HGOODS_LKUP___SALES_CURR_FLAG as SALES_CURR_FLAG",
	"JNR_HGOODS_LKUP___TOTAL_52WK_SALES_AMT as TOTAL_52WK_SALES_AMT",
	"JNR_HGOODS_LKUP___TOTAL_52WK_COMP_STORES_AMT as TOTAL_52WK_COMP_STORES_AMT",
	"JNR_HGOODS_LKUP___STORE_TOTAL_SALES_PCT as STORE_TOTAL_SALES_PCT",
	"JNR_HGOODS_LKUP___RUNNING_SUM_TOTAL_SALES_PCT as RUNNING_SUM_TOTAL_SALES_PCT",
	"JNR_HGOODS_LKUP___MERCH_52WK_SALES_AMT as MERCH_52WK_SALES_AMT",
	"JNR_HGOODS_LKUP___MERCH_52WK_COMP_STORES_AMT as MERCH_52WK_COMP_STORES_AMT",
	"JNR_HGOODS_LKUP___STORE_MERCH_SALES_PCT as STORE_MERCH_SALES_PCT",
	"JNR_HGOODS_LKUP___RUNNING_SUM_MERCH_SALES_PCT as RUNNING_SUM_MERCH_SALES_PCT",
	"JNR_HGOODS_LKUP___SERVICES_52WK_SALES_AMT as SERVICES_52WK_SALES_AMT",
	"JNR_HGOODS_LKUP___SERVICES_52WK_COMP_STORES_AMT as SERVICES_52WK_COMP_STORES_AMT",
	"JNR_HGOODS_LKUP___STORE_SERVICES_SALES_PCT as STORE_SERVICES_SALES_PCT",
	"JNR_HGOODS_LKUP___RUNNING_SUM_SERVICES_SALES_PCT as RUNNING_SUM_SERVICES_SALES_PCT",
	"JNR_HGOODS_LKUP___SALON_52WK_SALES_AMT as SALON_52WK_SALES_AMT",
	"JNR_HGOODS_LKUP___SALON_52WK_COMP_STORES_AMT as SALON_52WK_COMP_STORES_AMT",
	"JNR_HGOODS_LKUP___STORE_SALON_SALES_PCT as STORE_SALON_SALES_PCT",
	"JNR_HGOODS_LKUP___RUNNING_SUM_SALON_SALES_PCT as RUNNING_SUM_SALON_SALES_PCT",
	"JNR_HGOODS_LKUP___TRAINING_52WK_SALES_AMT as TRAINING_52WK_SALES_AMT",
	"JNR_HGOODS_LKUP___TRAINING_52WK_COMP_STORES_AMT as TRAINING_52WK_COMP_STORES_AMT",
	"JNR_HGOODS_LKUP___STORE_TRAINING_SALES_PCT as STORE_TRAINING_SALES_PCT",
	"JNR_HGOODS_LKUP___RUNNING_SUM_TRAINING_SALES_PCT as RUNNING_SUM_TRAINING_SALES_PCT",
	"JNR_HGOODS_LKUP___HOTEL_DDC_52WK_SALES_AMT as HOTEL_DDC_52WK_SALES_AMT",
	"JNR_HGOODS_LKUP___HOTEL_DDC_52WK_COMP_STORES_AMT as HOTEL_DDC_52WK_COMP_STORES_AMT",
	"JNR_HGOODS_LKUP___STORE_HOTEL_DDC_SALES_PCT as STORE_HOTEL_DDC_SALES_PCT",
	"JNR_HGOODS_LKUP___RUNNING_SUM_HOTEL_DDC_SALES_PCT as RUNNING_SUM_HOTEL_DDC_SALES_PCT",
	"JNR_HGOODS_LKUP___CONSUMABLES_52WK_SALES_AMT as CONSUMABLES_52WK_SALES_AMT",
	"JNR_HGOODS_LKUP___CONSUMABLES_52WK_COMP_STORES_AMT as CONSUMABLES_52WK_COMP_STORES_AMT",
	"JNR_HGOODS_LKUP___STORE_CONSUMABLES_SALES_PCT as STORE_CONSUMABLES_SALES_PCT",
	"JNR_HGOODS_LKUP___RUNNING_SUM_CONSUMABLES_SALES_PCT as RUNNING_SUM_CONSUMABLES_SALES_PCT",
	"JNR_HGOODS_LKUP___HARDGOODS_52WK_SALES_AMT as HARDGOODS_52WK_SALES_AMT",
	"JNR_HGOODS_LKUP___HARDGOODS_52WK_COMP_STORES_AMT as HARDGOODS_52WK_COMP_STORES_AMT",
	"JNR_HGOODS_LKUP___STORE_HARDGOODS_SALES_PCT as STORE_HARDGOODS_SALES_PCT",
	"JNR_HGOODS_LKUP___RUNNING_SUM_HARDGOODS_SALES_PCT as RUNNING_SUM_HARDGOODS_SALES_PCT",
	"JNR_HGOODS_LKUP___SPECIALTY_52WK_SALES_AMT as SPECIALTY_52WK_SALES_AMT",
	"JNR_HGOODS_LKUP___SPECIALTY_52WK_COMP_STORES_AMT as SPECIALTY_52WK_COMP_STORES_AMT",
	"JNR_HGOODS_LKUP___STORE_SPECIALTY_SALES_PCT as STORE_SPECIALTY_SALES_PCT",
	"JNR_HGOODS_LKUP___RUNNING_SUM_SPECIALTY_SALES_PCT as RUNNING_SUM_SPECIALTY_SALES_PCT",
	"JNR_HGOODS_LKUP___RANKING_CD_HGOODS as RANKING_CD_HGOODS",
	"JNR_HGOODS_LKUP___RANKING_START_DT as RANKING_START_DT",
	"JNR_HGOODS_LKUP___RANKING_END_DT as RANKING_END_DT",
	"JNR_HGOODS_LKUP___RANKING_LEVEL_HGOODS as RANKING_LEVEL_HGOODS",
	"JNR_HGOODS_LKUP___RANKING_START_PERCENT as RANKING_START_PERCENT",
	"JNR_HGOODS_LKUP___RANKING_END_PERCENT as RANKING_END_PERCENT",
	"JNR_HGOODS_LKUP___RANKING_CD_TOTAL as RANKING_CD_TOTAL",
	"JNR_HGOODS_LKUP___RANKING_LEVEL_TOTAL as RANKING_LEVEL_TOTAL",
	"JNR_HGOODS_LKUP___RANKING_CD_MERCH as RANKING_CD_MERCH",
	"JNR_HGOODS_LKUP___RANKING_LEVEL_MERCH as RANKING_LEVEL_MERCH",
	"JNR_HGOODS_LKUP___RANKING_CD_SERVICES1 as RANKING_CD_SERVICES1",
	"JNR_HGOODS_LKUP___RANKING_LEVEL_SERVICES1 as RANKING_LEVEL_SERVICES1",
	"JNR_HGOODS_LKUP___RANKING_CD_SALON as RANKING_CD_SALON",
	"JNR_HGOODS_LKUP___RANKING_LEVEL_SALON as RANKING_LEVEL_SALON1",
	"JNR_HGOODS_LKUP___RANKING_CD_TRAINING as RANKING_CD_TRAINING",
	"JNR_HGOODS_LKUP___RANKING_LEVEL_TRAINING as RANKING_LEVEL_TRAINING",
	"JNR_HGOODS_LKUP___RANKING_CD_HOTEL as RANKING_CD_HOTEL",
	"JNR_HGOODS_LKUP___RANKING_LEVEL_HOTEL as RANKING_LEVEL_HOTEL",
	"JNR_HGOODS_LKUP___RANKING_CD_CONSUM as RANKING_CD_CONSUM",
	"JNR_HGOODS_LKUP___RANKING_LEVEL_CONSUM as RANKING_LEVEL_CONSUM").filter("WEEK_DT >= RANKING_START_DT AND WEEK_DT <= RANKING_END_DT AND RUNNING_SUM_HARDGOODS_SALES_PCT > RANKING_START_PERCENT AND RUNNING_SUM_HARDGOODS_SALES_PCT <= RANKING_END_PERCENT").withColumn("sys_row_id", monotonically_increasing_id())

# COMMAND ----------

# Processing node JNR_SPECIALTY_LKUP, type JOINER . Note: using additional SELECT to rename incoming columns
# COLUMN COUNT: 64

# for each involved DataFrame, append the dataframe name to each column
EXP_SPECIALTY_LKUP_temp = EXP_SPECIALTY_LKUP.toDF(*["EXP_SPECIALTY_LKUP___" + col for col in EXP_SPECIALTY_LKUP.columns])
FIL_HGOODS_LKUP_temp = FIL_HGOODS_LKUP.toDF(*["FIL_HGOODS_LKUP___" + col for col in FIL_HGOODS_LKUP.columns])

FIL_HGOODS_LKUP_temp=FIL_HGOODS_LKUP_temp.withColumn('FIL_HGOODS_LKUP___DUMMY_JOIN1',lit(1))
EXP_SPECIALTY_LKUP_temp=EXP_SPECIALTY_LKUP_temp.withColumn('EXP_SPECIALTY_LKUP___DUMMY_JOIN',lit(1))
JNR_SPECIALTY_LKUP = FIL_HGOODS_LKUP_temp.join(EXP_SPECIALTY_LKUP_temp,[FIL_HGOODS_LKUP_temp.FIL_HGOODS_LKUP___DUMMY_JOIN1 == EXP_SPECIALTY_LKUP_temp.EXP_SPECIALTY_LKUP___DUMMY_JOIN],'left_outer').selectExpr(
	"FIL_HGOODS_LKUP___DUMMY_JOIN1 as DUMMY_JOIN1",
	"FIL_HGOODS_LKUP___WEEK_DT as WEEK_DT",
	"FIL_HGOODS_LKUP___LOCATION_ID as LOCATION_ID",
	"FIL_HGOODS_LKUP___COMP_CURR_FLAG as COMP_CURR_FLAG",
	"FIL_HGOODS_LKUP___SALES_CURR_FLAG as SALES_CURR_FLAG",
	"FIL_HGOODS_LKUP___TOTAL_52WK_SALES_AMT as TOTAL_52WK_SALES_AMT",
	"FIL_HGOODS_LKUP___TOTAL_52WK_COMP_STORES_AMT as TOTAL_52WK_COMP_STORES_AMT",
	"FIL_HGOODS_LKUP___STORE_TOTAL_SALES_PCT as STORE_TOTAL_SALES_PCT",
	"FIL_HGOODS_LKUP___RUNNING_SUM_TOTAL_SALES_PCT as RUNNING_SUM_TOTAL_SALES_PCT",
	"FIL_HGOODS_LKUP___MERCH_52WK_SALES_AMT as MERCH_52WK_SALES_AMT",
	"FIL_HGOODS_LKUP___MERCH_52WK_COMP_STORES_AMT as MERCH_52WK_COMP_STORES_AMT",
	"FIL_HGOODS_LKUP___STORE_MERCH_SALES_PCT as STORE_MERCH_SALES_PCT",
	"FIL_HGOODS_LKUP___RUNNING_SUM_MERCH_SALES_PCT as RUNNING_SUM_MERCH_SALES_PCT",
	"FIL_HGOODS_LKUP___SERVICES_52WK_SALES_AMT as SERVICES_52WK_SALES_AMT",
	"FIL_HGOODS_LKUP___SERVICES_52WK_COMP_STORES_AMT as SERVICES_52WK_COMP_STORES_AMT",
	"FIL_HGOODS_LKUP___STORE_SERVICES_SALES_PCT as STORE_SERVICES_SALES_PCT",
	"FIL_HGOODS_LKUP___RUNNING_SUM_SERVICES_SALES_PCT as RUNNING_SUM_SERVICES_SALES_PCT",
	"FIL_HGOODS_LKUP___SALON_52WK_SALES_AMT as SALON_52WK_SALES_AMT",
	"FIL_HGOODS_LKUP___SALON_52WK_COMP_STORES_AMT as SALON_52WK_COMP_STORES_AMT",
	"FIL_HGOODS_LKUP___STORE_SALON_SALES_PCT as STORE_SALON_SALES_PCT",
	"FIL_HGOODS_LKUP___RUNNING_SUM_SALON_SALES_PCT as RUNNING_SUM_SALON_SALES_PCT",
	"FIL_HGOODS_LKUP___TRAINING_52WK_SALES_AMT as TRAINING_52WK_SALES_AMT",
	"FIL_HGOODS_LKUP___TRAINING_52WK_COMP_STORES_AMT as TRAINING_52WK_COMP_STORES_AMT",
	"FIL_HGOODS_LKUP___STORE_TRAINING_SALES_PCT as STORE_TRAINING_SALES_PCT",
	"FIL_HGOODS_LKUP___RUNNING_SUM_TRAINING_SALES_PCT as RUNNING_SUM_TRAINING_SALES_PCT",
	"FIL_HGOODS_LKUP___HOTEL_DDC_52WK_SALES_AMT as HOTEL_DDC_52WK_SALES_AMT",
	"FIL_HGOODS_LKUP___HOTEL_DDC_52WK_COMP_STORES_AMT as HOTEL_DDC_52WK_COMP_STORES_AMT",
	"FIL_HGOODS_LKUP___STORE_HOTEL_DDC_SALES_PCT as STORE_HOTEL_DDC_SALES_PCT",
	"FIL_HGOODS_LKUP___RUNNING_SUM_HOTEL_DDC_SALES_PCT as RUNNING_SUM_HOTEL_DDC_SALES_PCT",
	"FIL_HGOODS_LKUP___CONSUMABLES_52WK_SALES_AMT as CONSUMABLES_52WK_SALES_AMT",
	"FIL_HGOODS_LKUP___CONSUMABLES_52WK_COMP_STORES_AMT as CONSUMABLES_52WK_COMP_STORES_AMT",
	"FIL_HGOODS_LKUP___STORE_CONSUMABLES_SALES_PCT as STORE_CONSUMABLES_SALES_PCT",
	"FIL_HGOODS_LKUP___RUNNING_SUM_CONSUMABLES_SALES_PCT as RUNNING_SUM_CONSUMABLES_SALES_PCT",
	"FIL_HGOODS_LKUP___HARDGOODS_52WK_SALES_AMT as HARDGOODS_52WK_SALES_AMT",
	"FIL_HGOODS_LKUP___HARDGOODS_52WK_COMP_STORES_AMT as HARDGOODS_52WK_COMP_STORES_AMT",
	"FIL_HGOODS_LKUP___STORE_HARDGOODS_SALES_PCT as STORE_HARDGOODS_SALES_PCT",
	"FIL_HGOODS_LKUP___RUNNING_SUM_HARDGOODS_SALES_PCT as RUNNING_SUM_HARDGOODS_SALES_PCT",
	"FIL_HGOODS_LKUP___SPECIALTY_52WK_SALES_AMT as SPECIALTY_52WK_SALES_AMT",
	"FIL_HGOODS_LKUP___SPECIALTY_52WK_COMP_STORES_AMT as SPECIALTY_52WK_COMP_STORES_AMT",
	"FIL_HGOODS_LKUP___STORE_SPECIALTY_SALES_PCT as STORE_SPECIALTY_SALES_PCT",
	"FIL_HGOODS_LKUP___RUNNING_SUM_SPECIALTY_SALES_PCT as RUNNING_SUM_SPECIALTY_SALES_PCT",
	"FIL_HGOODS_LKUP___RANKING_CD_TOTAL as RANKING_CD_TOTAL",
	"FIL_HGOODS_LKUP___RANKING_LEVEL_TOTAL as RANKING_LEVEL_TOTAL",
	"FIL_HGOODS_LKUP___RANKING_CD_MERCH as RANKING_CD_MERCH",
	"FIL_HGOODS_LKUP___RANKING_LEVEL_MERCH as RANKING_LEVEL_MERCH",
	"FIL_HGOODS_LKUP___RANKING_CD_SERVICES1 as RANKING_CD_SERVICES1",
	"FIL_HGOODS_LKUP___RANKING_LEVEL_SERVICES1 as RANKING_LEVEL_SERVICES1",
	"FIL_HGOODS_LKUP___RANKING_CD_SALON as RANKING_CD_SALON",
	"FIL_HGOODS_LKUP___RANKING_LEVEL_SALON1 as RANKING_LEVEL_SALON",
	"FIL_HGOODS_LKUP___RANKING_CD_TRAINING as RANKING_CD_TRAINING",
	"FIL_HGOODS_LKUP___RANKING_LEVEL_TRAINING as RANKING_LEVEL_TRAINING",
	"FIL_HGOODS_LKUP___RANKING_CD_HOTEL as RANKING_CD_HOTEL",
	"FIL_HGOODS_LKUP___RANKING_LEVEL_HOTEL as RANKING_LEVEL_HOTEL",
	"FIL_HGOODS_LKUP___RANKING_CD_CONSUM as RANKING_CD_CONSUM",
	"FIL_HGOODS_LKUP___RANKING_LEVEL_CONSUM as RANKING_LEVEL_CONSUM",
	"FIL_HGOODS_LKUP___RANKING_CD_HGOODS as RANKING_CD_HGOODS",
	"FIL_HGOODS_LKUP___RANKING_LEVEL_HGOODS as RANKING_LEVEL_HGOODS",
	"EXP_SPECIALTY_LKUP___DUMMY_JOIN as DUMMY_JOIN",
	"EXP_SPECIALTY_LKUP___RANKING_CD_SPECIALTY as RANKING_CD_SPECIALTY",
	"EXP_SPECIALTY_LKUP___RANKING_START_DT as RANKING_START_DT",
	"EXP_SPECIALTY_LKUP___RANKING_END_DT as RANKING_END_DT",
	"EXP_SPECIALTY_LKUP___RANKING_LEVEL_SPECIALTY as RANKING_LEVEL_SPECIALTY",
	"EXP_SPECIALTY_LKUP___RANKING_START_PERCENT as RANKING_START_PERCENT",
	"EXP_SPECIALTY_LKUP___RANKING_END_PERCENT as RANKING_END_PERCENT")

# COMMAND ----------

# Processing node FIL_SPECIALTY_LKUP, type FILTER . Note: using additional SELECT to rename incoming columns
# COLUMN COUNT: 63

# for each involved DataFrame, append the dataframe name to each column
JNR_SPECIALTY_LKUP_temp = JNR_SPECIALTY_LKUP.toDF(*["JNR_SPECIALTY_LKUP___" + col for col in JNR_SPECIALTY_LKUP.columns])

FIL_SPECIALTY_LKUP = JNR_SPECIALTY_LKUP_temp.selectExpr(
	"JNR_SPECIALTY_LKUP___DUMMY_JOIN1 as DUMMY_JOIN1",
	"JNR_SPECIALTY_LKUP___WEEK_DT as WEEK_DT",
	"JNR_SPECIALTY_LKUP___LOCATION_ID as LOCATION_ID",
	"JNR_SPECIALTY_LKUP___COMP_CURR_FLAG as COMP_CURR_FLAG",
	"JNR_SPECIALTY_LKUP___SALES_CURR_FLAG as SALES_CURR_FLAG",
	"JNR_SPECIALTY_LKUP___TOTAL_52WK_SALES_AMT as TOTAL_52WK_SALES_AMT",
	"JNR_SPECIALTY_LKUP___TOTAL_52WK_COMP_STORES_AMT as TOTAL_52WK_COMP_STORES_AMT",
	"JNR_SPECIALTY_LKUP___STORE_TOTAL_SALES_PCT as STORE_TOTAL_SALES_PCT",
	"JNR_SPECIALTY_LKUP___RUNNING_SUM_TOTAL_SALES_PCT as RUNNING_SUM_TOTAL_SALES_PCT",
	"JNR_SPECIALTY_LKUP___RANKING_CD_TOTAL as RANKING_CD_TOTAL",
	"JNR_SPECIALTY_LKUP___RANKING_LEVEL_TOTAL as RANKING_LEVEL_TOTAL",
	"JNR_SPECIALTY_LKUP___MERCH_52WK_SALES_AMT as MERCH_52WK_SALES_AMT",
	"JNR_SPECIALTY_LKUP___MERCH_52WK_COMP_STORES_AMT as MERCH_52WK_COMP_STORES_AMT",
	"JNR_SPECIALTY_LKUP___STORE_MERCH_SALES_PCT as STORE_MERCH_SALES_PCT",
	"JNR_SPECIALTY_LKUP___RUNNING_SUM_MERCH_SALES_PCT as RUNNING_SUM_MERCH_SALES_PCT",
	"JNR_SPECIALTY_LKUP___RANKING_CD_MERCH as RANKING_CD_MERCH",
	"JNR_SPECIALTY_LKUP___RANKING_LEVEL_MERCH as RANKING_LEVEL_MERCH",
	"JNR_SPECIALTY_LKUP___SERVICES_52WK_SALES_AMT as SERVICES_52WK_SALES_AMT",
	"JNR_SPECIALTY_LKUP___SERVICES_52WK_COMP_STORES_AMT as SERVICES_52WK_COMP_STORES_AMT",
	"JNR_SPECIALTY_LKUP___STORE_SERVICES_SALES_PCT as STORE_SERVICES_SALES_PCT",
	"JNR_SPECIALTY_LKUP___RUNNING_SUM_SERVICES_SALES_PCT as RUNNING_SUM_SERVICES_SALES_PCT",
	"JNR_SPECIALTY_LKUP___RANKING_CD_SERVICES1 as RANKING_CD_SERVICES1",
	"JNR_SPECIALTY_LKUP___RANKING_LEVEL_SERVICES1 as RANKING_LEVEL_SERVICES1",
	"JNR_SPECIALTY_LKUP___SALON_52WK_SALES_AMT as SALON_52WK_SALES_AMT",
	"JNR_SPECIALTY_LKUP___SALON_52WK_COMP_STORES_AMT as SALON_52WK_COMP_STORES_AMT",
	"JNR_SPECIALTY_LKUP___STORE_SALON_SALES_PCT as STORE_SALON_SALES_PCT",
	"JNR_SPECIALTY_LKUP___RUNNING_SUM_SALON_SALES_PCT as RUNNING_SUM_SALON_SALES_PCT",
	"JNR_SPECIALTY_LKUP___RANKING_CD_SALON as RANKING_CD_SALON",
	"JNR_SPECIALTY_LKUP___RANKING_LEVEL_SALON as RANKING_LEVEL_SALON1",
	"JNR_SPECIALTY_LKUP___TRAINING_52WK_SALES_AMT as TRAINING_52WK_SALES_AMT",
	"JNR_SPECIALTY_LKUP___TRAINING_52WK_COMP_STORES_AMT as TRAINING_52WK_COMP_STORES_AMT",
	"JNR_SPECIALTY_LKUP___STORE_TRAINING_SALES_PCT as STORE_TRAINING_SALES_PCT",
	"JNR_SPECIALTY_LKUP___RUNNING_SUM_TRAINING_SALES_PCT as RUNNING_SUM_TRAINING_SALES_PCT",
	"JNR_SPECIALTY_LKUP___RANKING_CD_TRAINING as RANKING_CD_TRAINING",
	"JNR_SPECIALTY_LKUP___RANKING_LEVEL_TRAINING as RANKING_LEVEL_TRAINING",
	"JNR_SPECIALTY_LKUP___HOTEL_DDC_52WK_SALES_AMT as HOTEL_DDC_52WK_SALES_AMT",
	"JNR_SPECIALTY_LKUP___HOTEL_DDC_52WK_COMP_STORES_AMT as HOTEL_DDC_52WK_COMP_STORES_AMT",
	"JNR_SPECIALTY_LKUP___STORE_HOTEL_DDC_SALES_PCT as STORE_HOTEL_DDC_SALES_PCT",
	"JNR_SPECIALTY_LKUP___RUNNING_SUM_HOTEL_DDC_SALES_PCT as RUNNING_SUM_HOTEL_DDC_SALES_PCT",
	"JNR_SPECIALTY_LKUP___RANKING_CD_HOTEL as RANKING_CD_HOTEL",
	"JNR_SPECIALTY_LKUP___RANKING_LEVEL_HOTEL as RANKING_LEVEL_HOTEL",
	"JNR_SPECIALTY_LKUP___CONSUMABLES_52WK_SALES_AMT as CONSUMABLES_52WK_SALES_AMT",
	"JNR_SPECIALTY_LKUP___CONSUMABLES_52WK_COMP_STORES_AMT as CONSUMABLES_52WK_COMP_STORES_AMT",
	"JNR_SPECIALTY_LKUP___STORE_CONSUMABLES_SALES_PCT as STORE_CONSUMABLES_SALES_PCT",
	"JNR_SPECIALTY_LKUP___RUNNING_SUM_CONSUMABLES_SALES_PCT as RUNNING_SUM_CONSUMABLES_SALES_PCT",
	"JNR_SPECIALTY_LKUP___RANKING_CD_CONSUM as RANKING_CD_CONSUM",
	"JNR_SPECIALTY_LKUP___RANKING_LEVEL_CONSUM as RANKING_LEVEL_CONSUM",
	"JNR_SPECIALTY_LKUP___HARDGOODS_52WK_SALES_AMT as HARDGOODS_52WK_SALES_AMT",
	"JNR_SPECIALTY_LKUP___HARDGOODS_52WK_COMP_STORES_AMT as HARDGOODS_52WK_COMP_STORES_AMT",
	"JNR_SPECIALTY_LKUP___STORE_HARDGOODS_SALES_PCT as STORE_HARDGOODS_SALES_PCT",
	"JNR_SPECIALTY_LKUP___RUNNING_SUM_HARDGOODS_SALES_PCT as RUNNING_SUM_HARDGOODS_SALES_PCT",
	"JNR_SPECIALTY_LKUP___RANKING_CD_HGOODS as RANKING_CD_HGOODS",
	"JNR_SPECIALTY_LKUP___RANKING_LEVEL_HGOODS as RANKING_LEVEL_HGOODS",
	"JNR_SPECIALTY_LKUP___SPECIALTY_52WK_SALES_AMT as SPECIALTY_52WK_SALES_AMT",
	"JNR_SPECIALTY_LKUP___SPECIALTY_52WK_COMP_STORES_AMT as SPECIALTY_52WK_COMP_STORES_AMT",
	"JNR_SPECIALTY_LKUP___STORE_SPECIALTY_SALES_PCT as STORE_SPECIALTY_SALES_PCT",
	"JNR_SPECIALTY_LKUP___RUNNING_SUM_SPECIALTY_SALES_PCT as RUNNING_SUM_SPECIALTY_SALES_PCT",
	"JNR_SPECIALTY_LKUP___RANKING_CD_SPECIALTY as RANKING_CD_SPECIALTY",
	"JNR_SPECIALTY_LKUP___RANKING_LEVEL_SPECIALTY as RANKING_LEVEL_SPECIALTY",
	"JNR_SPECIALTY_LKUP___RANKING_START_DT as RANKING_START_DT",
	"JNR_SPECIALTY_LKUP___RANKING_END_DT as RANKING_END_DT",
	"JNR_SPECIALTY_LKUP___RANKING_START_PERCENT as RANKING_START_PERCENT",
	"JNR_SPECIALTY_LKUP___RANKING_END_PERCENT as RANKING_END_PERCENT").filter("WEEK_DT >= RANKING_START_DT AND WEEK_DT <= RANKING_END_DT AND RUNNING_SUM_SPECIALTY_SALES_PCT > RANKING_START_PERCENT AND RUNNING_SUM_SPECIALTY_SALES_PCT <= RANKING_END_PERCENT").withColumn("sys_row_id", monotonically_increasing_id())

# COMMAND ----------

FIL_SPECIALTY_LKUP.show()

# COMMAND ----------

# Processing node Shortcut_to_SALES_RANKING_WK_PRE, type TARGET 
# COLUMN COUNT: 58


Shortcut_to_SALES_RANKING_WK_PRE = FIL_SPECIALTY_LKUP.selectExpr(
	"CAST(WEEK_DT AS DATE) as WEEK_DT",
	"CAST(LOCATION_ID AS INT) as LOCATION_ID",
	"CAST(COMP_CURR_FLAG as tinyint) as COMP_CURR_FLAG",
	"CAST(SALES_CURR_FLAG as tinyint) as SALES_CURR_FLAG",
	"CAST(TOTAL_52WK_SALES_AMT AS DECIMAL(18,2)) as TOTAL_52WK_SALES_AMT",
	"CAST(TOTAL_52WK_COMP_STORES_AMT AS DECIMAL(18,2)) as TOTAL_52WK_COMP_STORES_AMT",
	"CAST(STORE_TOTAL_SALES_PCT AS DECIMAL(14,10)) as STORE_TOTAL_SALES_PCT",
	"CAST(RUNNING_SUM_TOTAL_SALES_PCT AS DECIMAL(14,10)) as RUNNING_SUM_TOTAL_SALES_PCT",
	"CAST(RANKING_CD_TOTAL AS STRING) as TOTAL_SALES_RANKING_CD",
	"CAST(RANKING_LEVEL_TOTAL as smallint) as TOTAL_SALES_RANKING_LEVEL",
	"CAST(MERCH_52WK_SALES_AMT AS DECIMAL(18,2)) as MERCH_52WK_SALES_AMT",
	"CAST(MERCH_52WK_COMP_STORES_AMT AS DECIMAL(18,2)) as MERCH_52WK_COMP_STORES_AMT",
	"CAST(STORE_MERCH_SALES_PCT AS DECIMAL(14,10)) as STORE_MERCH_SALES_PCT",
	"CAST(RUNNING_SUM_MERCH_SALES_PCT AS DECIMAL(14,10)) as RUNNING_SUM_MERCH_SALES_PCT",
	"CAST(RANKING_CD_MERCH AS STRING) as MERCH_SALES_RANKING_CD",
	"CAST(RANKING_LEVEL_MERCH as smallint) as MERCH_SALES_RANKING_LEVEL",
	"CAST(SERVICES_52WK_SALES_AMT AS DECIMAL(18,2)) as SERVICES_52WK_SALES_AMT",
	"CAST(SERVICES_52WK_COMP_STORES_AMT AS DECIMAL(18,2)) as SERVICES_52WK_COMP_STORES_AMT",
	"CAST(STORE_SERVICES_SALES_PCT AS DECIMAL(14,10)) as STORE_SERVICES_SALES_PCT",
	"CAST(RUNNING_SUM_SERVICES_SALES_PCT AS DECIMAL(14,10)) as RUNNING_SUM_SERVICES_SALES_PCT",
	"CAST(RANKING_CD_SERVICES1 AS STRING) as SERVICES_SALES_RANKING_CD",
	"CAST(RANKING_LEVEL_SERVICES1 as smallint) as SERVICES_SALES_RANKING_LEVEL",
	"CAST(SALON_52WK_SALES_AMT AS DECIMAL(18,2)) as SALON_52WK_SALES_AMT",
	"CAST(SALON_52WK_COMP_STORES_AMT AS DECIMAL(18,2)) as SALON_52WK_COMP_STORES_AMT",
	"CAST(STORE_SALON_SALES_PCT AS DECIMAL(14,10)) as STORE_SALON_SALES_PCT",
	"CAST(RUNNING_SUM_SALON_SALES_PCT AS DECIMAL(14,10)) as RUNNING_SUM_SALON_SALES_PCT",
	"CAST(RANKING_CD_SALON AS STRING) as SALON_SALES_RANKING_CD",
	"CAST(RANKING_LEVEL_SALON1 as smallint) as SALON_SALES_RANKING_LEVEL",
	"CAST(TRAINING_52WK_SALES_AMT AS DECIMAL(18,2)) as TRAINING_52WK_SALES_AMT",
	"CAST(TRAINING_52WK_COMP_STORES_AMT AS DECIMAL(18,2)) as TRAINING_52WK_COMP_STORES_AMT",
	"CAST(STORE_TRAINING_SALES_PCT AS DECIMAL(14,10)) as STORE_TRAINING_SALES_PCT",
	"CAST(RUNNING_SUM_TRAINING_SALES_PCT AS DECIMAL(14,10)) as RUNNING_SUM_TRAINING_SALES_PCT",
	"CAST(RANKING_CD_TRAINING AS STRING) as TRAINING_SALES_RANKING_CD",
	"CAST(RANKING_LEVEL_TRAINING as smallint) as TRAINING_SALES_RANKING_LEVEL",
	"CAST(HOTEL_DDC_52WK_SALES_AMT AS DECIMAL(18,2)) as HOTEL_DDC_52WK_SALES_AMT",
	"CAST(HOTEL_DDC_52WK_COMP_STORES_AMT AS DECIMAL(18,2)) as HOTEL_DDC_52WK_COMP_STORES_AMT",
	"CAST(STORE_HOTEL_DDC_SALES_PCT AS DECIMAL(14,10)) as STORE_HOTEL_DDC_SALES_PCT",
	"CAST(RUNNING_SUM_HOTEL_DDC_SALES_PCT AS DECIMAL(14,10)) as RUNNING_SUM_HOTEL_DDC_SALES_PCT",
	"CAST(RANKING_CD_HOTEL AS STRING) as HOTEL_DDC_SALES_RANKING_CD",
	"CAST(RANKING_LEVEL_HOTEL as smallint) as HOTEL_DDC_SALES_RANKING_LEVEL",
	"CAST(CONSUMABLES_52WK_SALES_AMT AS DECIMAL(18,2)) as CONSUMABLES_52WK_SALES_AMT",
	"CAST(CONSUMABLES_52WK_COMP_STORES_AMT AS DECIMAL(18,2)) as CONSUMABLES_52WK_COMP_STORES_AMT",
	"CAST(STORE_CONSUMABLES_SALES_PCT AS DECIMAL(14,10)) as STORE_CONSUMABLES_SALES_PCT",
	"CAST(RUNNING_SUM_CONSUMABLES_SALES_PCT AS DECIMAL(14,10)) as RUNNING_SUM_CONSUMABLES_SALES_PCT",
	"CAST(RANKING_CD_CONSUM AS STRING) as CONSUMABLES_SALES_RANKING_CD",
	"CAST(RANKING_LEVEL_CONSUM as smallint) as CONSUMABLES_SALES_RANKING_LEVEL",
	"CAST(HARDGOODS_52WK_SALES_AMT AS DECIMAL(18,2)) as HARDGOODS_52WK_SALES_AMT",
	"CAST(HARDGOODS_52WK_COMP_STORES_AMT AS DECIMAL(18,2)) as HARDGOODS_52WK_COMP_STORES_AMT",
	"CAST(STORE_HARDGOODS_SALES_PCT AS DECIMAL(14,10)) as STORE_HARDGOODS_SALES_PCT",
	"CAST(RUNNING_SUM_HARDGOODS_SALES_PCT AS DECIMAL(14,10)) as RUNNING_SUM_HARDGOODS_SALES_PCT",
	"CAST(RANKING_CD_HGOODS AS STRING) as HARDGOODS_SALES_RANKING_CD",
	"CAST(RANKING_LEVEL_HGOODS as smallint) as HARDGOODS_SALES_RANKING_LEVEL",
	"CAST(SPECIALTY_52WK_SALES_AMT AS DECIMAL(18,2)) as SPECIALTY_52WK_SALES_AMT",
	"CAST(SPECIALTY_52WK_COMP_STORES_AMT AS DECIMAL(18,2)) as SPECIALTY_52WK_COMP_STORES_AMT",
	"CAST(STORE_SPECIALTY_SALES_PCT AS DECIMAL(14,10)) as STORE_SPECIALTY_SALES_PCT",
	"CAST(RUNNING_SUM_SPECIALTY_SALES_PCT AS DECIMAL(14,10)) as RUNNING_SUM_SPECIALTY_SALES_PCT",
	"CAST(RANKING_CD_SPECIALTY AS STRING) as SPECIALTY_SALES_RANKING_CD",
	"CAST(RANKING_LEVEL_SPECIALTY as smallint) as SPECIALTY_SALES_RANKING_LEVEL"
).distinct()
try:
    # chk=DuplicateChecker()
    # chk.check_for_duplicate_primary_keys(Shortcut_to_SALES_RANKING_WK_PRE,[key])
    Shortcut_to_SALES_RANKING_WK_PRE=Shortcut_to_SALES_RANKING_WK_PRE.dropDuplicates(['WEEK_DT','LOCATION_ID'])
    Shortcut_to_SALES_RANKING_WK_PRE.write.saveAsTable(f'{raw}.SALES_RANKING_WK_PRE', mode = 'overwrite')
except Exception as e:
    raise e

# COMMAND ----------


