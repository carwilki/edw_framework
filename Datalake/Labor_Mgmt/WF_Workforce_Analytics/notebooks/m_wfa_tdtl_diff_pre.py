#Code converted on 2023-08-08 15:42:25
import os
import argparse
from pyspark.sql import *
from pyspark.sql.functions import *
from pyspark.sql.window import Window
from pyspark.sql.types import *
from datetime import datetime
from Datalake.utils.genericUtilities import *
from Datalake.utils.configs import *
from Datalake.utils.mergeUtils import *
from Datalake.utils.logger import *
# COMMAND ----------

parser = argparse.ArgumentParser()
spark = SparkSession.getActiveSession()
parser.add_argument('env', type=str, help='Env Variable')

args = parser.parse_args()
env = args.env

if env is None or env == '':
    raise ValueError('env is not set')

refine = getEnvPrefix(env) + 'refine'
raw = getEnvPrefix(env) + 'raw'
legacy = getEnvPrefix(env) + 'legacy'
empl_protected = getEnvPrefix(env) + 'empl_protected'


# COMMAND ----------
# Processing node SQ_Shortcut_to_WFA_TDTL_PRE, type SOURCE 
# COLUMN COUNT: 50

SQ_Shortcut_to_WFA_TDTL_PRE = spark.sql(f"""SELECT
raw_WFA_TDTL_PRE.TDTL_SKEY,
raw_WFA_TDTL_PRE.TDTL_ID,
raw_WFA_TDTL_PRE.TSITEM_SKEY,
raw_WFA_TDTL_PRE.RECORDED_DAT,
raw_WFA_TDTL_PRE.RECORDED_FOR_DAT,
raw_WFA_TDTL_PRE.ADJ_SWT,
raw_WFA_TDTL_PRE.EDT_SWT,
raw_WFA_TDTL_PRE.EMP_SKEY,
raw_WFA_TDTL_PRE.STRT_DTM,
raw_WFA_TDTL_PRE.END_DTM,
raw_WFA_TDTL_PRE.UNSCHD_STRT_DTM,
raw_WFA_TDTL_PRE.UNSCHD_END_DTM,
raw_WFA_TDTL_PRE.STRT_TZONE_SKEY,
raw_WFA_TDTL_PRE.LBRACCT_SKEY,
raw_WFA_TDTL_PRE.HM_LBRACCT_SWT,
raw_WFA_TDTL_PRE.HM_LBRACCT_SKEY,
raw_WFA_TDTL_PRE.FROM_LBRACCT_SKEY,
raw_WFA_TDTL_PRE.PAYCD_SKEY,
raw_WFA_TDTL_PRE.CORE_HRS_SWT,
raw_WFA_TDTL_PRE.FROM_PAYCD_SKEY,
raw_WFA_TDTL_PRE.SUPV_SKEY,
raw_WFA_TDTL_PRE.PRI_JOB_SKEY,
raw_WFA_TDTL_PRE.JOB_SKEY,
raw_WFA_TDTL_PRE.PRI_ORG_SKEY,
raw_WFA_TDTL_PRE.ORG_SKEY,
raw_WFA_TDTL_PRE.PAYPER_SKEY,
raw_WFA_TDTL_PRE.HDAY_SKEY,
raw_WFA_TDTL_PRE.STRT_PNCHEVNT_SKEY,
raw_WFA_TDTL_PRE.END_PNCHEVNT_SKEY,
raw_WFA_TDTL_PRE.STRT_DSRC_SKEY,
raw_WFA_TDTL_PRE.END_DSRC_SKEY,
raw_WFA_TDTL_PRE.DSRC_SKEY,
raw_WFA_TDTL_PRE.EMPSTAT_SKEY,
raw_WFA_TDTL_PRE.AGE_NBR,
raw_WFA_TDTL_PRE.TENURE_MO_NBR,
raw_WFA_TDTL_PRE.DFLT_PAY_RULE_SKEY,
raw_WFA_TDTL_PRE.DFLT_WRK_RULE_SWT,
raw_WFA_TDTL_PRE.DFLT_WRK_RULE_SKEY,
raw_WFA_TDTL_PRE.WRK_RULE_SKEY,
raw_WFA_TDTL_PRE.MONEY_AMT,
raw_WFA_TDTL_PRE.DRTN_AMT,
raw_WFA_TDTL_PRE.CORE_AMT,
raw_WFA_TDTL_PRE.NON_CORE_AMT,
raw_WFA_TDTL_PRE.DRTN_DIFF_AMT,
raw_WFA_TDTL_PRE.DRTN_HRS,
raw_WFA_TDTL_PRE.CORE_HRS,
raw_WFA_TDTL_PRE.NON_CORE_HRS,
raw_WFA_TDTL_PRE.LOCKED_SWT,
raw_WFA_TDTL_PRE.GRP_SCHD_SKEY,
raw_WFA_TDTL_PRE.UPDT_DTM
FROM {empl_protected}.raw_WFA_TDTL_PRE""").withColumn("sys_row_id", monotonically_increasing_id())

# COMMAND ----------
# Processing node SQ_Shortcut_to_WFA_TDTL_PREV_PRE, type SOURCE 
# COLUMN COUNT: 48

SQ_Shortcut_to_WFA_TDTL_PREV_PRE = spark.sql(f"""SELECT
raw_WFA_TDTL_PREV_PRE.TDTL_SKEY,
raw_WFA_TDTL_PREV_PRE.TDTL_ID,
raw_WFA_TDTL_PREV_PRE.TSITEM_SKEY,
raw_WFA_TDTL_PREV_PRE.RECORDED_DAT,
raw_WFA_TDTL_PREV_PRE.RECORDED_FOR_DAT,
raw_WFA_TDTL_PREV_PRE.ADJ_SWT,
raw_WFA_TDTL_PREV_PRE.EDT_SWT,
raw_WFA_TDTL_PREV_PRE.EMP_SKEY,
raw_WFA_TDTL_PREV_PRE.STRT_DTM,
raw_WFA_TDTL_PREV_PRE.END_DTM,
raw_WFA_TDTL_PREV_PRE.UNSCHD_STRT_DTM,
raw_WFA_TDTL_PREV_PRE.UNSCHD_END_DTM,
raw_WFA_TDTL_PREV_PRE.STRT_TZONE_SKEY,
raw_WFA_TDTL_PREV_PRE.LBRACCT_SKEY,
raw_WFA_TDTL_PREV_PRE.HM_LBRACCT_SWT,
raw_WFA_TDTL_PREV_PRE.HM_LBRACCT_SKEY,
raw_WFA_TDTL_PREV_PRE.FROM_LBRACCT_SKEY,
raw_WFA_TDTL_PREV_PRE.PAYCD_SKEY,
raw_WFA_TDTL_PREV_PRE.CORE_HRS_SWT,
raw_WFA_TDTL_PREV_PRE.FROM_PAYCD_SKEY,
raw_WFA_TDTL_PREV_PRE.SUPV_SKEY,
raw_WFA_TDTL_PREV_PRE.PRI_JOB_SKEY,
raw_WFA_TDTL_PREV_PRE.JOB_SKEY,
raw_WFA_TDTL_PREV_PRE.PRI_ORG_SKEY,
raw_WFA_TDTL_PREV_PRE.ORG_SKEY,
raw_WFA_TDTL_PREV_PRE.PAYPER_SKEY,
raw_WFA_TDTL_PREV_PRE.HDAY_SKEY,
raw_WFA_TDTL_PREV_PRE.STRT_PNCHEVNT_SKEY,
raw_WFA_TDTL_PREV_PRE.END_PNCHEVNT_SKEY,
raw_WFA_TDTL_PREV_PRE.STRT_DSRC_SKEY,
raw_WFA_TDTL_PREV_PRE.END_DSRC_SKEY,
raw_WFA_TDTL_PREV_PRE.DSRC_SKEY,
raw_WFA_TDTL_PREV_PRE.EMPSTAT_SKEY,
raw_WFA_TDTL_PREV_PRE.AGE_NBR,
raw_WFA_TDTL_PREV_PRE.TENURE_MO_NBR,
raw_WFA_TDTL_PREV_PRE.DFLT_PAY_RULE_SKEY,
raw_WFA_TDTL_PREV_PRE.DFLT_WRK_RULE_SWT,
raw_WFA_TDTL_PREV_PRE.DFLT_WRK_RULE_SKEY,
raw_WFA_TDTL_PREV_PRE.WRK_RULE_SKEY,
raw_WFA_TDTL_PREV_PRE.MONEY_AMT,
raw_WFA_TDTL_PREV_PRE.DRTN_AMT,
raw_WFA_TDTL_PREV_PRE.CORE_AMT,
raw_WFA_TDTL_PREV_PRE.NON_CORE_AMT,
raw_WFA_TDTL_PREV_PRE.DRTN_DIFF_AMT,
raw_WFA_TDTL_PREV_PRE.DRTN_HRS,
raw_WFA_TDTL_PREV_PRE.CORE_HRS,
raw_WFA_TDTL_PREV_PRE.NON_CORE_HRS,
raw_WFA_TDTL_PREV_PRE.GRP_SCHD_SKEY
FROM {empl_protected}.raw_WFA_TDTL_PREV_PRE""").withColumn("sys_row_id", monotonically_increasing_id())

# COMMAND ----------
# Processing node JNR_PREV_WITH_CURRENT, type JOINER . Note: using additional SELECT to rename incoming columns
# COLUMN COUNT: 98

# for each involved DataFrame, append the dataframe name to each column
SQ_Shortcut_to_WFA_TDTL_PREV_PRE_temp = SQ_Shortcut_to_WFA_TDTL_PREV_PRE.toDF(*["SQ_Shortcut_to_WFA_TDTL_PREV_PRE___" + col for col in SQ_Shortcut_to_WFA_TDTL_PREV_PRE.columns])
SQ_Shortcut_to_WFA_TDTL_PRE_temp = SQ_Shortcut_to_WFA_TDTL_PRE.toDF(*["SQ_Shortcut_to_WFA_TDTL_PRE___" + col for col in SQ_Shortcut_to_WFA_TDTL_PRE.columns])

JNR_PREV_WITH_CURRENT = SQ_Shortcut_to_WFA_TDTL_PREV_PRE_temp.join(SQ_Shortcut_to_WFA_TDTL_PRE_temp,[SQ_Shortcut_to_WFA_TDTL_PREV_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PREV_PRE___TDTL_SKEY == SQ_Shortcut_to_WFA_TDTL_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PRE___TDTL_SKEY, SQ_Shortcut_to_WFA_TDTL_PREV_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PREV_PRE___TDTL_ID == SQ_Shortcut_to_WFA_TDTL_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PRE___TDTL_ID, SQ_Shortcut_to_WFA_TDTL_PREV_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PREV_PRE___TSITEM_SKEY == SQ_Shortcut_to_WFA_TDTL_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PRE___TSITEM_SKEY, SQ_Shortcut_to_WFA_TDTL_PREV_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PREV_PRE___RECORDED_DAT == SQ_Shortcut_to_WFA_TDTL_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PRE___RECORDED_FOR_DAT, SQ_Shortcut_to_WFA_TDTL_PREV_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PREV_PRE___RECORDED_FOR_DAT == SQ_Shortcut_to_WFA_TDTL_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PRE___RECORDED_FOR_DAT, SQ_Shortcut_to_WFA_TDTL_PREV_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PREV_PRE___ADJ_SWT == SQ_Shortcut_to_WFA_TDTL_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PRE___ADJ_SWT, SQ_Shortcut_to_WFA_TDTL_PREV_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PREV_PRE___EDT_SWT == SQ_Shortcut_to_WFA_TDTL_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PRE___EDT_SWT, SQ_Shortcut_to_WFA_TDTL_PREV_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PREV_PRE___EMP_SKEY == SQ_Shortcut_to_WFA_TDTL_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PRE___EMP_SKEY, SQ_Shortcut_to_WFA_TDTL_PREV_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PREV_PRE___STRT_DTM == SQ_Shortcut_to_WFA_TDTL_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PRE___STRT_DTM, SQ_Shortcut_to_WFA_TDTL_PREV_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PREV_PRE___END_DTM == SQ_Shortcut_to_WFA_TDTL_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PRE___END_DTM, SQ_Shortcut_to_WFA_TDTL_PREV_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PREV_PRE___UNSCHD_STRT_DTM == SQ_Shortcut_to_WFA_TDTL_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PRE___UNSCHD_STRT_DTM, SQ_Shortcut_to_WFA_TDTL_PREV_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PREV_PRE___UNSCHD_END_DTM == SQ_Shortcut_to_WFA_TDTL_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PRE___UNSCHD_END_DTM, SQ_Shortcut_to_WFA_TDTL_PREV_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PREV_PRE___STRT_TZONE_SKEY == SQ_Shortcut_to_WFA_TDTL_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PRE___STRT_TZONE_SKEY, SQ_Shortcut_to_WFA_TDTL_PREV_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PREV_PRE___LBRACCT_SKEY == SQ_Shortcut_to_WFA_TDTL_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PRE___LBRACCT_SKEY, SQ_Shortcut_to_WFA_TDTL_PREV_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PREV_PRE___HM_LBRACCT_SWT == SQ_Shortcut_to_WFA_TDTL_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PRE___HM_LBRACCT_SWT, SQ_Shortcut_to_WFA_TDTL_PREV_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PREV_PRE___HM_LBRACCT_SKEY == SQ_Shortcut_to_WFA_TDTL_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PRE___HM_LBRACCT_SKEY, SQ_Shortcut_to_WFA_TDTL_PREV_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PREV_PRE___FROM_LBRACCT_SKEY == SQ_Shortcut_to_WFA_TDTL_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PRE___FROM_LBRACCT_SKEY, SQ_Shortcut_to_WFA_TDTL_PREV_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PREV_PRE___PAYCD_SKEY == SQ_Shortcut_to_WFA_TDTL_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PRE___PAYCD_SKEY, SQ_Shortcut_to_WFA_TDTL_PREV_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PREV_PRE___CORE_HRS_SWT == SQ_Shortcut_to_WFA_TDTL_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PRE___CORE_HRS_SWT, SQ_Shortcut_to_WFA_TDTL_PREV_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PREV_PRE___FROM_PAYCD_SKEY == SQ_Shortcut_to_WFA_TDTL_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PRE___FROM_PAYCD_SKEY, SQ_Shortcut_to_WFA_TDTL_PREV_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PREV_PRE___SUPV_SKEY == SQ_Shortcut_to_WFA_TDTL_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PRE___SUPV_SKEY, SQ_Shortcut_to_WFA_TDTL_PREV_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PREV_PRE___PRI_JOB_SKEY == SQ_Shortcut_to_WFA_TDTL_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PRE___PRI_JOB_SKEY, SQ_Shortcut_to_WFA_TDTL_PREV_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PREV_PRE___JOB_SKEY == SQ_Shortcut_to_WFA_TDTL_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PRE___JOB_SKEY, SQ_Shortcut_to_WFA_TDTL_PREV_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PREV_PRE___PRI_ORG_SKEY == SQ_Shortcut_to_WFA_TDTL_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PRE___PRI_ORG_SKEY, SQ_Shortcut_to_WFA_TDTL_PREV_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PREV_PRE___ORG_SKEY == SQ_Shortcut_to_WFA_TDTL_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PRE___ORG_SKEY, SQ_Shortcut_to_WFA_TDTL_PREV_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PREV_PRE___PAYPER_SKEY == SQ_Shortcut_to_WFA_TDTL_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PRE___PAYPER_SKEY, SQ_Shortcut_to_WFA_TDTL_PREV_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PREV_PRE___HDAY_SKEY == SQ_Shortcut_to_WFA_TDTL_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PRE___HDAY_SKEY, SQ_Shortcut_to_WFA_TDTL_PREV_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PREV_PRE___STRT_PNCHEVNT_SKEY == SQ_Shortcut_to_WFA_TDTL_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PRE___STRT_PNCHEVNT_SKEY, SQ_Shortcut_to_WFA_TDTL_PREV_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PREV_PRE___END_PNCHEVNT_SKEY == SQ_Shortcut_to_WFA_TDTL_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PRE___END_PNCHEVNT_SKEY, SQ_Shortcut_to_WFA_TDTL_PREV_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PREV_PRE___STRT_DSRC_SKEY == SQ_Shortcut_to_WFA_TDTL_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PRE___STRT_DSRC_SKEY, SQ_Shortcut_to_WFA_TDTL_PREV_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PREV_PRE___END_DSRC_SKEY == SQ_Shortcut_to_WFA_TDTL_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PRE___END_DSRC_SKEY, SQ_Shortcut_to_WFA_TDTL_PREV_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PREV_PRE___DSRC_SKEY == SQ_Shortcut_to_WFA_TDTL_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PRE___DSRC_SKEY, SQ_Shortcut_to_WFA_TDTL_PREV_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PREV_PRE___EMPSTAT_SKEY == SQ_Shortcut_to_WFA_TDTL_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PRE___EMPSTAT_SKEY, SQ_Shortcut_to_WFA_TDTL_PREV_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PREV_PRE___AGE_NBR == SQ_Shortcut_to_WFA_TDTL_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PRE___AGE_NBR, SQ_Shortcut_to_WFA_TDTL_PREV_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PREV_PRE___TENURE_MO_NBR == SQ_Shortcut_to_WFA_TDTL_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PRE___TENURE_MO_NBR, SQ_Shortcut_to_WFA_TDTL_PREV_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PREV_PRE___DFLT_PAY_RULE_SKEY == SQ_Shortcut_to_WFA_TDTL_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PRE___DFLT_PAY_RULE_SKEY, SQ_Shortcut_to_WFA_TDTL_PREV_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PREV_PRE___DFLT_WRK_RULE_SWT == SQ_Shortcut_to_WFA_TDTL_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PRE___DFLT_WRK_RULE_SWT, SQ_Shortcut_to_WFA_TDTL_PREV_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PREV_PRE___DFLT_WRK_RULE_SKEY == SQ_Shortcut_to_WFA_TDTL_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PRE___DFLT_WRK_RULE_SKEY, SQ_Shortcut_to_WFA_TDTL_PREV_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PREV_PRE___WRK_RULE_SKEY == SQ_Shortcut_to_WFA_TDTL_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PRE___WRK_RULE_SKEY, SQ_Shortcut_to_WFA_TDTL_PREV_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PREV_PRE___MONEY_AMT == SQ_Shortcut_to_WFA_TDTL_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PRE___MONEY_AMT, SQ_Shortcut_to_WFA_TDTL_PREV_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PREV_PRE___DRTN_AMT == SQ_Shortcut_to_WFA_TDTL_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PRE___DRTN_AMT, SQ_Shortcut_to_WFA_TDTL_PREV_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PREV_PRE___CORE_AMT == SQ_Shortcut_to_WFA_TDTL_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PRE___CORE_AMT, SQ_Shortcut_to_WFA_TDTL_PREV_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PREV_PRE___NON_CORE_AMT == SQ_Shortcut_to_WFA_TDTL_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PRE___NON_CORE_AMT, SQ_Shortcut_to_WFA_TDTL_PREV_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PREV_PRE___DRTN_DIFF_AMT == SQ_Shortcut_to_WFA_TDTL_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PRE___DRTN_DIFF_AMT, SQ_Shortcut_to_WFA_TDTL_PREV_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PREV_PRE___DRTN_HRS == SQ_Shortcut_to_WFA_TDTL_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PRE___DRTN_HRS, SQ_Shortcut_to_WFA_TDTL_PREV_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PREV_PRE___CORE_HRS == SQ_Shortcut_to_WFA_TDTL_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PRE___CORE_HRS, SQ_Shortcut_to_WFA_TDTL_PREV_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PREV_PRE___NON_CORE_HRS == SQ_Shortcut_to_WFA_TDTL_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PRE___NON_CORE_HRS, SQ_Shortcut_to_WFA_TDTL_PREV_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PREV_PRE___GRP_SCHD_SKEY == SQ_Shortcut_to_WFA_TDTL_PRE_temp.SQ_Shortcut_to_WFA_TDTL_PRE___GRP_SCHD_SKEY],'right_outer').selectExpr(
	"SQ_Shortcut_to_WFA_TDTL_PRE___TDTL_SKEY as TDTL_SKEY_CURR",
	"SQ_Shortcut_to_WFA_TDTL_PRE___TDTL_ID as TDTL_ID_CURR",
	"SQ_Shortcut_to_WFA_TDTL_PRE___TSITEM_SKEY as TSITEM_SKEY_CURR",
	"SQ_Shortcut_to_WFA_TDTL_PRE___RECORDED_DAT as RECORDED_DAT_CURR",
	"SQ_Shortcut_to_WFA_TDTL_PRE___RECORDED_FOR_DAT as RECORDED_FOR_DAT_CURR",
	"SQ_Shortcut_to_WFA_TDTL_PRE___ADJ_SWT as ADJ_SWT_CURR",
	"SQ_Shortcut_to_WFA_TDTL_PRE___EDT_SWT as EDT_SWT_CURR",
	"SQ_Shortcut_to_WFA_TDTL_PRE___EMP_SKEY as EMP_SKEY_CURR",
	"SQ_Shortcut_to_WFA_TDTL_PRE___STRT_DTM as STRT_DTM_CURR",
	"SQ_Shortcut_to_WFA_TDTL_PRE___END_DTM as END_DTM_CURR",
	"SQ_Shortcut_to_WFA_TDTL_PRE___UNSCHD_STRT_DTM as UNSCHD_STRT_DTM_CURR",
	"SQ_Shortcut_to_WFA_TDTL_PRE___UNSCHD_END_DTM as UNSCHD_END_DTM_CURR",
	"SQ_Shortcut_to_WFA_TDTL_PRE___STRT_TZONE_SKEY as STRT_TZONE_SKEY_CURR",
	"SQ_Shortcut_to_WFA_TDTL_PRE___LBRACCT_SKEY as LBRACCT_SKEY_CURR",
	"SQ_Shortcut_to_WFA_TDTL_PRE___HM_LBRACCT_SWT as HM_LBRACCT_SWT_CURR",
	"SQ_Shortcut_to_WFA_TDTL_PRE___HM_LBRACCT_SKEY as HM_LBRACCT_SKEY_CURR",
	"SQ_Shortcut_to_WFA_TDTL_PRE___FROM_LBRACCT_SKEY as FROM_LBRACCT_SKEY_CURR",
	"SQ_Shortcut_to_WFA_TDTL_PRE___PAYCD_SKEY as PAYCD_SKEY_CURR",
	"SQ_Shortcut_to_WFA_TDTL_PRE___CORE_HRS_SWT as CORE_HRS_SWT_CURR",
	"SQ_Shortcut_to_WFA_TDTL_PRE___FROM_PAYCD_SKEY as FROM_PAYCD_SKEY_CURR",
	"SQ_Shortcut_to_WFA_TDTL_PRE___SUPV_SKEY as SUPV_SKEY_CURR",
	"SQ_Shortcut_to_WFA_TDTL_PRE___PRI_JOB_SKEY as PRI_JOB_SKEY_CURR",
	"SQ_Shortcut_to_WFA_TDTL_PRE___JOB_SKEY as JOB_SKEY_CURR",
	"SQ_Shortcut_to_WFA_TDTL_PRE___PRI_ORG_SKEY as PRI_ORG_SKEY_CURR",
	"SQ_Shortcut_to_WFA_TDTL_PRE___ORG_SKEY as ORG_SKEY_CURR",
	"SQ_Shortcut_to_WFA_TDTL_PRE___PAYPER_SKEY as PAYPER_SKEY_CURR",
	"SQ_Shortcut_to_WFA_TDTL_PRE___HDAY_SKEY as HDAY_SKEY_CURR",
	"SQ_Shortcut_to_WFA_TDTL_PRE___STRT_PNCHEVNT_SKEY as STRT_PNCHEVNT_SKEY_CURR",
	"SQ_Shortcut_to_WFA_TDTL_PRE___END_PNCHEVNT_SKEY as END_PNCHEVNT_SKEY_CURR",
	"SQ_Shortcut_to_WFA_TDTL_PRE___STRT_DSRC_SKEY as STRT_DSRC_SKEY_CURR",
	"SQ_Shortcut_to_WFA_TDTL_PRE___END_DSRC_SKEY as END_DSRC_SKEY_CURR",
	"SQ_Shortcut_to_WFA_TDTL_PRE___DSRC_SKEY as DSRC_SKEY_CURR",
	"SQ_Shortcut_to_WFA_TDTL_PRE___EMPSTAT_SKEY as EMPSTAT_SKEY_CURR",
	"SQ_Shortcut_to_WFA_TDTL_PRE___AGE_NBR as AGE_NBR_CURR",
	"SQ_Shortcut_to_WFA_TDTL_PRE___TENURE_MO_NBR as TENURE_MO_NBR_CURR",
	"SQ_Shortcut_to_WFA_TDTL_PRE___DFLT_PAY_RULE_SKEY as DFLT_PAY_RULE_SKEY_CURR",
	"SQ_Shortcut_to_WFA_TDTL_PRE___DFLT_WRK_RULE_SWT as DFLT_WRK_RULE_SWT_CURR",
	"SQ_Shortcut_to_WFA_TDTL_PRE___DFLT_WRK_RULE_SKEY as DFLT_WRK_RULE_SKEY_CURR",
	"SQ_Shortcut_to_WFA_TDTL_PRE___WRK_RULE_SKEY as WRK_RULE_SKEY_CURR",
	"SQ_Shortcut_to_WFA_TDTL_PRE___MONEY_AMT as MONEY_AMT_CURR",
	"SQ_Shortcut_to_WFA_TDTL_PRE___DRTN_AMT as DRTN_AMT_CURR",
	"SQ_Shortcut_to_WFA_TDTL_PRE___CORE_AMT as CORE_AMT_CURR",
	"SQ_Shortcut_to_WFA_TDTL_PRE___NON_CORE_AMT as NON_CORE_AMT_CURR",
	"SQ_Shortcut_to_WFA_TDTL_PRE___DRTN_DIFF_AMT as DRTN_DIFF_AMT_CURR",
	"SQ_Shortcut_to_WFA_TDTL_PRE___DRTN_HRS as DRTN_HRS_CURR",
	"SQ_Shortcut_to_WFA_TDTL_PRE___CORE_HRS as CORE_HRS_CURR",
	"SQ_Shortcut_to_WFA_TDTL_PRE___NON_CORE_HRS as NON_CORE_HRS_CURR",
	"SQ_Shortcut_to_WFA_TDTL_PRE___LOCKED_SWT as LOCKED_SWT_CURR",
	"SQ_Shortcut_to_WFA_TDTL_PRE___GRP_SCHD_SKEY as GRP_SCHD_SKEY_CURR",
	"SQ_Shortcut_to_WFA_TDTL_PRE___UPDT_DTM as UPDT_DTM_CURR",
	"SQ_Shortcut_to_WFA_TDTL_PREV_PRE___TDTL_SKEY as TDTL_SKEY",
	"SQ_Shortcut_to_WFA_TDTL_PREV_PRE___TDTL_ID as TDTL_ID",
	"SQ_Shortcut_to_WFA_TDTL_PREV_PRE___TSITEM_SKEY as TSITEM_SKEY",
	"SQ_Shortcut_to_WFA_TDTL_PREV_PRE___RECORDED_DAT as RECORDED_DAT",
	"SQ_Shortcut_to_WFA_TDTL_PREV_PRE___RECORDED_FOR_DAT as RECORDED_FOR_DAT",
	"SQ_Shortcut_to_WFA_TDTL_PREV_PRE___ADJ_SWT as ADJ_SWT",
	"SQ_Shortcut_to_WFA_TDTL_PREV_PRE___EDT_SWT as EDT_SWT",
	"SQ_Shortcut_to_WFA_TDTL_PREV_PRE___EMP_SKEY as EMP_SKEY",
	"SQ_Shortcut_to_WFA_TDTL_PREV_PRE___STRT_DTM as STRT_DTM",
	"SQ_Shortcut_to_WFA_TDTL_PREV_PRE___END_DTM as END_DTM",
	"SQ_Shortcut_to_WFA_TDTL_PREV_PRE___UNSCHD_STRT_DTM as UNSCHD_STRT_DTM",
	"SQ_Shortcut_to_WFA_TDTL_PREV_PRE___UNSCHD_END_DTM as UNSCHD_END_DTM",
	"SQ_Shortcut_to_WFA_TDTL_PREV_PRE___STRT_TZONE_SKEY as STRT_TZONE_SKEY",
	"SQ_Shortcut_to_WFA_TDTL_PREV_PRE___LBRACCT_SKEY as LBRACCT_SKEY",
	"SQ_Shortcut_to_WFA_TDTL_PREV_PRE___HM_LBRACCT_SWT as HM_LBRACCT_SWT",
	"SQ_Shortcut_to_WFA_TDTL_PREV_PRE___HM_LBRACCT_SKEY as HM_LBRACCT_SKEY",
	"SQ_Shortcut_to_WFA_TDTL_PREV_PRE___FROM_LBRACCT_SKEY as FROM_LBRACCT_SKEY",
	"SQ_Shortcut_to_WFA_TDTL_PREV_PRE___PAYCD_SKEY as PAYCD_SKEY",
	"SQ_Shortcut_to_WFA_TDTL_PREV_PRE___CORE_HRS_SWT as CORE_HRS_SWT",
	"SQ_Shortcut_to_WFA_TDTL_PREV_PRE___FROM_PAYCD_SKEY as FROM_PAYCD_SKEY",
	"SQ_Shortcut_to_WFA_TDTL_PREV_PRE___SUPV_SKEY as SUPV_SKEY",
	"SQ_Shortcut_to_WFA_TDTL_PREV_PRE___PRI_JOB_SKEY as PRI_JOB_SKEY",
	"SQ_Shortcut_to_WFA_TDTL_PREV_PRE___JOB_SKEY as JOB_SKEY",
	"SQ_Shortcut_to_WFA_TDTL_PREV_PRE___PRI_ORG_SKEY as PRI_ORG_SKEY",
	"SQ_Shortcut_to_WFA_TDTL_PREV_PRE___ORG_SKEY as ORG_SKEY",
	"SQ_Shortcut_to_WFA_TDTL_PREV_PRE___PAYPER_SKEY as PAYPER_SKEY",
	"SQ_Shortcut_to_WFA_TDTL_PREV_PRE___HDAY_SKEY as HDAY_SKEY",
	"SQ_Shortcut_to_WFA_TDTL_PREV_PRE___STRT_PNCHEVNT_SKEY as STRT_PNCHEVNT_SKEY",
	"SQ_Shortcut_to_WFA_TDTL_PREV_PRE___END_PNCHEVNT_SKEY as END_PNCHEVNT_SKEY",
	"SQ_Shortcut_to_WFA_TDTL_PREV_PRE___STRT_DSRC_SKEY as STRT_DSRC_SKEY",
	"SQ_Shortcut_to_WFA_TDTL_PREV_PRE___END_DSRC_SKEY as END_DSRC_SKEY",
	"SQ_Shortcut_to_WFA_TDTL_PREV_PRE___DSRC_SKEY as DSRC_SKEY",
	"SQ_Shortcut_to_WFA_TDTL_PREV_PRE___EMPSTAT_SKEY as EMPSTAT_SKEY",
	"SQ_Shortcut_to_WFA_TDTL_PREV_PRE___AGE_NBR as AGE_NBR",
	"SQ_Shortcut_to_WFA_TDTL_PREV_PRE___TENURE_MO_NBR as TENURE_MO_NBR",
	"SQ_Shortcut_to_WFA_TDTL_PREV_PRE___DFLT_PAY_RULE_SKEY as DFLT_PAY_RULE_SKEY",
	"SQ_Shortcut_to_WFA_TDTL_PREV_PRE___DFLT_WRK_RULE_SWT as DFLT_WRK_RULE_SWT",
	"SQ_Shortcut_to_WFA_TDTL_PREV_PRE___DFLT_WRK_RULE_SKEY as DFLT_WRK_RULE_SKEY",
	"SQ_Shortcut_to_WFA_TDTL_PREV_PRE___WRK_RULE_SKEY as WRK_RULE_SKEY",
	"SQ_Shortcut_to_WFA_TDTL_PREV_PRE___MONEY_AMT as MONEY_AMT",
	"SQ_Shortcut_to_WFA_TDTL_PREV_PRE___DRTN_AMT as DRTN_AMT",
	"SQ_Shortcut_to_WFA_TDTL_PREV_PRE___CORE_AMT as CORE_AMT",
	"SQ_Shortcut_to_WFA_TDTL_PREV_PRE___NON_CORE_AMT as NON_CORE_AMT",
	"SQ_Shortcut_to_WFA_TDTL_PREV_PRE___DRTN_DIFF_AMT as DRTN_DIFF_AMT",
	"SQ_Shortcut_to_WFA_TDTL_PREV_PRE___DRTN_HRS as DRTN_HRS",
	"SQ_Shortcut_to_WFA_TDTL_PREV_PRE___CORE_HRS as CORE_HRS",
	"SQ_Shortcut_to_WFA_TDTL_PREV_PRE___NON_CORE_HRS as NON_CORE_HRS",
	"SQ_Shortcut_to_WFA_TDTL_PREV_PRE___GRP_SCHD_SKEY as GRP_SCHD_SKEY")

# COMMAND ----------
# Processing node FILTRANS, type FILTER 
# COLUMN COUNT: 51

# for each involved DataFrame, append the dataframe name to each column
JNR_PREV_WITH_CURRENT_temp = JNR_PREV_WITH_CURRENT.toDF(*["JNR_PREV_WITH_CURRENT___" + col for col in JNR_PREV_WITH_CURRENT.columns])

FILTRANS = JNR_PREV_WITH_CURRENT_temp.selectExpr(
	"JNR_PREV_WITH_CURRENT___TDTL_SKEY_CURR as TDTL_SKEY_CURR",
	"JNR_PREV_WITH_CURRENT___TDTL_ID_CURR as TDTL_ID_CURR",
	"JNR_PREV_WITH_CURRENT___TSITEM_SKEY_CURR as TSITEM_SKEY_CURR",
	"JNR_PREV_WITH_CURRENT___RECORDED_DAT_CURR as RECORDED_DAT_CURR",
	"JNR_PREV_WITH_CURRENT___RECORDED_FOR_DAT_CURR as RECORDED_FOR_DAT_CURR",
	"JNR_PREV_WITH_CURRENT___ADJ_SWT_CURR as ADJ_SWT_CURR",
	"JNR_PREV_WITH_CURRENT___EDT_SWT_CURR as EDT_SWT_CURR",
	"JNR_PREV_WITH_CURRENT___EMP_SKEY_CURR as EMP_SKEY_CURR",
	"JNR_PREV_WITH_CURRENT___STRT_DTM_CURR as STRT_DTM_CURR",
	"JNR_PREV_WITH_CURRENT___END_DTM_CURR as END_DTM_CURR",
	"JNR_PREV_WITH_CURRENT___UNSCHD_STRT_DTM_CURR as UNSCHD_STRT_DTM_CURR",
	"JNR_PREV_WITH_CURRENT___UNSCHD_END_DTM_CURR as UNSCHD_END_DTM_CURR",
	"JNR_PREV_WITH_CURRENT___STRT_TZONE_SKEY_CURR as STRT_TZONE_SKEY_CURR",
	"JNR_PREV_WITH_CURRENT___LBRACCT_SKEY_CURR as LBRACCT_SKEY_CURR",
	"JNR_PREV_WITH_CURRENT___HM_LBRACCT_SWT_CURR as HM_LBRACCT_SWT_CURR",
	"JNR_PREV_WITH_CURRENT___HM_LBRACCT_SKEY_CURR as HM_LBRACCT_SKEY_CURR",
	"JNR_PREV_WITH_CURRENT___FROM_LBRACCT_SKEY_CURR as FROM_LBRACCT_SKEY_CURR",
	"JNR_PREV_WITH_CURRENT___PAYCD_SKEY_CURR as PAYCD_SKEY_CURR",
	"JNR_PREV_WITH_CURRENT___CORE_HRS_SWT_CURR as CORE_HRS_SWT_CURR",
	"JNR_PREV_WITH_CURRENT___FROM_PAYCD_SKEY_CURR as FROM_PAYCD_SKEY_CURR",
	"JNR_PREV_WITH_CURRENT___SUPV_SKEY_CURR as SUPV_SKEY_CURR",
	"JNR_PREV_WITH_CURRENT___PRI_JOB_SKEY_CURR as PRI_JOB_SKEY_CURR",
	"JNR_PREV_WITH_CURRENT___JOB_SKEY_CURR as JOB_SKEY_CURR",
	"JNR_PREV_WITH_CURRENT___PRI_ORG_SKEY_CURR as PRI_ORG_SKEY_CURR",
	"JNR_PREV_WITH_CURRENT___ORG_SKEY_CURR as ORG_SKEY_CURR",
	"JNR_PREV_WITH_CURRENT___PAYPER_SKEY_CURR as PAYPER_SKEY_CURR",
	"JNR_PREV_WITH_CURRENT___HDAY_SKEY_CURR as HDAY_SKEY_CURR",
	"JNR_PREV_WITH_CURRENT___STRT_PNCHEVNT_SKEY_CURR as STRT_PNCHEVNT_SKEY_CURR",
	"JNR_PREV_WITH_CURRENT___END_PNCHEVNT_SKEY_CURR as END_PNCHEVNT_SKEY_CURR",
	"JNR_PREV_WITH_CURRENT___STRT_DSRC_SKEY_CURR as STRT_DSRC_SKEY_CURR",
	"JNR_PREV_WITH_CURRENT___END_DSRC_SKEY_CURR as END_DSRC_SKEY_CURR",
	"JNR_PREV_WITH_CURRENT___DSRC_SKEY_CURR as DSRC_SKEY_CURR",
	"JNR_PREV_WITH_CURRENT___EMPSTAT_SKEY_CURR as EMPSTAT_SKEY_CURR",
	"JNR_PREV_WITH_CURRENT___AGE_NBR_CURR as AGE_NBR_CURR",
	"JNR_PREV_WITH_CURRENT___TENURE_MO_NBR_CURR as TENURE_MO_NBR_CURR",
	"JNR_PREV_WITH_CURRENT___DFLT_PAY_RULE_SKEY_CURR as DFLT_PAY_RULE_SKEY_CURR",
	"JNR_PREV_WITH_CURRENT___DFLT_WRK_RULE_SWT_CURR as DFLT_WRK_RULE_SWT_CURR",
	"JNR_PREV_WITH_CURRENT___DFLT_WRK_RULE_SKEY_CURR as DFLT_WRK_RULE_SKEY_CURR",
	"JNR_PREV_WITH_CURRENT___WRK_RULE_SKEY_CURR as WRK_RULE_SKEY_CURR",
	"JNR_PREV_WITH_CURRENT___MONEY_AMT_CURR as MONEY_AMT_CURR",
	"JNR_PREV_WITH_CURRENT___DRTN_AMT_CURR as DRTN_AMT_CURR",
	"JNR_PREV_WITH_CURRENT___CORE_AMT_CURR as CORE_AMT_CURR",
	"JNR_PREV_WITH_CURRENT___NON_CORE_AMT_CURR as NON_CORE_AMT_CURR",
	"JNR_PREV_WITH_CURRENT___DRTN_DIFF_AMT_CURR as DRTN_DIFF_AMT_CURR",
	"JNR_PREV_WITH_CURRENT___DRTN_HRS_CURR as DRTN_HRS_CURR",
	"JNR_PREV_WITH_CURRENT___CORE_HRS_CURR as CORE_HRS_CURR",
	"JNR_PREV_WITH_CURRENT___NON_CORE_HRS_CURR as NON_CORE_HRS_CURR",
	"JNR_PREV_WITH_CURRENT___LOCKED_SWT_CURR as LOCKED_SWT_CURR",
	"JNR_PREV_WITH_CURRENT___GRP_SCHD_SKEY_CURR as GRP_SCHD_SKEY_CURR",
	"JNR_PREV_WITH_CURRENT___UPDT_DTM_CURR as UPDT_DTM_CURR",
	"JNR_PREV_WITH_CURRENT___TDTL_SKEY as TDTL_SKEY").filter("TDTL_SKEY is null").withColumn("sys_row_id", monotonically_increasing_id())

# COMMAND ----------
# Processing node WFA_TDTL_DIFF_PRE, type TARGET 
# COLUMN COUNT: 49


WFA_TDTL_DIFF_PRE = FILTRANS.selectExpr(
	"CAST(TDTL_SKEY_CURR AS DECIMAL(20,0)) as TDTL_SKEY",
	"TDTL_ID_CURR as TDTL_ID",
	"CAST(TSITEM_SKEY_CURR AS DECIMAL(20,0)) as TSITEM_SKEY",
	"CAST(RECORDED_DAT_CURR AS TIMESTAMP) as RECORDED_DAT",
	"CAST(RECORDED_FOR_DAT_CURR AS TIMESTAMP) as RECORDED_FOR_DAT",
	"CAST(ADJ_SWT_CURR AS INT) as ADJ_SWT",
	"CAST(EDT_SWT_CURR AS INT) as EDT_SWT",
	"EMP_SKEY_CURR as EMP_SKEY",
	"CAST(STRT_DTM_CURR AS TIMESTAMP) as STRT_DTM",
	"CAST(END_DTM_CURR AS TIMESTAMP) as END_DTM",
	"CAST(UNSCHD_STRT_DTM_CURR AS TIMESTAMP) as UNSCHD_STRT_DTM",
	"CAST(UNSCHD_END_DTM_CURR AS TIMESTAMP) as UNSCHD_END_DTM",
	"STRT_TZONE_SKEY_CURR as STRT_TZONE_SKEY",
	"LBRACCT_SKEY_CURR as LBRACCT_SKEY",
	"CAST(HM_LBRACCT_SWT_CURR AS INT) as HM_LBRACCT_SWT",
	"HM_LBRACCT_SKEY_CURR as HM_LBRACCT_SKEY",
	"FROM_LBRACCT_SKEY_CURR as FROM_LBRACCT_SKEY",
	"PAYCD_SKEY_CURR as PAYCD_SKEY",
	"CAST(CORE_HRS_SWT_CURR AS INT) as CORE_HRS_SWT",
	"FROM_PAYCD_SKEY_CURR as FROM_PAYCD_SKEY",
	"SUPV_SKEY_CURR as SUPV_SKEY",
	"PRI_JOB_SKEY_CURR as PRI_JOB_SKEY",
	"JOB_SKEY_CURR as JOB_SKEY",
	"PRI_ORG_SKEY_CURR as PRI_ORG_SKEY",
	"ORG_SKEY_CURR as ORG_SKEY",
	"PAYPER_SKEY_CURR as PAYPER_SKEY",
	"HDAY_SKEY_CURR as HDAY_SKEY",
	"STRT_PNCHEVNT_SKEY_CURR as STRT_PNCHEVNT_SKEY",
	"END_PNCHEVNT_SKEY_CURR as END_PNCHEVNT_SKEY",
	"STRT_DSRC_SKEY_CURR as STRT_DSRC_SKEY",
	"END_DSRC_SKEY_CURR as END_DSRC_SKEY",
	"DSRC_SKEY_CURR as DSRC_SKEY",
	"EMPSTAT_SKEY_CURR as EMPSTAT_SKEY",
	"AGE_NBR_CURR as AGE_NBR",
	"TENURE_MO_NBR_CURR as TENURE_MO_NBR",
	"DFLT_PAY_RULE_SKEY_CURR as DFLT_PAY_RULE_SKEY",
	"CAST(DFLT_WRK_RULE_SWT_CURR AS INT) as DFLT_WRK_RULE_SWT",
	"DFLT_WRK_RULE_SKEY_CURR as DFLT_WRK_RULE_SKEY",
	"WRK_RULE_SKEY_CURR as WRK_RULE_SKEY",
	"CAST(MONEY_AMT_CURR AS DECIMAL(16,6)) as MONEY_AMT",
	"CAST(DRTN_AMT_CURR AS DECIMAL(16,6)) as DRTN_AMT",
	"CAST(CORE_AMT_CURR AS DECIMAL(16,6)) as CORE_AMT",
	"CAST(NON_CORE_AMT_CURR AS DECIMAL(16,6)) as NON_CORE_AMT",
	"CAST(DRTN_DIFF_AMT_CURR AS DECIMAL(16,6)) as DRTN_DIFF_AMT",
	"CAST(DRTN_HRS_CURR AS DECIMAL(16,6)) as DRTN_HRS",
	"CAST(CORE_HRS_CURR AS DECIMAL(16,6)) as CORE_HRS",
	"CAST(NON_CORE_HRS_CURR AS DECIMAL(16,6)) as NON_CORE_HRS",
	"CAST(LOCKED_SWT_CURR AS INT) as LOCKED_SWT",
	"GRP_SCHD_SKEY_CURR as GRP_SCHD_SKEY"
)
# overwriteDeltaPartition(WFA_TDTL_DIFF_PRE,'DC_NBR',dcnbr,f'{raw}.WFA_TDTL_DIFF_PRE')
WFA_TDTL_DIFF_PRE.write.mode("overwrite").saveAsTable(f'{empl_protected}.raw_WFA_TDTL_DIFF_PRE')