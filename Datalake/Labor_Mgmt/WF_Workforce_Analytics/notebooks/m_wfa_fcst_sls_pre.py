#Code converted on 2023-08-08 15:42:28
import os
import argparse
from pyspark.sql import *
from pyspark.sql.functions import *
from pyspark.sql.window import Window
from pyspark.sql.types import *
from datetime import datetime
from Datalake.utils.genericUtilities import *
from Datalake.utils.configs import *
from Datalake.utils.mergeUtils import *
from Datalake.utils.logger import *
# COMMAND ----------

parser = argparse.ArgumentParser()
spark = SparkSession.getActiveSession()
parser.add_argument('env', type=str, help='Env Variable')

args = parser.parse_args()
env = args.env

if env is None or env == '':
    raise ValueError('env is not set')

refine = getEnvPrefix(env) + 'refine'
raw = getEnvPrefix(env) + 'raw'
legacy = getEnvPrefix(env) + 'legacy'

(username,password,connection_string) = or_kro_read_krap1(env)
# COMMAND ----------
# Processing node SQ_Shortcut_to_FCT_FCST_SLS, type SOURCE 
# COLUMN COUNT: 63

SQ_Shortcut_to_FCT_FCST_SLS = jdbcOracleConnection(f"""SELECT
FCT_FCST_SLS.FCST_SLS_SKEY,
FCT_FCST_SLS.BUSN_DAT,
FCT_FCST_SLS.ORG_SKEY,
FCT_FCST_SLS.ACTL_AMT,
FCT_FCST_SLS.ACTL_HRS,
FCT_FCST_SLS.ACTL_RATE_AMT,
FCT_FCST_SLS.ACTL_CLNT1_NBR,
FCT_FCST_SLS.ACTL_CLNT2_NBR,
FCT_FCST_SLS.ACTL_CLNT3_NBR,
FCT_FCST_SLS.ACTL_CLNT4_NBR,
FCT_FCST_SLS.ACTL_CLNT5_NBR,
FCT_FCST_SLS.ACTL_CLNT6_NBR,
FCT_FCST_SLS.ACTL_CLNT7_NBR,
FCT_FCST_SLS.ACTL_REG_AMT,
FCT_FCST_SLS.ACTL_REG_HRS,
FCT_FCST_SLS.ACTL_OT_AMT,
FCT_FCST_SLS.ACTL_OT_HRS,
FCT_FCST_SLS.ACTL_OTH_AMT,
FCT_FCST_SLS.ACTL_OTH_HRS,
FCT_FCST_SLS.ACTL_NPRD_AMT,
FCT_FCST_SLS.ACTL_NPRD_HRS,
FCT_FCST_SLS.ACTL_TRNG_AMT,
FCT_FCST_SLS.ACTL_TRNG_HRS,
FCT_FCST_SLS.ACTL_UNK_AMT,
FCT_FCST_SLS.ACTL_UNK_HRS,
FCT_FCST_SLS.SCHD_AMT,
FCT_FCST_SLS.SCHD_HRS,
FCT_FCST_SLS.SCHD_RATE_AMT,
FCT_FCST_SLS.SCHD_REG_AMT,
FCT_FCST_SLS.SCHD_REG_HRS,
FCT_FCST_SLS.SCHD_OT_AMT,
FCT_FCST_SLS.SCHD_OT_HRS,
FCT_FCST_SLS.SCHD_OTH_AMT,
FCT_FCST_SLS.SCHD_OTH_HRS,
FCT_FCST_SLS.SCHD_NPRD_AMT,
FCT_FCST_SLS.SCHD_NPRD_HRS,
FCT_FCST_SLS.SCHD_TRNG_AMT,
FCT_FCST_SLS.SCHD_TRNG_HRS,
FCT_FCST_SLS.SCHD_UNK_AMT,
FCT_FCST_SLS.SCHD_UNK_HRS,
FCT_FCST_SLS.FCST_AMT,
FCT_FCST_SLS.FCST_HRS,
FCT_FCST_SLS.FCST_RATE_AMT,
FCT_FCST_SLS.FCST_ORIG_CLNT1_NBR,
FCT_FCST_SLS.FCST_CLNT1_NBR,
FCT_FCST_SLS.FCST_ORIG_CLNT2_NBR,
FCT_FCST_SLS.FCST_CLNT2_NBR,
FCT_FCST_SLS.FCST_ORIG_CLNT3_NBR,
FCT_FCST_SLS.FCST_CLNT3_NBR,
FCT_FCST_SLS.FCST_ORIG_CLNT4_NBR,
FCT_FCST_SLS.FCST_CLNT4_NBR,
FCT_FCST_SLS.FCST_ORIG_CLNT5_NBR,
FCT_FCST_SLS.FCST_CLNT5_NBR,
FCT_FCST_SLS.FCST_ORIG_CLNT6_NBR,
FCT_FCST_SLS.FCST_CLNT6_NBR,
FCT_FCST_SLS.FCST_ORIG_CLNT7_NBR,
FCT_FCST_SLS.FCST_CLNT7_NBR,
FCT_FCST_SLS.BUD_AMT,
FCT_FCST_SLS.BUD_HRS,
FCT_FCST_SLS.BUD_RATE_AMT,
FCT_FCST_SLS.BUD_SLS_AMT,
FCT_FCST_SLS.LOCKED_SWT,
FCT_FCST_SLS.UPDT_DTM
FROM ia.FCT_FCST_SLS
WHERE FCT_FCST_SLS.BUSN_DAT > CURRENT_DATE - 36""",username,password,connection_string).withColumn("sys_row_id", monotonically_increasing_id())

# COMMAND ----------
# Processing node Shortcut_to_WFA_FCST_SLS_PRE, type TARGET 
# COLUMN COUNT: 63


Shortcut_to_WFA_FCST_SLS_PRE = SQ_Shortcut_to_FCT_FCST_SLS.selectExpr(
	"CAST(FCST_SLS_SKEY AS DECIMAL(20,0)) as FCST_SLS_SKEY",
	"CAST(BUSN_DAT AS TIMESTAMP) as BUSN_DAT",
	"CAST(ORG_SKEY AS BIGINT) as ORG_SKEY",
	"CAST(ACTL_AMT AS DECIMAL(16,6)) as ACTL_AMT",
	"CAST(ACTL_HRS AS DECIMAL(16,6)) as ACTL_HRS",
	"CAST(ACTL_RATE_AMT AS DECIMAL(16,6)) as ACTL_RATE_AMT",
	"CAST(ACTL_CLNT1_NBR AS DECIMAL(16,6)) as ACTL_CLNT1_NBR",
	"CAST(ACTL_CLNT2_NBR AS DECIMAL(16,6)) as ACTL_CLNT2_NBR",
	"CAST(ACTL_CLNT3_NBR AS DECIMAL(16,6)) as ACTL_CLNT3_NBR",
	"CAST(ACTL_CLNT4_NBR AS DECIMAL(16,6)) as ACTL_CLNT4_NBR",
	"CAST(ACTL_CLNT5_NBR AS DECIMAL(16,6)) as ACTL_CLNT5_NBR",
	"CAST(ACTL_CLNT6_NBR AS DECIMAL(16,6)) as ACTL_CLNT6_NBR",
	"CAST(ACTL_CLNT7_NBR AS DECIMAL(16,6)) as ACTL_CLNT7_NBR",
	"CAST(ACTL_REG_AMT AS DECIMAL(16,6)) as ACTL_REG_AMT",
	"CAST(ACTL_REG_HRS AS DECIMAL(16,6)) as ACTL_REG_HRS",
	"CAST(ACTL_OT_AMT AS DECIMAL(16,6)) as ACTL_OT_AMT",
	"CAST(ACTL_OT_HRS AS DECIMAL(16,6)) as ACTL_OT_HRS",
	"CAST(ACTL_OTH_AMT AS DECIMAL(16,6)) as ACTL_OTH_AMT",
	"CAST(ACTL_OTH_HRS AS DECIMAL(16,6)) as ACTL_OTH_HRS",
	"CAST(ACTL_NPRD_AMT AS DECIMAL(16,6)) as ACTL_NPRD_AMT",
	"CAST(ACTL_NPRD_HRS AS DECIMAL(16,6)) as ACTL_NPRD_HRS",
	"CAST(ACTL_TRNG_AMT AS DECIMAL(16,6)) as ACTL_TRNG_AMT",
	"CAST(ACTL_TRNG_HRS AS DECIMAL(16,6)) as ACTL_TRNG_HRS",
	"CAST(ACTL_UNK_AMT AS DECIMAL(16,6)) as ACTL_UNK_AMT",
	"CAST(ACTL_UNK_HRS AS DECIMAL(16,6)) as ACTL_UNK_HRS",
	"CAST(SCHD_AMT AS DECIMAL(16,6)) as SCHD_AMT",
	"CAST(SCHD_HRS AS DECIMAL(16,6)) as SCHD_HRS",
	"CAST(SCHD_RATE_AMT AS DECIMAL(16,6)) as SCHD_RATE_AMT",
	"CAST(SCHD_REG_AMT AS DECIMAL(16,6)) as SCHD_REG_AMT",
	"CAST(SCHD_REG_HRS AS DECIMAL(16,6)) as SCHD_REG_HRS",
	"CAST(SCHD_OT_AMT AS DECIMAL(16,6)) as SCHD_OT_AMT",
	"CAST(SCHD_OT_HRS AS DECIMAL(16,6)) as SCHD_OT_HRS",
	"CAST(SCHD_OTH_AMT AS DECIMAL(16,6)) as SCHD_OTH_AMT",
	"CAST(SCHD_OTH_HRS AS DECIMAL(16,6)) as SCHD_OTH_HRS",
	"CAST(SCHD_NPRD_AMT AS DECIMAL(16,6)) as SCHD_NPRD_AMT",
	"CAST(SCHD_NPRD_HRS AS DECIMAL(16,6)) as SCHD_NPRD_HRS",
	"CAST(SCHD_TRNG_AMT AS DECIMAL(16,6)) as SCHD_TRNG_AMT",
	"CAST(SCHD_TRNG_HRS AS DECIMAL(16,6)) as SCHD_TRNG_HRS",
	"CAST(SCHD_UNK_AMT AS DECIMAL(16,6)) as SCHD_UNK_AMT",
	"CAST(SCHD_UNK_HRS AS DECIMAL(16,6)) as SCHD_UNK_HRS",
	"CAST(FCST_AMT AS DECIMAL(16,6)) as FCST_AMT",
	"CAST(FCST_HRS AS DECIMAL(16,6)) as FCST_HRS",
	"CAST(FCST_RATE_AMT AS DECIMAL(16,6)) as FCST_RATE_AMT",
	"CAST(FCST_ORIG_CLNT1_NBR AS DECIMAL(16,6)) as FCST_ORIG_CLNT1_NBR",
	"CAST(FCST_CLNT1_NBR AS DECIMAL(16,6)) as FCST_CLNT1_NBR",
	"CAST(FCST_ORIG_CLNT2_NBR AS DECIMAL(16,6)) as FCST_ORIG_CLNT2_NBR",
	"CAST(FCST_CLNT2_NBR AS DECIMAL(16,6)) as FCST_CLNT2_NBR",
	"CAST(FCST_ORIG_CLNT3_NBR AS DECIMAL(16,6)) as FCST_ORIG_CLNT3_NBR",
	"CAST(FCST_CLNT3_NBR AS DECIMAL(16,6)) as FCST_CLNT3_NBR",
	"CAST(FCST_ORIG_CLNT4_NBR AS DECIMAL(16,6)) as FCST_ORIG_CLNT4_NBR",
	"CAST(FCST_CLNT4_NBR AS DECIMAL(16,6)) as FCST_CLNT4_NBR",
	"CAST(FCST_ORIG_CLNT5_NBR AS DECIMAL(16,6)) as FCST_ORIG_CLNT5_NBR",
	"CAST(FCST_CLNT5_NBR AS DECIMAL(16,6)) as FCST_CLNT5_NBR",
	"CAST(FCST_ORIG_CLNT6_NBR AS DECIMAL(16,6)) as FCST_ORIG_CLNT6_NBR",
	"CAST(FCST_CLNT6_NBR AS DECIMAL(16,6)) as FCST_CLNT6_NBR",
	"CAST(FCST_ORIG_CLNT7_NBR AS DECIMAL(16,6)) as FCST_ORIG_CLNT7_NBR",
	"CAST(FCST_CLNT7_NBR AS DECIMAL(16,6)) as FCST_CLNT7_NBR",
	"CAST(BUD_AMT AS DECIMAL(16,6)) as BUD_AMT",
	"CAST(BUD_HRS AS DECIMAL(16,6)) as BUD_HRS",
	"CAST(BUD_RATE_AMT AS DECIMAL(16,6)) as BUD_RATE_AMT",
	"CAST(BUD_SLS_AMT AS DECIMAL(16,6)) as BUD_SLS_AMT",
	"CAST(LOCKED_SWT AS BIGINT) as LOCKED_SWT",
	"CAST(UPDT_DTM AS TIMESTAMP) as UPDT_DTM"
)
# overwriteDeltaPartition(Shortcut_to_WFA_FCST_SLS_PRE,'DC_NBR',dcnbr,f'{raw}.WFA_FCST_SLS_PRE')
Shortcut_to_WFA_FCST_SLS_PRE.write.mode("overwrite").saveAsTable(f'{raw}.WFA_FCST_SLS_PRE')